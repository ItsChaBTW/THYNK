@model IEnumerable<THYNK.Models.EducationalResource>
@using THYNK.Models
@{
    ViewData["Title"] = "Resource Library";
    Layout = "_Layout"; // Using the main layout since this is accessible to all users
}

<div class="container py-5">
    <div class="row mb-4">
        <div class="col-md-8">
            <h1 class="display-6 fw-bold mb-2">Educational Resource Library</h1>
            <p class="text-muted lead">Access disaster management and emergency resources provided by local government units.</p>
        </div>
        <div class="col-md-4 d-flex justify-content-md-end align-items-center">
            <div class="input-group">
                <input type="text" id="resourceSearch" class="form-control" placeholder="Search resources...">
                <button class="btn btn-primary" type="button" id="searchBtn">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
    </div>
    
    @if (!User.Identity.IsAuthenticated)
    {
        <div class="alert alert-info mb-4">
            <div class="d-flex align-items-center">
                <div class="me-3">
                    <i class="fas fa-info-circle fa-2x"></i>
                </div>
                <div>
                    <h5 class="mb-1">Get Full Access</h5>
                    <p class="mb-0">You're viewing the public resources library. <a href="/Identity/Account/Register" class="alert-link">Create an account</a> or <a href="/Identity/Account/Login" class="alert-link">log in</a> to download resources and access exclusive content.</p>
                </div>
            </div>
        </div>
    }
    
    <div class="row mb-4">
        <div class="col-12">
            <ul class="nav nav-pills" id="resourceTabs">
                <li class="nav-item">
                    <a class="nav-link active" data-filter="all">All Resources</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-filter="Guide">Guides</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-filter="Tutorial">Tutorials</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-filter="Infographic">Infographics</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-filter="Document">Documents</a>
                </li>
            </ul>
        </div>
    </div>
    
    <div class="row" id="resourceGrid">
        @foreach (var resource in Model)
        {
            <div class="col-md-6 col-lg-4 mb-4 resource-item" data-type="@resource.Type">
                <div class="card h-100 book-card shadow-sm">
                    <div class="card-header book-header @GetHeaderClass(resource.Type)">
                        <h5 class="m-0 text-white">
                            <i class="@GetResourceIcon(resource.Type) me-2"></i>
                            @resource.Type
                        </h5>
                    </div>
                    
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@resource.Title</h5>
                        <p class="card-text flex-grow-1">@(resource.Description.Length > 120 ? resource.Description.Substring(0, 120) + "..." : resource.Description)</p>
                        
                        <div class="mt-3">
                            <small class="text-muted">
                                <i class="far fa-calendar-alt me-1"></i> Added: @resource.DateAdded.ToString("MMM dd, yyyy")
                                
                                @if (resource.ViewCount.HasValue && resource.ViewCount > 0)
                                {
                                    <span class="ms-2">
                                        <i class="far fa-eye me-1"></i> @resource.ViewCount views
                                    </span>
                                }
                            </small>
                        </div>
                        
                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <a href="@Url.Action("ViewResource", "LGU", new { id = resource.Id })" class="btn btn-primary">
                                <i class="fas fa-book-open me-1"></i> Read More
                            </a>
                            
                            @if (User.Identity.IsAuthenticated && !string.IsNullOrEmpty(resource.FileUrl))
                            {
                                <a href="@resource.FileUrl" download class="btn btn-success">
                                    <i class="fas fa-download me-1"></i> Download
                                </a>
                            }
                            else if (!string.IsNullOrEmpty(resource.FileUrl))
                            {
                                <button class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#loginModal">
                                    <i class="fas fa-download me-1"></i> Download
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    
    @if (!Model.Any())
    {
        <div class="text-center py-5 my-4">
            <i class="fas fa-book fa-3x text-muted mb-3"></i>
            <h4>No Resources Found</h4>
            <p class="text-muted">No educational resources are currently available.</p>
        </div>
    }
</div>

<!-- Login Modal -->
<div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="loginModalLabel">Login Required</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-4">
                    <i class="fas fa-user-lock fa-3x text-primary mb-3"></i>
                    <h4>Access Restricted</h4>
                    <p>Please login or create an account to download resources from our library.</p>
                </div>
                <div class="d-grid gap-2">
                    <a href="/Identity/Account/Login" class="btn btn-primary">
                        <i class="fas fa-sign-in-alt me-2"></i> Login
                    </a>
                    <a href="/Identity/Account/Register" class="btn btn-outline-primary">
                        <i class="fas fa-user-plus me-2"></i> Create Account
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Book styling */
        .book-card {
            transition: all 0.3s;
            border: none;
            overflow: hidden;
        }
        
        .book-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
        }
        
        .book-header {
            padding: 0.75rem 1.25rem;
            font-weight: 500;
        }
        
        .card-title {
            font-weight: 600;
            font-size: 1.1rem;
            margin-bottom: 0.75rem;
        }
        
        /* Resource type styling */
        .header-guide {
            background-color: #4285F4;
        }
        
        .header-tutorial {
            background-color: #0F9D58;
        }
        
        .header-infographic {
            background-color: #DB4437;
        }
        
        .header-video {
            background-color: #F4B400;
        }
        
        .header-document {
            background-color: #6C757D;
        }
        
        .header-faq {
            background-color: #9C27B0;
        }
        
        .header-emergencycontact {
            background-color: #DC3545;
        }
        
        /* Filter tabs */
        .nav-pills {
            margin-bottom: 1.5rem;
        }
        
        .nav-pills .nav-link {
            color: #495057;
            background-color: #f8f9fa;
            border-radius: 30px;
            padding: .5rem 1rem;
            margin-right: 0.5rem;
            margin-bottom: 0.5rem;
            font-weight: 500;
            font-size: 0.9rem;
        }
        
        .nav-pills .nav-link.active {
            background-color: #0d6efd;
            color: white;
        }
        
        /* Media queries for responsive design */
        @@media (max-width: 768px) {
            .nav-pills .nav-link {
                padding: .5rem .75rem;
                font-size: 0.9rem;
            }
            
            .card-title {
                font-size: 1.1rem;
            }
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Filter resources by type
            $('#resourceTabs a').on('click', function() {
                const filter = $(this).data('filter');
                
                // Update active tab
                $('#resourceTabs a').removeClass('active');
                $(this).addClass('active');
                
                if (filter === 'all') {
                    $('.resource-item').show();
                } else {
                    $('.resource-item').hide();
                    $(`.resource-item[data-type="${filter}"]`).show();
                }
            });
            
            // Search functionality
            $('#searchBtn').on('click', function() {
                performSearch();
            });
            
            $('#resourceSearch').on('keyup', function(e) {
                if (e.key === 'Enter') {
                    performSearch();
                }
            });
            
            function performSearch() {
                const searchTerm = $('#resourceSearch').val().toLowerCase();
                
                if (searchTerm.length > 0) {
                    $('.resource-item').each(function() {
                        const title = $(this).find('.card-title').text().toLowerCase();
                        const desc = $(this).find('.card-text').text().toLowerCase();
                        
                        if (title.includes(searchTerm) || desc.includes(searchTerm)) {
                            $(this).show();
                        } else {
                            $(this).hide();
                        }
                    });
                    
                    // Reset filter tabs when searching
                    $('#resourceTabs a').removeClass('active');
                    $('#resourceTabs a[data-filter="all"]').addClass('active');
                } else {
                    // If search is cleared, show all or respect current filter
                    const currentFilter = $('#resourceTabs a.active').data('filter');
                    
                    if (currentFilter === 'all') {
                        $('.resource-item').show();
                    } else {
                        $('.resource-item').hide();
                        $(`.resource-item[data-type="${currentFilter}"]`).show();
                    }
                }
            }
        });
    </script>
}

@functions {
    private string GetHeaderClass(ResourceType type)
    {
        return "header-" + type.ToString().ToLower();
    }
    
    private string GetResourceIcon(ResourceType type)
    {
        switch (type)
        {
            case ResourceType.Guide:
                return "fas fa-compass";
            case ResourceType.Tutorial:
                return "fas fa-chalkboard-teacher";
            case ResourceType.Infographic:
                return "fas fa-chart-pie";
            case ResourceType.Video:
                return "fas fa-video";
            case ResourceType.Document:
                return "fas fa-file-alt";
            case ResourceType.FAQ:
                return "fas fa-question-circle";
            case ResourceType.EmergencyContact:
                return "fas fa-phone-alt";
            default:
                return "fas fa-file";
        }
    }
}