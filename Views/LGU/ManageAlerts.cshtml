@model IEnumerable<THYNK.Models.Alert>
@{
    ViewData["Title"] = "Manage Alerts";
    Layout = "_LGULayout";
}

<div class="card mb-4">
    <div class="card-header bg-danger text-white">
        <div class="d-flex align-items-center">
            <div class="card-icon bg-white text-danger">
                <i class="fas fa-bell"></i>
            </div>
            <div>
                <h5 class="m-0">Manage Alerts</h5>
                <small>Create, edit, and manage emergency alerts for your area</small>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="mb-4">
            <div class="alert alert-info">
                <i class="fas fa-info-circle me-2"></i> As an LGU/SLU (Secondary Level User) you can issue alerts to notify the community about emergency situations.
            </div>
            
            <div class="d-flex flex-wrap justify-content-between align-items-center mb-3">
                <a href="@Url.Action("CreateAlert", "LGU")" class="btn btn-danger mb-2">
                    <i class="fas fa-plus-circle me-2"></i> Create New Alert
                </a>
                <div class="filters mb-2">
                    <div class="btn-group" role="group">
                        <a href="@Url.Action("ManageAlerts", "LGU")" class="btn @(ViewBag.CurrentFilter == null ? "btn-danger" : "btn-outline-danger")">All</a>
                        <a href="@Url.Action("ManageAlerts", "LGU", new { isActive = true })" class="btn @(ViewBag.CurrentFilter == true ? "btn-danger" : "btn-outline-danger")">Active</a>
                        <a href="@Url.Action("ManageAlerts", "LGU", new { isActive = false })" class="btn @(ViewBag.CurrentFilter == false ? "btn-danger" : "btn-outline-danger")">Inactive</a>
                    </div>
                </div>
            </div>
        </div>

        @if (!Model.Any())
        {
            <div class="alert alert-info">
                <i class="fas fa-info-circle me-2"></i> No alerts found matching your criteria.
            </div>
        }
        else
        {
            <div class="table-responsive">
                                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Message</th>
                            <th>Severity</th>
                            <th>Area</th>
                            <th>Issued Date</th>
                            <th>Status</th>
                            <th>Image</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var alert in Model)
                        {
                            <tr>
                                <td>@alert.Title</td>
                                <td>@(alert.Message.Length > 50 ? alert.Message.Substring(0, 47) + "..." : alert.Message)</td>
                                <td>
                                    <span class="badge @(alert.Severity == THYNK.Models.AlertSeverity.Info ? "bg-info" : 
                                                        alert.Severity == THYNK.Models.AlertSeverity.Warning ? "bg-warning" : 
                                                        alert.Severity == THYNK.Models.AlertSeverity.Danger ? "bg-danger" : "bg-dark")">
                                        @alert.Severity
                                    </span>
                                </td>
                                <td>@alert.AffectedArea</td>
                                <td>@alert.DateIssued.ToString("MMM dd, yyyy HH:mm")</td>
                                <td>
                                    @if (alert.IsActive)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Inactive</span>
                                    }
                                    
                                    @if (alert.HasCustomStyling)
                                    {
                                        <span class="badge bg-info ms-1" data-bs-toggle="tooltip" title="Custom styled alert">
                                            <i class="fas fa-paint-brush"></i>
                                        </span>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(alert.ImagePath))
                                    {
                                        <a href="javascript:void(0)" onclick="showImagePreview('@alert.ImagePath', '@alert.Title')" class="position-relative">
                                            <img src="@alert.ImagePath" class="img-thumbnail" style="max-height: 40px; max-width: 60px;" alt="Alert image" />
                                            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-success">
                                                <i class="fas fa-check"></i>
                                            </span>
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="text-muted small">No image</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <a href="@Url.Action("GetAlertDetails", "LGU", new { id = alert.Id })" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#alertDetailsModal" data-alert-id="@alert.Id">
                                            <i class="fas fa-eye"></i> View
                                        </a>
                                        <a href="@Url.Action("EditAlert", "LGU", new { id = alert.Id })" class="btn btn-sm btn-outline-warning">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                        @if (alert.IsActive)
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#deactivateModal@(alert.Id)">
                                                <i class="fas fa-ban"></i> Deactivate
                                            </button>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal@(alert.Id)">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                            
                            <!-- Deactivate Modal -->
                            @if (alert.IsActive)
                            {
                                <div class="modal fade" id="deactivateModal@(alert.Id)" tabindex="-1" aria-labelledby="deactivateModalLabel@(alert.Id)" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="deactivateModalLabel@(alert.Id)">Deactivate Alert</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <p>Are you sure you want to deactivate the alert <strong>@alert.Title</strong>?</p>
                                                <p>This will mark the alert as inactive and it will no longer be shown to users.</p>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                <form asp-action="DeactivateAlert" asp-route-id="@alert.Id" method="post">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-primary">Deactivate Alert</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            
                            <!-- Delete Modal -->
                            @if (!alert.IsActive)
                            {
                                <div class="modal fade" id="deleteModal@(alert.Id)" tabindex="-1" aria-labelledby="deleteModalLabel@(alert.Id)" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="deleteModalLabel@(alert.Id)">Delete Alert</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <p>Are you sure you want to permanently delete the alert <strong>@alert.Title</strong>?</p>
                                                <p>This action cannot be undone.</p>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                <form asp-action="DeleteAlert" asp-route-id="@alert.Id" method="post">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-danger">Delete Alert</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<!-- Alert Details Modal -->
<div class="modal fade" id="alertDetailsModal" tabindex="-1" aria-labelledby="alertDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="alertDetailsModalLabel">Alert Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="alertDetailsContent">
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2">Loading alert details...</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<!-- Image Preview Modal -->
<div class="modal fade" id="imagePreviewModal" tabindex="-1" aria-labelledby="imagePreviewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imagePreviewModalLabel">Alert Image</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="previewImage" src="" class="img-fluid rounded" alt="Alert image preview" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Function to show image preview
        function showImagePreview(imagePath, title) {
            $('#previewImage').attr('src', imagePath);
            $('#imagePreviewModalLabel').text(title + ' - Image');
            var imageModal = new bootstrap.Modal(document.getElementById('imagePreviewModal'));
            imageModal.show();
        }
        
        $(document).ready(function() {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });
            
            // Alert details modal loading
            $('[data-alert-id]').on('click', function(e) {
                e.preventDefault();
                var alertId = $(this).data('alert-id');
                $('#alertDetailsContent').html('<div class="text-center p-4"><i class="fas fa-spinner fa-spin fa-2x"></i><p class="mt-2">Loading alert details...</p></div>');
                
                $.get($(this).attr('href'), function(data) {
                    $('#alertDetailsContent').html(data);
                });
            });
            
            // Add error handler for images
            $('img').on('error', function() {
                $(this).attr('src', '/images/placeholder-image.png');
                $(this).closest('.position-relative').find('.badge').removeClass('bg-success').addClass('bg-danger');
                $(this).closest('.position-relative').find('.badge i').removeClass('fa-check').addClass('fa-exclamation-triangle');
            });
            
            // Alert details modal
            $('#alertDetailsModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var alertId = button.data('alert-id'); // Extract info from data-* attributes
                var modal = $(this);
                
                // Load alert details from server
                $.get('@Url.Action("GetAlertDetails", "LGU")/' + alertId, function(data) {
                    modal.find('#alertDetailsContent').html(data);
                });
            });
            
            // Image preview modal
            $('.preview-image-btn').on('click', function() {
                var imagePath = $(this).data('image-path');
                $('#previewImage').attr('src', imagePath);
            });
            
            // Deactivate and Delete form submission with loading state
            $('form[asp-action="DeactivateAlert"], form[asp-action="DeleteAlert"]').on('submit', function() {
                var btn = $(this).find('button[type="submit"]');
                var originalText = btn.html();
                
                // Show loading state
                btn.prop('disabled', true);
                btn.html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...');
                
                // Re-enable button after 3 seconds if form hasn't submitted (for some reason)
                setTimeout(function() {
                    if (btn.prop('disabled')) {
                        btn.prop('disabled', false);
                        btn.html(originalText);
                    }
                }, 3000);
                
                return true;
            });
            
            // Success message handling
            @if (TempData["SuccessMessage"] != null)
            {
                <text>
                // Show toast notification
                const toastHTML = `
                    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 9999">
                        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
                            <div class="toast-header bg-success text-white">
                                <i class="fas fa-check-circle me-2"></i>
                                <strong class="me-auto">Success</strong>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                            </div>
                            <div class="toast-body">
                                @TempData["SuccessMessage"]
                            </div>
                        </div>
                    </div>
                `;
                
                $('body').append(toastHTML);
                
                // Auto-dismiss after 3 seconds
                setTimeout(function() {
                    $('.toast').toast('hide');
                    setTimeout(function() {
                        $('.toast').parent().remove();
                    }, 500);
                }, 3000);
                </text>
            }
        });
    </script>
} 