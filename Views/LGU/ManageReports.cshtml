@model IEnumerable<THYNK.Models.DisasterReport>
@{
    ViewData["Title"] = "Manage Reports";
    Layout = "_LGULayout";
}

<div class="card mb-4">
    <div class="card-header bg-primary text-white">
        <div class="d-flex align-items-center">
            <div class="card-icon bg-white text-primary">
                <i class="fas fa-clipboard-list"></i>
            </div>
            <div>
                <h5 class="m-0">Manage Incident Reports</h5>
                <small>Review, update, and respond to incident reports assigned to your department</small>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="mb-4">
            <div class="alert alert-info">
                <i class="fas fa-info-circle me-2"></i> As an LGU/SLU (Secondary Level User) your role is to respond to and manage incident reports that have been assigned to your department.
            </div>
            
            <div class="d-flex flex-wrap justify-content-between align-items-center mb-3">
                <div class="filters mb-2">
                    <div class="btn-group" role="group">
                        <a href="@Url.Action("ManageReports", "LGU")" class="btn @(ViewBag.CurrentFilter == null ? "btn-primary" : "btn-outline-primary")">All</a>
                        <a href="@Url.Action("ManageReports", "LGU", new { status = THYNK.Models.ReportStatus.InProgress })" class="btn @(ViewBag.CurrentFilter == THYNK.Models.ReportStatus.InProgress ? "btn-primary" : "btn-outline-primary")">In Progress</a>
                        <a href="@Url.Action("ManageReports", "LGU", new { status = THYNK.Models.ReportStatus.Resolved })" class="btn @(ViewBag.CurrentFilter == THYNK.Models.ReportStatus.Resolved ? "btn-primary" : "btn-outline-primary")">Resolved</a>
                    </div>
                </div>
                <div class="search mb-2">
                    <form method="get" class="input-group">
                        <input type="text" name="search" class="form-control" placeholder="Search reports..." value="@ViewBag.CurrentSearch">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </form>
                </div>
            </div>
        </div>

        @if (!Model.Any())
        {
            <div class="alert alert-info">
                <i class="fas fa-info-circle me-2"></i> No reports found matching your criteria.
            </div>
        }
        else
        {
            <div id="lguReportsTable">
                @await Html.PartialAsync("_LGUReportsTable", Model)
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/adminHub")
            .withAutomaticReconnect()
            .build();

        connection.start()
            .then(() => console.log("SignalR Connected"))
            .catch(err => console.error("SignalR Connection Error: ", err));

        function reloadReportsTable() {
            $.get(window.location.pathname + window.location.search, function (data) {
                const html = $(data);
                const newTable = html.find("#lguReportsTable").html();
                $("#lguReportsTable").html(newTable);
            });
        }

        connection.on("RecentReportUpdated", function(report) {
            reloadReportsTable();
        });
    </script>
} 