@model THYNK.Models.DisasterReport
@{
    ViewData["Title"] = "Report Details";
    Layout = "_LGULayout";
}

<div class="card mb-4">
    <div class="card-header bg-primary text-white">
        <div class="d-flex align-items-center">
            <div class="card-icon bg-white text-primary">
                <i class="fas fa-clipboard-list"></i>
            </div>
            <div>
                <h5 class="m-0">Incident Report Details</h5>
                <small>Review detailed information and respond to the incident</small>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-8">
                <div class="mb-4">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="border-bottom pb-2">Report Information</h5>
                        <div>
                            <span class="badge @(Model.Status == THYNK.Models.ReportStatus.Pending ? "bg-warning" : 
                                             Model.Status == THYNK.Models.ReportStatus.Verified ? "bg-info" : 
                                             Model.Status == THYNK.Models.ReportStatus.InProgress ? "bg-primary" : 
                                             Model.Status == THYNK.Models.ReportStatus.Resolved ? "bg-success" : "bg-secondary")">
                                @Model.Status
                            </span>
                            <span class="badge @(Model.Severity == THYNK.Models.SeverityLevel.Low ? "bg-info" : 
                                              Model.Severity == THYNK.Models.SeverityLevel.Medium ? "bg-warning" : 
                                              Model.Severity == THYNK.Models.SeverityLevel.High ? "bg-danger" : "bg-dark")">
                                @Model.Severity
                            </span>
                            <span class="badge bg-secondary">@Model.Type</span>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Title</label>
                            <p>@Model.Title</p>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Date Reported</label>
                            <p>@Model.DateReported.ToString("MMMM dd, yyyy HH:mm")</p>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-12">
                            <label class="form-label fw-bold">Description</label>
                            <p>@Model.Description</p>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Location</label>
                            <p>@(string.IsNullOrEmpty(Model.Location) ? "Not specified" : Model.Location)</p>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Additional Info</label>
                            <p>@(string.IsNullOrEmpty(Model.AdditionalInfo) ? "None provided" : Model.AdditionalInfo)</p>
                        </div>
                    </div>
                    
                    @if (Model.AssignedTo != null)
                    {
                        <div class="mt-4">
                            <h5 class="border-bottom pb-2">Assignment Information</h5>
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">Assigned To</label>
                                    <p>@Model.AssignedTo.FirstName @Model.AssignedTo.LastName</p>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">Assigned At</label>
                                    <p>@(Model.AssignedAt.HasValue ? Model.AssignedAt.Value.ToString("MMM dd, yyyy HH:mm") : "N/A")</p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">Incident Image</h5>
                    </div>
                    <div class="card-body text-center">
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <img src="@Model.ImageUrl" class="img-fluid mb-3 border" alt="Incident Image" />
                            <a href="@Model.ImageUrl" class="btn btn-sm btn-outline-primary" target="_blank">
                                <i class="fas fa-external-link-alt me-1"></i> View Full Size
                            </a>
                        }
                        else
                        {
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle me-2"></i> No image available
                            </div>
                        }
                    </div>
                </div>
                
                <div class="card mb-4">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">Location</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.Latitude != 0 && Model.Longitude != 0)
                        {
                            <div id="reportMap" style="height: 200px;" class="mb-3 border"></div>
                            <p class="small text-muted mb-0">
                                <strong>Coordinates:</strong> @Model.Latitude, @Model.Longitude
                            </p>
                        }
                        else
                        {
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle me-2"></i> No location coordinates available
                            </div>
                        }
                    </div>
                </div>
                
                <div class="card">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">Actions</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#updateStatusModal">
                                <i class="fas fa-edit me-2"></i> Update Status
                            </button>
                            <a href="@Url.Action("ManageReports", "LGU")" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-2"></i> Back to List
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Status Update Modal -->
<div class="modal fade" id="updateStatusModal" tabindex="-1" aria-labelledby="updateStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateStatusModalLabel">Update Report Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="UpdateReportStatus" asp-route-id="@Model.Id" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="status" class="form-label">Status</label>
                        <select id="status" name="status" class="form-select" required>
                            @{
                                var inProgressSelected = Model.Status == THYNK.Models.ReportStatus.InProgress ? "selected" : "";
                                var resolvedSelected = Model.Status == THYNK.Models.ReportStatus.Resolved ? "selected" : "";
                                
                                @Html.Raw($"<option value=\"2\" {inProgressSelected}>In Progress</option>")
                                @Html.Raw($"<option value=\"3\" {resolvedSelected}>Resolved</option>")
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="notes" class="form-label">Response Notes</label>
                        <textarea id="notes" name="notes" class="form-control" rows="4" required placeholder="Describe the actions taken or resolution details..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Status</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @if (Model.Latitude != 0 && Model.Longitude != 0)
    {
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                mapboxgl.accessToken = 'YOUR_MAPBOX_TOKEN'; // Replace with your actual Mapbox token
                
                const map = new mapboxgl.Map({
                    container: 'reportMap',
                    style: 'mapbox://styles/mapbox/streets-v11',
                    center: [@Model.Longitude, @Model.Latitude],
                    zoom: 14
                });
                
                // Add marker
                new mapboxgl.Marker()
                    .setLngLat([@Model.Longitude, @Model.Latitude])
                    .addTo(map);
                    
                // Add controls
                map.addControl(new mapboxgl.NavigationControl(), 'top-right');
            });
        </script>
    }
} 