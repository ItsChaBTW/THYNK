@model IEnumerable<THYNK.Models.ChatSession>
@{
    ViewData["Title"] = "Chat History";
    Layout = "_LGULayout";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Support Chat History</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/LGU/Dashboard">Dashboard</a></li>
        <li class="breadcrumb-item"><a href="/LGU/ChatSupport">Support Chats</a></li>
        <li class="breadcrumb-item active">History</li>
    </ol>

    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div>
                <i class="fas fa-history me-1"></i>
                Chat History
            </div>
            <a href="@Url.Action("ChatSupport", "LGU")" class="btn btn-primary btn-sm">
                <i class="fas fa-comments me-1"></i> Active Chats
            </a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="chatHistoryTable">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Resident</th>
                            <th>Title</th>
                            <th>Category</th>
                            <th>Status</th>
                            <th>Started</th>
                            <th>Ended</th>
                            <th>Messages</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var chat in Model)
                        {
                            <tr>
                                <td>@chat.Id</td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="avatar-sm bg-light rounded-circle me-2 d-flex align-items-center justify-content-center">
                                            <i class="fas fa-user text-secondary"></i>
                                        </div>
                                        <div>
                                            <div class="fw-medium">@($"{chat.User?.FirstName} {chat.User?.LastName}")</div>
                                            <small class="text-muted">@chat.User?.Email</small>
                                        </div>
                                    </div>
                                </td>
                                <td>@(string.IsNullOrEmpty(chat.Title) ? "Chat #" + chat.Id : chat.Title)</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(chat.Category))
                                    {
                                        <span class="badge bg-info">@chat.Category</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    @if (chat.Status == ChatStatus.Active)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else if (chat.Status == ChatStatus.Pending)
                                    {
                                        <span class="badge bg-warning text-dark">Pending</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Closed</span>
                                    }
                                </td>
                                <td>@chat.StartTime.ToString("MMM dd, yyyy HH:mm")</td>
                                <td>
                                    @(chat.EndTime.HasValue ? chat.EndTime.Value.ToString("MMM dd, yyyy HH:mm") : "-")
                                </td>
                                <td class="text-center">
                                    @(chat.Messages?.Count ?? 0)
                                </td>
                                <td>
                                    <a href="@Url.Action("ChatSupport", "LGU", new { chatId = chat.Id })" class="btn btn-sm btn-primary">
                                        <i class="fas fa-eye me-1"></i> View
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize DataTable
            $('#chatHistoryTable').DataTable({
                order: [[5, 'desc']], // Sort by start time descending by default
                responsive: true,
                pageLength: 25,
                language: {
                    search: "Search chats:",
                    lengthMenu: "Show _MENU_ chats per page",
                    info: "Showing _START_ to _END_ of _TOTAL_ chats"
                }
            });
        });
    </script>
} 