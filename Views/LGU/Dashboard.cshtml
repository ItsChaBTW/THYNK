@using System.Security.Claims
@{
    ViewData["Title"] = "LGU Dashboard";
    Layout = "_LGULayout";
}

<style>
    /* Enhanced Minimalist Dashboard Styles */
    .dashboard-section {
        margin-bottom: 2.5rem;
        position: relative;
    }
    
    .dashboard-card {
        border: none;
        border-radius: 0.5rem;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.03);
        transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        overflow: hidden;
        background-color: #ffffff;
    }
    
    .dashboard-card:hover {
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.06);
        transform: translateY(-3px);
    }
    
    .section-title {
        font-size: 0.75rem;
        font-weight: 600;
        letter-spacing: 0.08em;
        color: var(--dark-alt);
        margin-bottom: 0.8rem;
        position: relative;
        padding-left: 0.75rem;
        display: inline-block;
    }
    
    .section-title::before {
        content: '';
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);
        width: 4px;
        height: 16px;
        background-color: var(--sidebar-hover);
        border-radius: 2px;
    }
    
    .action-btn {
        border-radius: 0.3rem;
        padding: 0.9rem 1.25rem;
        font-weight: 500;
        font-size: 0.9rem;
        letter-spacing: 0.02em;
        transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .action-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    }
    
    .action-btn:active {
        transform: translateY(0);
    }
    
    .action-btn i {
        margin-right: 0.5rem;
        font-size: 1rem;
    }
    
    .action-btn.create-alert {
        background-color: var(--danger);
        background-image: linear-gradient(to right, var(--danger), #e84e5a);
    }
    
    .action-btn.manage-reports {
        background-color: var(--sidebar-bg);
        background-image: linear-gradient(to right, var(--sidebar-bg), var(--sidebar-light));
    }
    
    .action-btn.manage-resources {
        background-color: var(--sidebar-accent);
        background-image: linear-gradient(to right, var(--sidebar-accent), #4dabf7);
    }
    
    .list-item {
        border-left: none;
        border-right: none;
        border-top: none;
        border-bottom: 1px solid rgba(0, 0, 0, 0.04);
        padding: 1.2rem 1.5rem;
        transition: all 0.2s ease;
    }
    
    .list-item:last-child {
        border-bottom: none;
    }
    
    .list-item:hover {
        background-color: rgba(0, 0, 0, 0.01);
    }
    
    .item-title {
        font-size: 0.95rem;
        font-weight: 500;
        color: var(--primary);
        margin-bottom: 0.35rem;
        line-height: 1.4;
    }
    
    .item-date {
        font-size: 0.7rem;
        color: var(--dark-alt);
        padding: 0.25rem 0.5rem;
        background-color: rgba(0, 0, 0, 0.03);
        border-radius: 3px;
        display: inline-block;
    }
    
    .item-content {
        font-size: 0.85rem;
        color: var(--dark-light);
        margin-bottom: 0.6rem;
        line-height: 1.5;
    }
    
    .item-footer {
        font-size: 0.75rem;
        color: var(--muted);
        display: flex;
        align-items: center;
        flex-wrap: wrap;
        gap: 0.5rem;
    }
    
    .status-indicator {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        display: inline-block;
        margin-right: 0.5rem;
        position: relative;
    }
    
    .status-indicator::after {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        background-color: inherit;
        border-radius: 50%;
        opacity: 0.2;
        z-index: -1;
    }
    
    .empty-state {
        padding: 3.5rem 1.5rem;
        text-align: center;
        background-color: rgba(0, 0, 0, 0.01);
        border-radius: 0.5rem;
    }
    
    .empty-icon {
        font-size: 2rem;
        color: var(--muted);
        margin-bottom: 1rem;
        opacity: 0.5;
    }
    
    .empty-text {
        font-size: 0.9rem;
        color: var(--dark-alt);
        margin-bottom: 1.5rem;
        font-weight: 400;
    }
    
    .badge {
        font-weight: 400;
        padding: 0.3em 0.6em;
        font-size: 0.7em;
        border-radius: 3px;
        letter-spacing: 0.02em;
    }
    
    .resource-card {
        text-align: center;
        padding: 2rem 1.5rem;
        height: 100%;
        border-radius: 0.5rem;
        background-color: #ffffff;
        border: 1px solid rgba(0, 0, 0, 0.04);
        transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        position: relative;
        overflow: hidden;
    }
    
    .resource-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background-color: var(--sidebar-hover);
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    
    .resource-card:hover {
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.05);
        transform: translateY(-4px);
        border-color: rgba(0, 0, 0, 0);
    }
    
    .resource-card:hover::before {
        opacity: 1;
    }
    
    .resource-icon {
        font-size: 1.75rem;
        margin-bottom: 1.25rem;
        color: var(--sidebar-hover);
        transition: all 0.3s ease;
        display: inline-block;
    }
    
    .resource-card:hover .resource-icon {
        transform: scale(1.1);
    }
    
    .btn-outline-secondary {
        color: var(--dark-alt);
        border-color: rgba(0, 0, 0, 0.1);
        background-color: transparent;
        transition: all 0.2s ease;
        font-size: 0.8rem;
        font-weight: 500;
    }
    
    .btn-outline-secondary:hover {
        background-color: var(--sidebar-hover);
        border-color: var(--sidebar-hover);
        color: white;
    }
    
    .stats-summary {
        display: flex;
        justify-content: space-between;
        margin-bottom: 1.5rem;
    }
    
    .stat-card {
        flex: 1;
        background-color: #ffffff;
        border-radius: 0.5rem;
        padding: 1.2rem;
        text-align: center;
        transition: all 0.2s ease;
        border: 1px solid rgba(0, 0, 0, 0.04);
        margin: 0 0.5rem;
    }
    
    .stat-card:first-child {
        margin-left: 0;
    }
    
    .stat-card:last-child {
        margin-right: 0;
    }
    
    .stat-card:hover {
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        transform: translateY(-2px);
    }
    
    .stat-value {
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--primary);
        margin-bottom: 0.25rem;
    }
    
    .stat-label {
        font-size: 0.8rem;
        color: var(--dark-alt);
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }
    
    .card-accent-alerts {
        border-left: 3px solid var(--danger);
    }
    
    .card-accent-reports {
        border-left: 3px solid var(--sidebar-bg);
    }
    
    .card-accent-community {
        border-left: 3px solid var(--success);
    }
    
    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }
    
    .dashboard-section {
        animation: fadeIn 0.5s ease forwards;
    }
    
    .dashboard-section:nth-child(2) {
        animation-delay: 0.1s;
    }
    
    .dashboard-section:nth-child(3) {
        animation-delay: 0.2s;
    }
    
    .dashboard-section:nth-child(4) {
        animation-delay: 0.3s;
    }
    
    .dashboard-section:nth-child(5) {
        animation-delay: 0.4s;
    }

    /* Animation styles */
    .count-updated {
        animation: pulse 1s ease-in-out;
    }
    @@keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.2); }
        100% { transform: scale(1); }
    }
    #recentReportsContainer {
        transition: opacity 0.3s ease-in-out;
    }
    .highlight-new {
        animation: highlight 2s ease-in-out;
    }
    @@keyframes highlight {
        0% { background-color: rgba(255, 193, 7, 0.2); }
        100% { background-color: transparent; }
    }
    .list-item {
        transition: background-color 0.3s ease-in-out;
    }
</style>

<!-- Stats Summary -->
<div class="dashboard-section">
    <div class="stats-summary">
        <div class="stat-card">
            <div class="stat-value">@(ViewBag.ActiveAlerts?.Count ?? 0)</div>
            <div class="stat-label">Active Alerts</div>
        </div>
        <div class="stat-card">
            <div class="stat-value" id="recentReportsCount">@(ViewBag.RecentReports?.Count ?? 0)</div>
            <div class="stat-label">Recent Reports</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@(ViewBag.CommunityUpdates?.Count ?? 0)</div>
            <div class="stat-label">Updates</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">3</div>
            <div class="stat-label">Resources</div>
        </div>
    </div>
</div>

    <!-- Quick Actions -->
<div class="dashboard-section">
    <h6 class="section-title mb-3">QUICK ACTIONS</h6>
                <div class="row g-3">
                    <div class="col-md-4">
            <a href="@Url.Action("ManageAlerts", "LGU")" class="btn action-btn create-alert w-100 text-white">
                <i class="fas fa-bell"></i>Manage Alerts
                        </a>
                    </div>
                    <div class="col-md-4">
            <a href="@Url.Action("ManageReports", "LGU")" class="btn action-btn manage-reports w-100 text-white">
                <i class="fas fa-clipboard-list"></i>Manage Reports
                        </a>
                    </div>
                    <div class="col-md-4">
            <a href="@Url.Action("ManageResources", "LGU")" class="btn action-btn manage-resources w-100 text-white">
                <i class="fas fa-book"></i>Manage Resources
                        </a>
            </div>
        </div>
    </div>

<!-- Alerts and Reports Section -->
<div class="row">
    <!-- Active Alerts -->
    <div class="col-12 col-lg-6 dashboard-section">
        <h6 class="section-title">ACTIVE ALERTS</h6>
        <div class="dashboard-card card-accent-alerts">
                @if (ViewBag.ActiveAlerts != null && ViewBag.ActiveAlerts.Count > 0)
                {
                <div class="p-0">
                        @foreach (var alert in ViewBag.ActiveAlerts)
                        {
                        <div class="list-item">
                            <div class="d-flex w-100 justify-content-between align-items-start">
                                <div>
                                    <h6 class="item-title">
                                        <span class="status-indicator" style="background-color: @(alert.Severity == AlertSeverity.Critical ? "var(--danger)" : 
                                          alert.Severity == AlertSeverity.Danger ? "#fd7e14" : 
                                           alert.Severity == AlertSeverity.Warning ? "var(--warning)" : "var(--info)")"></span>
                                        @alert.Title
                                    </h6>
                                    <p class="item-content">@alert.Message</p>
                                    <div class="item-footer">
                                        <i class="fas fa-map-marker-alt me-1" style="font-size: 0.7rem;"></i>
                                        @alert.AffectedArea
                                    </div>
                                </div>
                                <span class="item-date">
                                    <i class="far fa-clock me-1"></i>
                                    @alert.DateIssued.ToString("MMM dd, HH:mm")
                                </span>
                            </div>
                            </div>
                        }
                    <div class="p-3 text-end">
                        <a href="@Url.Action("ManageAlerts", "LGU")" class="btn btn-sm btn-outline-secondary">
                            <i class="fas fa-arrow-right me-1"></i> View All Alerts
                        </a>
                    </div>
                    </div>
                }
                else
                {
                <div class="empty-state">
                    <i class="fas fa-check-circle empty-icon"></i>
                    <p class="empty-text">No active alerts at this time</p>
                    <a href="@Url.Action("CreateAlert", "LGU")" class="btn btn-sm action-btn create-alert text-white">
                        <i class="fas fa-plus me-1"></i> Create New Alert
                    </a>
                    </div>
                }
        </div>
    </div>

    <!-- Recent Reports -->
    <div class="col-12 col-lg-6 dashboard-section">
        <h6 class="section-title">RECENT REPORTS</h6>
        <div class="dashboard-card card-accent-reports">
                @if (ViewBag.RecentReports != null && ViewBag.RecentReports.Count > 0)
                {
                    <div id="recentReportsContainer">
                        @await Html.PartialAsync("_LGURecentReports", ViewBag.RecentReports as IEnumerable<THYNK.Models.DisasterReport>)
                    </div>
                    <div class="p-3 text-end">
                        <a href="@Url.Action("ManageReports", "LGU")" class="btn btn-sm btn-outline-secondary">
                            <i class="fas fa-arrow-right me-1"></i> View All Reports
                        </a>
                    </div>
                }
                else
                {
                    <div class="empty-state">
                        <i class="fas fa-clipboard-check empty-icon"></i>
                        <p class="empty-text">No recent reports in your area</p>
                    </div>
                }
        </div>
    </div>

    <!-- Community Updates -->
    <div class="dashboard-section">
        <h6 class="section-title">COMMUNITY UPDATES</h6>
        <div class="dashboard-card card-accent-community">
                @if (ViewBag.CommunityUpdates != null && ViewBag.CommunityUpdates.Count > 0)
                {
                <div class="p-0">
                        @foreach (var update in ViewBag.CommunityUpdates)
                        {
                        <div class="list-item">
                            <div class="d-flex w-100 justify-content-between align-items-start">
                                <div>
                                    <h6 class="item-title">
                                        <span class="badge @(update.Type == UpdateType.HelpRequest ? "bg-danger" : 
                                                            update.Type == UpdateType.StatusUpdate ? "bg-info" : 
                                                            update.Type == UpdateType.ResourceSharing ? "bg-success" : 
                                                            update.Type == UpdateType.Information ? "bg-primary" : "bg-secondary")">
                                            @update.Type
                                        </span>
                                    </h6>
                                    <p class="item-content">@update.Content</p>
                                    <div class="item-footer">
                                        <i class="fas fa-user me-1" style="font-size: 0.7rem;"></i>
                                        Posted by @(update.User != null ? update.User.UserName : "Unknown User")
                                    </div>
                                </div>
                                <span class="item-date">
                                    <i class="far fa-clock me-1"></i>
                                    @update.DatePosted.ToString("MMM dd, HH:mm")
                                </span>
                            </div>
                            </div>
                        }
                    <div class="p-3 text-end">
                        <a href="@Url.Action("CommunityFeed", "LGU")" class="btn btn-sm btn-outline-secondary">
                            <i class="fas fa-arrow-right me-1"></i> View Community Feed
                        </a>
                    </div>
                    </div>
                }
                else
                {
                <div class="empty-state">
                    <i class="fas fa-comments empty-icon"></i>
                    <p class="empty-text">No community updates available</p>
                    </div>
                }
        </div>
    </div>

    <!-- Educational Resources -->
    <div class="dashboard-section">
        <h6 class="section-title">EDUCATIONAL RESOURCES</h6>
        <div class="row g-3">
            <div class="col-md-4">
                <div class="resource-card">
                    <i class="fas fa-plus-circle resource-icon"></i>
                    <h6 class="mb-2">Add New Resource</h6>
                    <p class="small text-muted mb-4">Create new educational content for your community</p>
                    <a href="@Url.Action("ManageResources", "LGU")" class="btn btn-sm btn-outline-secondary px-3">
                        <i class="fas fa-plus me-2"></i>Add Resource
                    </a>
                </div>
            </div>
            <div class="col-md-4">
                <div class="resource-card">
                    <i class="fas fa-edit resource-icon"></i>
                    <h6 class="mb-2">Edit Resources</h6>
                    <p class="small text-muted mb-4">Update existing educational materials</p>
                    <a href="@Url.Action("ManageResources", "LGU")" class="btn btn-sm btn-outline-secondary px-3">
                        <i class="fas fa-edit me-2"></i>Edit Resources
                    </a>
                            </div>
                        </div>
            <div class="col-md-4">
                <div class="resource-card">
                    <i class="fas fa-chart-line resource-icon"></i>
                    <h6 class="mb-2">View Analytics</h6>
                    <p class="small text-muted mb-4">Monitor resource usage and engagement</p>
                    <a href="@Url.Action("ManageResources", "LGU")" class="btn btn-sm btn-outline-secondary px-3">
                        <i class="fas fa-chart-bar me-2"></i>View Analytics
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Function to update recent reports count
        async function updateRecentReportsCount() {
            try {
                const response = await fetch('@Url.Action("GetRecentReportsCount", "LGU")');
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                const data = await response.json();
                const countElement = document.getElementById('recentReportsCount');
                if (countElement) {
                    countElement.textContent = data.count;
                    countElement.classList.add('count-updated');
                    setTimeout(() => countElement.classList.remove('count-updated'), 1000);
                }
            } catch (error) {
                console.error('Error updating recent reports count:', error);
            }
        }

        // Function to reload recent reports with fade effect
        async function reloadRecentReports() {
            const container = document.getElementById('recentReportsContainer');
            if (!container) return;

            try {
                const response = await fetch('@Url.Action("GetRecentReports", "LGU")');
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                const html = await response.text();
                
                // Create a temporary container to parse the HTML
                const tempContainer = document.createElement('div');
                tempContainer.innerHTML = html;
                
                // Add fade out effect
                container.style.opacity = '0';
                container.style.transition = 'opacity 0.3s ease-in-out';
                
                // Update content after fade out
                setTimeout(() => {
                    container.innerHTML = tempContainer.innerHTML;
                    container.style.opacity = '1';
                    
                    // Add highlight effect to new items
                    const newItems = container.querySelectorAll('.report-item');
                    newItems.forEach(item => {
                        item.classList.add('highlight-new');
                        setTimeout(() => item.classList.remove('highlight-new'), 2000);
                    });
                }, 300);
            } catch (error) {
                console.error('Error reloading recent reports:', error);
            }
        }

        // Set up periodic refresh
        let refreshInterval = setInterval(() => {
            updateRecentReportsCount();
            reloadRecentReports();
        }, 30000);

        // Listen for real-time updates
        document.addEventListener('DOMContentLoaded', () => {
            // Initial load
            updateRecentReportsCount();
            reloadRecentReports();

            // Listen for real-time events
            window.addEventListener('reportAssigned', (event) => {
                console.log('Report assigned event received:', event.detail);
                updateRecentReportsCount();
                reloadRecentReports();
            });

            window.addEventListener('reportStatusUpdated', (event) => {
                console.log('Report status updated event received:', event.detail);
                updateRecentReportsCount();
                reloadRecentReports();
            });

            window.addEventListener('newIncidentReport', (event) => {
                console.log('New incident report event received:', event.detail);
                updateRecentReportsCount();
                reloadRecentReports();
            });
        });

        // Clean up interval when leaving the page
        window.addEventListener('beforeunload', () => {
            if (refreshInterval) {
                clearInterval(refreshInterval);
            }
        });

        if (typeof connection !== 'undefined') {
            connection.on("RecentReportUpdated", function(report) {
                if (typeof reloadReportsTable === 'function') {
                    reloadReportsTable();
                } else if (typeof fetchRecentReports === 'function') {
                    fetchRecentReports();
                }
            });
        }
    </script>
}
</div> 
