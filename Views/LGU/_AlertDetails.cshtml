@model THYNK.Models.Alert

<div class="card border-0">
    <div class="card-body px-0">
        <div class="row mb-4">
            <div class="col-md-6">
                <h5 class="border-bottom pb-2">Alert Information</h5>
                <div class="mb-3">
                    <label class="form-label fw-bold">Title</label>
                    <p>@Model.Title</p>
                </div>
                <div class="mb-3">
                    <label class="form-label fw-bold">Message</label>
                    <p>@Model.Message</p>
                </div>
                <div class="mb-3">
                    <label class="form-label fw-bold">Affected Area</label>
                    <p>@Model.AffectedArea</p>
                </div>
            </div>
            <div class="col-md-6">
                <h5 class="border-bottom pb-2">Status</h5>
                <div class="mb-3">
                    <label class="form-label fw-bold">Severity</label>
                    <p>
                        <span class="badge @(Model.Severity == THYNK.Models.AlertSeverity.Info ? "bg-info" : 
                                            Model.Severity == THYNK.Models.AlertSeverity.Warning ? "bg-warning" : 
                                            Model.Severity == THYNK.Models.AlertSeverity.Danger ? "bg-danger" : 
                                            Model.Severity == THYNK.Models.AlertSeverity.Critical ? "bg-dark" : "bg-secondary")">
                            @Model.Severity
                        </span>
                    </p>
                </div>
                <div class="mb-3">
                    <label class="form-label fw-bold">Date Issued</label>
                    <p>@Model.DateIssued.ToString("MMMM dd, yyyy HH:mm")</p>
                </div>
                <div class="mb-3">
                    <label class="form-label fw-bold">Status</label>
                    <p>
                        @if (Model.IsActive)
                        {
                            <span class="badge bg-success">Active</span>
                        }
                        
                        else
                        {
                            <span class="badge bg-secondary">Inactive</span>
                        }
                    </p>
                </div>
                @if (Model.ExpiresAt.HasValue)
                {
                    <div class="mb-3">
                        <label class="form-label fw-bold">Expires At</label>
                        <p>@Model.ExpiresAt.Value.ToString("MMMM dd, yyyy HH:mm")</p>
                    </div>
                }
            </div>
        </div>
        
        <div class="row">
            <div class="col-12">
                <h5 class="border-bottom pb-2">Issued By</h5>
                @if (Model.User != null)
                {
                    <div class="mb-3">
                        <p><strong>@Model.User.FirstName @Model.User.LastName</strong> (@Model.User.Email)</p>
                    </div>
                }
                else
                {
                    <p>Unknown issuer</p>
                }
            </div>
        </div>
        
        <div class="row mt-3">
            <div class="col-12">
                <div class="d-flex justify-content-end">
                    @if (Model.IsActive)
                    {
                        <a href="@Url.Action("EditAlert", "LGU", new { id = Model.Id })" class="btn btn-warning me-2">
                            <i class="fas fa-edit me-1"></i> Edit
                        </a>
                        <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#deactivateModal@(Model.Id)" data-bs-dismiss="modal">
                            <i class="fas fa-ban me-1"></i> Deactivate
                        </button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal@(Model.Id)" data-bs-dismiss="modal">
                            <i class="fas fa-trash me-1"></i> Delete
                        </button>
                    }
                </div>
            </div>
        </div>
        
        @if (Model.HasCustomStyling)
        {
            <div class="row">
                <div class="col-12">
                    <h5 class="border-bottom pb-2">Alert Preview</h5>
                    
                    <div class="alert alert-@Model.ColorScheme @(Model.BackgroundStyle == "warning-pattern" ? "bg-pattern" : Model.BackgroundStyle == "info-gradient" ? "bg-gradient" : "")">
                        <div class="d-flex">
                            <div class="alert-icon me-3">
                                @{
                                    var iconClass = Model.Severity == AlertSeverity.Info ? "fas fa-info-circle" :
                                                    Model.Severity == AlertSeverity.Warning ? "fas fa-exclamation-circle" :
                                                    Model.Severity == AlertSeverity.Danger ? "fas fa-exclamation-triangle" :
                                                    "fas fa-skull-crossbones";
                                    
                                    if (Model.IconStyle == "outlined")
                                    {
                                        iconClass = iconClass.Replace("fas", "far");
                                    }
                                    else if (Model.IconStyle == "minimal")
                                    {
                                        iconClass = iconClass.Split(' ')[0] + " fa-" + iconClass.Split('-')[1];
                                    }
                                }
                                <i class="@iconClass fa-2x"></i>
                            </div>
                            <div>
                                <h5 class="alert-heading">@Model.Title</h5>
                                <p class="mb-0">@Model.Message</p>
                                <small class="text-muted">@Model.AffectedArea</small>
                            </div>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(Model.ImagePath))
                        {
                            <div class="mt-3 text-center">
                                <img src="@Model.ImagePath" class="img-fluid rounded" style="max-height: 200px;" alt="Alert Image" />
                            </div>
                        }
                    </div>
                    
                    <div class="mt-3">
                        <h6 class="text-muted">Custom Styling Information</h6>
                        <div class="row g-2 small">
                            <div class="col-md-4">
                                <span class="fw-bold">Background Style:</span> @Model.BackgroundStyle
                            </div>
                            <div class="col-md-4">
                                <span class="fw-bold">Icon Style:</span> @Model.IconStyle
                            </div>
                            <div class="col-md-4">
                                <span class="fw-bold">Color Scheme:</span> @Model.ColorScheme
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .bg-pattern {
        background-image: repeating-linear-gradient(
            45deg,
            rgba(255,255,255,0.1),
            rgba(255,255,255,0.1) 10px,
            rgba(255,255,255,0.2) 10px,
            rgba(255,255,255,0.2) 20px
        );
    }
    
    .bg-gradient {
        background-image: linear-gradient(
            135deg,
            rgba(255,255,255,0.2) 0%,
            rgba(255,255,255,0) 100%
        );
    }
    
    .alert-icon {
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style> 