@model IEnumerable<THYNK.Models.CommunityUpdate>
@{
    ViewData["Title"] = "Community Feed";
    Layout = "_CommunityLayout";
}

<div class="container-fluid px-4 py-4">
    <div class="row g-4">
        <!-- Create Post Card - Trigger for Modal -->
        <div class="col-12">
            <div class="card shadow-sm border-0 create-post-card">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center">
                            <div class="avatar-circle me-3">
                                <i class="fas fa-user"></i>
                            </div>
                            <div class="flex-grow-1">
                            <div class="form-control-static bg-light rounded p-3" data-bs-toggle="modal" data-bs-target="#createPostModal">
                                <span class="text-muted">Share your thoughts, updates, or information with the community...</span>
                            </div>
                        </div>
                                </div>
                    <div class="post-shortcuts d-flex align-items-center justify-content-between mt-3">
                            <div class="d-flex gap-2">
                            <button type="button" class="btn btn-light rounded-pill px-3" data-bs-toggle="modal" data-bs-target="#createPostModal" data-post-type="GeneralUpdate">
                                <i class="fas fa-pen text-primary"></i>
                                <span class="ms-1 d-none d-md-inline">Post</span>
                            </button>
                            <button type="button" class="btn btn-light rounded-pill px-3" data-bs-toggle="modal" data-bs-target="#createPostModal" data-post-type="HelpRequest">
                                <i class="fas fa-hands-helping text-danger"></i>
                                <span class="ms-1 d-none d-md-inline">Help</span>
                            </button>
                            <button type="button" class="btn btn-light rounded-pill px-3" data-bs-toggle="modal" data-bs-target="#createPostModal" data-post-type="ResourceSharing">
                                <i class="fas fa-share-alt text-success"></i>
                                <span class="ms-1 d-none d-md-inline">Resource</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Feed Posts -->
        <div class="col-12">
            <div class="card shadow-sm border-0 mb-4">
                <div class="card-body p-3">
                    <div class="feed-header d-flex flex-column flex-md-row justify-content-between align-items-md-center">
                        <h5 class="m-0 mb-2 mb-md-0">Community Updates</h5>
                        <div class="feed-controls d-flex align-items-center">
                            <div class="search-container me-2">
                                <div class="input-group">
                                    <span class="input-group-text bg-light border-0">
                                        <i class="fas fa-search text-muted"></i>
                                    </span>
                                    <input type="text" class="form-control bg-light border-0" id="post-search" placeholder="Search posts...">
                                </div>
                            </div>
                <div class="feed-filters">
                                <select class="form-select form-select-sm bg-light border-0" id="post-filter">
                        <option value="all">All Posts</option>
                                    <option value="HelpRequest">Help Requests</option>
                                    <option value="StatusUpdate">Status Updates</option>
                                    <option value="ResourceSharing">Resources</option>
                                    <option value="Information">Information</option>
                                    <option value="GeneralUpdate">General Updates</option>
                    </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="posts-container">
            @if (Model != null && Model.Any())
            {
                foreach (var post in Model)
                {
                        <div class="card shadow-sm border-0 mb-4 post-card" data-post-type="@post.Type">
                        <div class="card-body p-4">
                            <div class="d-flex align-items-center mb-3">
                                <div class="avatar-circle me-3">
                                    <i class="fas fa-user"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <h6 class="mb-0">@(post.User != null ? $"{post.User.FirstName} {post.User.LastName}" : "Unknown User")</h6>
                                    <small class="text-muted">@post.DatePosted.ToString("MMM dd, yyyy HH:mm")</small>
                                </div>
                                <div class="post-type">
                                    <span class="badge rounded-pill @(post.Type == UpdateType.HelpRequest ? "bg-danger" : 
                                                                    post.Type == UpdateType.StatusUpdate ? "bg-info" : 
                                                                    post.Type == UpdateType.ResourceSharing ? "bg-success" : 
                                                                    post.Type == UpdateType.Information ? "bg-primary" : "bg-secondary")">
                                        @post.Type
                                    </span>
                                </div>
                            </div>

                                <div class="post-content mb-3">
                                    <p class="card-text mb-0">@post.Content</p>
                                </div>

                                @if (!string.IsNullOrEmpty(post.ImageUrl))
                                {
                                    <div class="post-image mb-3">
                                        <img src="@post.ImageUrl" class="img-fluid rounded" alt="Post image" 
                                             onclick="openImageViewer(this.src)" style="cursor: pointer;">
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(post.Location) && post.Location != "Not specified")
                                {
                                    <div class="post-location mb-3">
                                        <a href="https://www.google.com/maps?q=@post.Latitude,@post.Longitude" 
                                           target="_blank" class="text-decoration-none">
                                            <i class="fas fa-map-marker-alt text-danger me-1"></i>
                                            <span class="text-muted">@post.Location</span>
                                            <i class="fas fa-external-link-alt ms-1 text-muted small"></i>
                                        </a>
                                    </div>
                                }

                                <div class="post-actions d-flex align-items-center gap-3">
                                    <button class="btn btn-subtle btn-sm rounded-pill post-like-btn" data-post-id="@post.Id">
                                        <i class="far fa-heart me-1"></i><span class="like-count">0</span> Like
                                    </button>
                                    <button class="btn btn-subtle btn-sm rounded-pill" data-bs-toggle="collapse" data-bs-target="#comments-@post.Id">
                                        <i class="far fa-comment me-1"></i>Comment
                                    </button>
                                    <button class="btn btn-subtle btn-sm rounded-pill share-btn" data-post-id="@post.Id">
                                        <i class="far fa-share-square me-1"></i>Share
                                    </button>
                                </div>
                                
                                <!-- Comments Section (Collapsed by default) -->
                                <div class="collapse mt-3" id="comments-@post.Id">
                                    <div class="card card-body bg-light border-0">
                                        <div class="comments-list mb-3">
                                            <!-- Empty placeholder for comments -->
                                            <div class="text-center text-muted py-3 empty-comments">
                                                <i class="far fa-comment-dots mb-2"></i>
                                                <p class="small mb-0">No comments yet. Be the first to comment!</p>
                                            </div>
                                        </div>
                                        <div class="d-flex">
                                            <div class="avatar-circle me-2" style="width:30px;height:30px">
                                                <i class="fas fa-user small"></i>
                                            </div>
                                            <div class="flex-grow-1">
                                                <div class="input-group">
                                                    <input type="text" class="form-control bg-white border comment-input" 
                                                           placeholder="Write a comment..." data-post-id="@post.Id">
                                                    <button class="btn btn-primary send-comment-btn" type="button" data-post-id="@post.Id">
                                                        <i class="fas fa-paper-plane"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-5 empty-state">
                        <div class="empty-state-icon mb-3">
                            <i class="fas fa-comments text-muted fa-4x"></i>
                        </div>
                        <h5 class="text-muted mb-2">No Posts Yet</h5>
                        <p class="text-muted mb-0">Be the first to share something with the community!</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Create Post Modal -->
<div class="modal fade" id="createPostModal" tabindex="-1" aria-labelledby="createPostModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createPostModalLabel">Create Post</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="PostUpdate" method="post" enctype="multipart/form-data" class="create-post-form">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    
                    <div class="mb-3">
                        <textarea class="form-control" id="modalContent" name="Content" rows="4" required 
                                placeholder="Share your thoughts, updates, or information with the community..."></textarea>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="modalType" class="form-label small text-muted">Post Type</label>
                            <select class="form-select bg-light border-0" id="modalType" name="Type" required>
                                <option value="GeneralUpdate">General Update</option>
                                <option value="HelpRequest">Help Request</option>
                                <option value="StatusUpdate">Status Update</option>
                                <option value="ResourceSharing">Resource Sharing</option>
                                <option value="Information">Information</option>
                            </select>
                            <small class="text-muted d-block mt-1">Select the category that best fits your post</small>
                        </div>
                        <div class="col-md-6">
                            <label for="modalLocation" class="form-label small text-muted">Location (optional)</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light border-0">
                                    <i class="fas fa-map-marker-alt text-muted"></i>
                                </span>
                                <input type="text" class="form-control bg-light border-0" id="modalLocation" name="Location" 
                                       placeholder="Add location">
                                <button type="button" class="btn btn-primary" id="detect-modal-location">
                                    <i class="fas fa-crosshairs"></i>
                                </button>
                            </div>
                            <small class="text-muted d-block mt-1">Current location will be automatically detected</small>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="modalImage" class="form-label small text-muted">Add Image (optional)</label>
                        <div class="input-group">
                            <span class="input-group-text bg-light border-0">
                                <i class="fas fa-image text-primary"></i>
                            </span>
                            <input type="file" class="form-control bg-light border-0" id="modalImage" name="Image" accept="image/*">
                        </div>
                        <div id="imagePreview" class="mt-3 d-none text-center">
                            <div class="position-relative d-inline-block">
                                <img src="#" alt="Preview" class="img-thumbnail mx-auto" style="max-height: 250px; max-width: 100%; border-radius: 8px; box-shadow: 0 3px 10px rgba(0,0,0,0.1);">
                                <button type="button" class="btn btn-sm btn-danger position-absolute top-0 end-0 rounded-circle" id="removeImage" style="margin-right: -10px; margin-top: -10px;">
                                    <i class="fas fa-times"></i>
                            </button>
                            </div>
                            <p class="text-muted small mt-2">Selected image preview</p>
                        </div>
                    </div>
                    
                    <!-- Hidden fields -->
                    <input type="number" step="any" class="d-none" id="modalLatitude" name="Latitude">
                    <input type="number" step="any" class="d-none" id="modalLongitude" name="Longitude">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Cancel
                    </button>
                    <button type="submit" class="btn btn-primary" id="submit-post-btn" style="background-color: rgb(46, 137, 255);">
                        <i class="fas fa-paper-plane me-2"></i>Post
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Image Viewer Modal -->
<div class="modal fade" id="imageViewerModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content bg-dark">
            <div class="modal-header border-0">
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img src="" id="fullImage" class="img-fluid" alt="Full size image">
            </div>
        </div>
    </div>
</div>

<!-- Share Post Modal -->
<div class="modal fade" id="sharePostModal" tabindex="-1" aria-labelledby="sharePostModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="sharePostModalLabel">Share Post</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="share-options">
                    <div class="d-flex flex-wrap gap-2 justify-content-center">
                        <a href="#" class="btn btn-outline-primary" id="share-facebook">
                            <i class="fab fa-facebook-f me-2"></i>Facebook
                        </a>
                        <a href="#" class="btn btn-outline-info" id="share-twitter">
                            <i class="fab fa-twitter me-2"></i>Twitter
                        </a>
                        <a href="#" class="btn btn-outline-success" id="share-whatsapp">
                            <i class="fab fa-whatsapp me-2"></i>WhatsApp
                        </a>
                        <a href="#" class="btn btn-outline-secondary" id="share-email">
                            <i class="fas fa-envelope me-2"></i>Email
                        </a>
                    </div>
                    <div class="mt-3">
                        <label class="form-label small">Copy Link</label>
                        <div class="input-group">
                            <input type="text" id="share-link" class="form-control" readonly>
                            <button class="btn btn-primary" type="button" id="copy-link-btn">
                                <i class="fas fa-copy"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Review Pending Modal -->
<div class="modal fade" id="reviewPendingModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0">
            <div class="modal-body p-0">
                <div class="text-center p-4">
                    <div class="review-pending-icon bg-primary bg-opacity-10 mx-auto mb-4 rounded-circle">
                        <i class="fas fa-check-circle fa-3x text-primary"></i>
                    </div>
                    <h4 class="mb-3">Submitted Successfully!</h4>
                    <p class="mb-4">Your post has been submitted and will be reviewed shortly by our team. Thank you for your contribution to the community!</p>
                    <div class="d-flex justify-content-center mb-2">
                        <div class="review-status">
                            <div class="d-flex align-items-center">
                                <div class="review-stage active">
                                    <i class="fas fa-paper-plane"></i>
                                </div>
                                <div class="review-line"></div>
                                <div class="review-stage active">
                                    <i class="fas fa-inbox"></i>
                                </div>
                                <div class="review-line"></div>
                                <div class="review-stage">
                                    <i class="fas fa-eye"></i>
                                </div>
                                <div class="review-line"></div>
                                <div class="review-stage">
                                    <i class="fas fa-check"></i>
                                </div>
                            </div>
                            <div class="d-flex justify-content-between mt-1">
                                <span class="small text-muted">Submitted</span>
                                <span class="small text-muted">Received</span>
                                <span class="small text-muted">In Review</span>
                                <span class="small text-muted">Published</span>
                            </div>
                        </div>
                    </div>
                    <div class="alert alert-light border text-start mt-3 mb-3">
                        <div class="d-flex">
                            <i class="fas fa-info-circle text-primary me-2 mt-1"></i>
                            <div>
                                <p class="mb-0 small">Posts are typically reviewed within 10-15 minutes. You'll receive a notification once your post is approved and published.</p>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-success px-4 py-2" data-bs-dismiss="modal">
                        Continue Browsing
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        :root {
            --bg-primary: #f8f9fa;
            --bg-secondary: #f1f3f5;
            --bg-subtle: #f5f5f5;
            --text-primary: #333;
            --text-secondary: #6c757d;
        }
        
        body {
            background-color: var(--bg-primary);
            color: var(--text-primary);
        }
        
        /* Softer background colors */
        .bg-light, .bg-white {
            background-color: var(--bg-subtle) !important;
        }
        
        .bg-subtle {
            background-color: var(--bg-subtle);
        }
        
        .btn-subtle {
            background-color: var(--bg-subtle);
            border-color: #eaeaea;
            color: var(--text-secondary);
        }
        
        .btn-subtle:hover {
            background-color: #eaeaea;
            color: var(--text-primary);
        }
        
        /* Softer badge colors */
        .bg-danger-soft {
            background-color: #f8d7da;
            color: #842029;
        }
        
        .bg-info-soft {
            background-color: #d1e7f3;
            color: #055181;
        }
        
        .bg-success-soft {
            background-color: #d4edda;
            color: #146c43;
        }
        
        .bg-primary-soft {
            background-color: #d1e0fb;
            color: #0848a6;
        }
        
        .bg-secondary-soft {
            background-color: #e2e3e5;
            color: #41464b;
        }

        .avatar-circle {
            width: 40px;
            height: 40px;
            background-color: #e2e3e5;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--text-secondary);
        }

        .post-card {
            transition: transform 0.2s ease-in-out;
            border-radius: 8px;
            background-color: #ffffff;
            box-shadow: 0 2px 4px rgba(0,0,0,0.03) !important;
        }

        .post-card:hover {
            transform: translateY(-2px);
        }

        .post-image img {
            max-height: 400px;
            object-fit: cover;
            width: 100%;
            border-radius: 8px;
        }

        .create-post-form .form-control,
        .create-post-form .form-select {
            transition: all 0.2s ease-in-out;
            border-color: #eaeaea;
        }

        .create-post-form .form-control:focus,
        .create-post-form .form-select:focus {
            box-shadow: none;
            border-color: #ced4da;
        }

        .post-actions .btn {
            transition: all 0.2s ease-in-out;
            font-size: 0.85rem;
        }

        .post-actions .btn:hover {
            background-color: #eaeaea;
        }

        .empty-state {
            background-color: var(--bg-subtle);
            border-radius: 1rem;
        }

        .feed-header {
            padding: 1rem;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            margin-bottom: 1.5rem;
        }

        .feed-controls {
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .search-container {
            min-width: 120px;
            max-width: 250px;
        }
        
        @@media (min-width: 768px) {
            .search-container {
                width: 200px;
                flex-grow: 0;
            }
            
            .feed-controls {
                gap: 16px;
            }
        }
        
        .search-container .input-group {
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0,0,0,0.05);
        }
        
        .search-container .form-control,
        .search-container .input-group-text {
            height: 34px;
        }
        
        .search-container .form-control {
            border-left: none;
            padding-right: 15px;
        }
        
        .search-container .form-control:focus {
            box-shadow: none;
            border-color: #ced4da;
        }
        
        .search-container .input-group-text {
            border-right: none;
            background-color: var(--bg-subtle);
            padding-left: 15px;
        }
        
        .search-highlight {
            background-color: rgba(255, 230, 0, 0.3);
            border-radius: 2px;
            padding: 0 2px;
        }

        .post-type .badge {
            font-weight: 500;
            padding: 0.5rem 1rem;
        }
        
        .post-location a:hover {
            color: #dc3545 !important;
        }
        
        .create-post-card {
            border-radius: 8px;
            background-color: #ffffff;
        }
        
        .post-placeholder {
            padding: 0.75rem 1rem;
            color: #939393;
            cursor: pointer;
            border-radius: 8px;
        }
        
        .post-shortcuts {
            border-top: 1px solid rgba(0,0,0,0.05);
            padding-top: 12px;
        }
        
        .form-control-static {
            min-height: 40px;
            display: flex;
            align-items: center;
        }
        
        .modal-content {
            border: none;
            border-radius: 12px;
            background-color: #ffffff;
        }
        
        .modal-header {
            border-bottom: 1px solid rgba(0,0,0,0.05);
            background-color: #f9f9f9;
            border-radius: 12px 12px 0 0;
        }
        
        .modal-footer {
            border-top: 1px solid rgba(0,0,0,0.05);
            background-color: #f9f9f9;
            border-radius: 0 0 12px 12px;
        }
        
        /* Approval notification styling */
        .alert-success {
            background-color: #e1f5ea;
            color: #146c43;
            border-color: #c5e9d8;
            border-radius: 8px;
            padding: 0.75rem 1rem;
            margin-bottom: 1rem;
            border-left: 4px solid #146c43;
        }
        
        /* Add animation for notifications but make it subtle */
        .notification-indicator {
            position: relative;
            display: block;
        }
        
        .notification-indicator::after {
            content: '';
            position: absolute;
            top: -2px;
            right: -2px;
            width: 8px;
            height: 8px;
            background-color: #dc3545;
            border-radius: 50%;
            border: 2px solid #fff;
        }
        
        /* Responsive adjustments for smaller screens */
        @@media (max-width: 992px) {
            .container-fluid {
                padding-left: 12px !important;
                padding-right: 12px !important;
            }
            
            .row {
                margin-left: -8px !important;
                margin-right: -8px !important;
            }
            
            .col-12 {
                padding-left: 8px !important;
                padding-right: 8px !important;
            }
            
            .card-body {
                padding: 16px !important;
            }
            
            .post-card {
                margin-bottom: 12px !important;
            }
            
            .feed-header {
                padding: 12px;
                margin-bottom: 12px;
            }
            
            .post-content {
                margin-bottom: 12px !important;
            }
            
            .post-actions {
                gap: 8px !important;
            }
            
            .post-type .badge {
                padding: 0.25rem 0.5rem;
                font-size: 0.75rem;
            }
            
            .modal-body {
                padding: 16px;
            }
            
            .modal-header, .modal-footer {
                padding: 12px 16px;
            }
            
            .search-container {
                min-width: 100px;
                max-width: none;
                width: auto;
            }
            
            .feed-filters {
                width: auto;
            }
        }
        
        @@media (max-width: 768px) {
            .container-fluid {
                padding-left: 8px !important;
                padding-right: 8px !important;
                padding-top: 8px !important;
                padding-bottom: 8px !important;
            }
            
            .post-shortcuts {
                flex-wrap: wrap;
            }
            
            .card-body {
                padding: 12px !important;
            }
            
            .post-actions {
                flex-wrap: wrap;
            }
            
            .post-actions .btn {
                font-size: 0.75rem;
                padding: 0.25rem 0.5rem;
            }
            
            .avatar-circle {
                width: 32px;
                height: 32px;
            }
            
            h6.mb-0.fw-bold {
                font-size: 0.9rem;
            }
            
            .post-image img {
                max-height: 250px;
            }
            
            .form-label {
                font-size: 0.85rem;
                margin-bottom: 0.25rem;
            }
            
            .mb-3 {
                margin-bottom: 0.75rem !important;
            }
            
            .row.mb-3 {
                margin-bottom: 0.5rem !important;
            }
            
            .feed-controls {
                width: 100%;
                justify-content: space-between;
                gap: 8px;
            }
            
            .search-container {
                flex-grow: 1;
            }
            
            .feed-filters select {
                width: auto;
            }
        }
        
        @@media (max-width: 576px) {
            .post-shortcuts .btn {
                padding: 0.2rem 0.5rem;
                font-size: 0.7rem;
            }
            
            .feed-filters {
                flex-direction: column;
                align-items: flex-start !important;
            }
            
            .feed-filters label {
                margin-bottom: 4px;
            }
            
            .feed-header {
                padding: 10px;
            }
            
            .feed-header h5 {
                margin-bottom: 8px !important;
            }
            
            .post-type {
                margin-top: 4px;
            }
            
            .d-flex.align-items-center.mb-3 {
                flex-wrap: wrap;
            }
            
            .modal-dialog {
                margin: 0.5rem;
            }
            
            .toast {
                max-width: 90%;
                margin-right: 5%;
            }
            
            .feed-controls {
                flex-direction: row;
                align-items: center !important;
                width: 100%;
                margin-top: 8px;
            }
            
            .search-container {
                flex-grow: 1;
                margin-bottom: 0;
            }
            
            .feed-filters {
                width: auto;
            }
            
            .feed-filters select {
                max-width: 110px;
            }
        }
        
        /* Modal button enhancements */
        .modal-footer .btn {
            transition: all 0.3s ease;
            font-weight: 500;
            border-radius: 20px;
            padding: 8px 20px;
        }
        
        .modal-footer .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .btn-danger {
            background-color: #dc3545;
            border-color: #dc3545;
            color: white;
        }
        
        .btn-danger:hover {
            background-color: #c82333;
            border-color: #bd2130;
        }

        .btn-primary {
            background-color: #4f6fff;
            border-color: #4f6fff;
            color: white;
        }
        
        .btn-primary:hover {
            background-color: #4f6fff;
            border-color: #4f6fff;
        }
        
        #detect-modal-location {
            border-radius: 0 4px 4px 0;
            transition: all 0.3s ease;
        }
        
        #detect-modal-location:hover {
            transform: translateY(-2px);
            box-shadow: 2px 2px 8px rgba(0,0,0,0.1);
        }
        
        /* Modal form enhancements */
        .create-post-form textarea {
            border-radius: 12px;
            padding: 12px;
            border: 1px solid #e4e4e4;
            box-shadow: 0 1px 3px rgba(0,0,0,0.05) inset;
            transition: all 0.3s ease;
        }
        
        .create-post-form textarea:focus {
            border-color: #80bdff;
            box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
        }
        
        .create-post-form .form-select {
            border-radius: 8px;
            border: 1px solid #e4e4e4;
            box-shadow: 0 1px 3px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
            padding: 10px 12px;
        }
        
        .create-post-form .form-select:focus {
            border-color: #80bdff;
            box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
        }
        
        .create-post-form .input-group {
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0,0,0,0.05);
        }
        
        /* Image preview styles */
        #imagePreview {
            transition: all 0.3s ease;
            padding: 10px;
            background-color: #f8f9fa;
            border-radius: 10px;
        }
        
        #imagePreview img {
            transition: all 0.3s ease;
            border: 2px solid #eaeaea;
        }
        
        #imagePreview img:hover {
            transform: scale(1.01);
        }
        
        #removeImage {
            opacity: 0.8;
            transition: all 0.2s ease;
            z-index: 10;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        
        #removeImage:hover {
            opacity: 1;
            transform: scale(1.1);
        }

        /* Review status timeline styles */
        .review-pending-icon {
            width: 90px;
            height: 90px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .review-status {
            width: 100%;
            max-width: 400px;
        }
        
        .review-stage {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #f0f0f0;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #999;
            position: relative;
            z-index: 2;
        }
        
        .review-stage.active {
            background-color: rgba(79, 111, 255, 0.1);
            color: #4f6fff;
        }
        
        .review-line {
            flex-grow: 1;
            height: 3px;
            background-color: #f0f0f0;
            position: relative;
            z-index: 1;
        }
        
        .review-stage.active + .review-line {
            background-color: rgba(79, 111, 255, 0.1);
        }
        
        #reviewPendingModal .modal-content {
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }
        
        #reviewPendingModal .modal-body {
            border-radius: 16px;
        }
        
        /* User feedback animation */
        @@keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(79, 111, 255, 0.4);
            }
            70% {
                box-shadow: 0 0 0 15px rgba(79, 111, 255, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(79, 111, 255, 0);
            }
        }
        
        .review-pending-icon {
            animation: pulse 2s infinite;
        }
    </style>
}

@section Scripts {
    <script>
        // Document ready function to initialize all components
        $(document).ready(function() {
            // Initialize all tooltips
            $('[data-bs-toggle="tooltip"]').tooltip();
            
            // Update submit button color based on selected post type
            $('#modalType').on('change', function() {
                const postType = $(this).val();
                const $submitBtn = $('#submit-post-btn');
                
                // Remove all color classes
                $submitBtn.removeClass('btn-primary btn-danger btn-success btn-info btn-warning');
                
                // Add appropriate color class based on post type
                switch(postType) {
                    case 'HelpRequest':
                        $submitBtn.addClass('btn-danger');
                        break;
                    case 'StatusUpdate':
                        $submitBtn.addClass('btn-warning');
                        break;
                    case 'ResourceSharing':
                        $submitBtn.addClass('btn-success');
                        break;
                    case 'Information':
                        $submitBtn.addClass('btn-info');
                        break;
                    default:
                        $submitBtn.addClass('btn-primary');
                }
            });
            
            // Image preview functionality
            $('#modalImage').on('change', function() {
                const file = this.files[0];
            if (file) {
                    // File size validation
                if (file.size > 5 * 1024 * 1024) { // 5MB
                    alert('File size must be less than 5MB');
                    this.value = '';
                        $('#imagePreview').addClass('d-none');
                    return;
                }
                    
                    // Preview image
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        $('#imagePreview img').attr('src', e.target.result);
                        $('#imagePreview').removeClass('d-none');
                    }
                    reader.readAsDataURL(file);
                }
            });
            
            // Remove image preview and clear file input
            $('#removeImage').on('click', function() {
                $('#modalImage').val('');
                $('#imagePreview').addClass('d-none');
            });
            
            // Geolocation support for post form
            $('#detect-modal-location').on('click', function() {
                $(this).html('<i class="fas fa-spinner fa-spin"></i>');
                
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                        $('#modalLatitude').val(position.coords.latitude);
                        $('#modalLongitude').val(position.coords.longitude);
                        
                        // Reverse geocoding to get address
                        fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${position.coords.longitude},${position.coords.latitude}.json?access_token=pk.eyJ1IjoiY2hhYW5nZ2cwMTkzIiwiYSI6ImNtOHo5ODF6cDAxcTUyaXB0ODBtYXlhN3oifQ.SJ-eGgWUplbUFNE_UwK7JA`)
                            .then(response => response.json())
                            .then(data => {
                                if (data.features && data.features.length > 0) {
                                    $('#modalLocation').val(data.features[0].place_name);
                                }
                                $('#detect-modal-location').html('<i class="fas fa-crosshairs"></i>');
                            })
                            .catch(err => {
                                console.error('Error fetching location:', err);
                                $('#detect-modal-location').html('<i class="fas fa-crosshairs"></i>');
                            });
                    }, function(error) {
                        console.error('Geolocation error:', error);
                        alert('Could not detect your location. Please enter manually.');
                        $('#detect-modal-location').html('<i class="fas fa-crosshairs"></i>');
                    });
                } else {
                    alert('Geolocation is not supported by your browser');
                    $('#detect-modal-location').html('<i class="fas fa-crosshairs"></i>');
                }
            });

            // Set post type when click on different shortcut buttons
            $('[data-post-type]').click(function() {
                const postType = $(this).data('post-type');
                $('#modalType').val(postType).trigger('change');
            });
            
            // Handle post form submission with validation
            $('.create-post-form').on('submit', function(e) {
                const content = $('#modalContent').val().trim();
                
                if (content === '') {
                    e.preventDefault();
                    $('#modalContent').addClass('is-invalid');
                    return false;
                }
                
                // Store form data for later use
                const formData = new FormData(this);
                
                // Show loading state on button
                $('#submit-post-btn').html('<span class="spinner-border spinner-border-sm me-2"></span>Posting...').prop('disabled', true);
                
                // Temporarily prevent default form submission for the modal demo
                e.preventDefault();
                
                // Hide the create post modal
                $('#createPostModal').modal('hide');
                
                // Show the review pending modal
                setTimeout(function() {
                    $('#reviewPendingModal').modal('show');
                    
                    // Reset the form and button state
                    setTimeout(function() {
                        $('#submit-post-btn').html('<i class="fas fa-paper-plane me-2"></i>Post').prop('disabled', false);
                        $('.create-post-form')[0].reset();
                        $('#imagePreview').addClass('d-none');
                    }, 500);
                    
                    // In a real application, you would submit the form here
                    // $('.create-post-form')[0].submit();
                }, 1000);
                
                return false; // Prevent default form submission for demo
            });
            
            // Clear validation on input
            $('#modalContent').on('input', function() {
                $(this).removeClass('is-invalid');
            });
            
            // Image viewer functionality
            window.openImageViewer = function(src) {
                $('#fullImage').attr('src', src);
                new bootstrap.Modal(document.getElementById('imageViewerModal')).show();
            };
            
            // Post like functionality
            $('.post-like-btn').on('click', function() {
                const $this = $(this);
                const postId = $this.data('post-id');
                const $icon = $this.find('i');
                const $count = $this.find('.like-count');
                
                // Toggle like state
                if ($icon.hasClass('far')) {
                    $icon.removeClass('far').addClass('fas text-danger');
                    $count.text(parseInt($count.text()) + 1);
                } else {
                    $icon.removeClass('fas text-danger').addClass('far');
                    $count.text(Math.max(0, parseInt($count.text()) - 1));
                }
                
                // Here you would normally make an AJAX call to save the like
                console.log('Like toggled for post ID:', postId);
            });
            
            // Comment submit functionality
            $('.send-comment-btn').on('click', function() {
                const postId = $(this).data('post-id');
                const $input = $(`.comment-input[data-post-id="${postId}"]`);
                const commentText = $input.val().trim();
                
                if (commentText !== '') {
                    // Remove empty comments message if present
                    $(`#comments-${postId} .empty-comments`).remove();
                    
                    // Add the new comment
                    const $commentsList = $(`#comments-${postId} .comments-list`);
                    const now = new Date();
                    const timeStr = now.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
                    
                    const commentHtml = `
                        <div class="comment d-flex mb-2 animate__animated animate__fadeIn">
                            <div class="avatar-circle me-2" style="width:24px;height:24px">
                                <i class="fas fa-user" style="font-size:10px"></i>
                            </div>
                            <div class="comment-content bg-white rounded p-2 flex-grow-1">
                                <div class="d-flex justify-content-between align-items-center mb-1">
                                    <span class="fw-bold small">Current User</span>
                                    <small class="text-muted">${timeStr}</small>
                                </div>
                                <p class="mb-0 small">${commentText}</p>
                            </div>
                        </div>
                    `;
                    
                    $commentsList.append(commentHtml);
                    $input.val('');
                    
                    // Here you would normally make an AJAX call to save the comment
                    console.log('New comment on post ID:', postId, commentText);
                }
            });
            
            // Comment input Enter key handling
            $('.comment-input').on('keypress', function(e) {
                if (e.which === 13) {
                    e.preventDefault();
                    const postId = $(this).data('post-id');
                    $(`.send-comment-btn[data-post-id="${postId}"]`).click();
                }
            });
            
            // Share post functionality
            $('.share-btn').on('click', function() {
                const postId = $(this).data('post-id');
                const postUrl = `${window.location.origin}/Community/ViewPost/${postId}`;
                
                // Set share links
                $('#share-facebook').attr('href', `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(postUrl)}`);
                $('#share-twitter').attr('href', `https://twitter.com/intent/tweet?url=${encodeURIComponent(postUrl)}&text=${encodeURIComponent('Check out this community post!')}`);
                $('#share-whatsapp').attr('href', `https://wa.me/?text=${encodeURIComponent('Check out this community post: ' + postUrl)}`);
                $('#share-email').attr('href', `mailto:?subject=${encodeURIComponent('Community Post')}&body=${encodeURIComponent('Check out this community post: ' + postUrl)}`);
                
                // Set copy link input
                $('#share-link').val(postUrl);
                
                // Show modal
                new bootstrap.Modal(document.getElementById('sharePostModal')).show();
            });
            
            // Copy share link functionality
            $('#copy-link-btn').on('click', function() {
                const $shareLink = $('#share-link');
                $shareLink.select();
                document.execCommand('copy');
                
                // Show copied feedback
                const $this = $(this);
                const originalHTML = $this.html();
                $this.html('<i class="fas fa-check"></i>').addClass('btn-success').removeClass('btn-primary');
                
                setTimeout(() => {
                    $this.html(originalHTML).addClass('btn-primary').removeClass('btn-success');
                }, 2000);
            });
            
            // Search functionality
            $('#post-search').on('input', function() {
                const searchTerm = $(this).val().toLowerCase().trim();
                
                // Clear previous highlights
                $('.search-highlight').each(function() {
                    const $this = $(this);
                    $this.replaceWith($this.text());
                });
                
                if (searchTerm === '') {
                    // If search is empty, trigger filter change to restore state
                    $('#post-filter').trigger('change');
                    return;
                }
                
                // Hide the empty state message
                $('.empty-state, .empty-state-filtered, .empty-state-search').hide();
                
                // Get current filter
                const currentFilter = $('#post-filter').val();
                let hasVisiblePosts = false;
                
                // For each post card
                $('.post-card').each(function() {
                    const $card = $(this);
                    const postContent = $card.find('.post-content').text().toLowerCase();
                    const postType = $card.data('post-type').toString().toLowerCase();
                    
                    // Check if post matches search and filter
                    const matchesSearch = postContent.includes(searchTerm) || 
                                         postType.includes(searchTerm);
                    
                    const matchesFilter = currentFilter === 'all' || $card.data('post-type') === currentFilter;
                    
                    if (matchesSearch && matchesFilter) {
                        $card.show();
                        hasVisiblePosts = true;
                        
                        // Highlight matching text in content
                        if (postContent.includes(searchTerm)) {
                            const $content = $card.find('.post-content p');
                            const originalContent = $content.text();
                            const regex = new RegExp('(' + searchTerm.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&') + ')', 'gi');
                            const newContent = originalContent.replace(regex, '<span class="search-highlight">$1</span>');
                            $content.html(newContent);
                        }
                    } else {
                        $card.hide();
                    }
                });
                
                // Show empty state if no posts match
                if (!hasVisiblePosts) {
                    // Remove any existing search empty state
                    $('.empty-state-search').remove();
                    
                    $('#posts-container').append(`
                        <div class="text-center py-5 empty-state empty-state-search">
                            <div class="empty-state-icon mb-3">
                                <i class="fas fa-search text-muted fa-4x"></i>
                            </div>
                            <h5 class="text-muted mb-2">No Results Found</h5>
                            <p class="text-muted mb-0">Try a different search term or filter</p>
                        </div>
                    `);
                }
            });
            
            // Filter posts
            $('#post-filter').change(function() {
                const filterValue = $(this).val();
                
                // Check if search is active
                const searchTerm = $('#post-search').val().trim();
                if (searchTerm !== '') {
                    // If search is active, trigger search again with new filter
                    $('#post-search').trigger('input');
                    return;
                }
                
                // Remove any existing empty state message first
                $('.empty-state-filtered, .empty-state-search').remove();
                
                if (filterValue === 'all') {
                    $('.post-card').show();
                    
                    // If there are no posts at all, show the original empty state
                    if ($('.post-card').length === 0) {
                        $('.empty-state').show();
                    } else {
                        $('.empty-state').hide();
                    }
                } else {
                    $('.post-card').hide();
                    $('.empty-state').hide();
                    $(`.post-card[data-post-type="${filterValue}"]`).show();
                    
                    // Show empty state if no posts visible for this filter
                    if ($(`.post-card[data-post-type="${filterValue}"]:visible`).length === 0) {
                        // Format the filter value for display
                        const formattedFilter = filterValue
                            .replace(/([A-Z])/g, ' $1')
                            .replace(/^./, function(str) { return str.toUpperCase(); });
                            
                        $('#posts-container').append(`
                            <div class="text-center py-5 empty-state empty-state-filtered">
                                <div class="empty-state-icon mb-3">
                                    <i class="fas fa-filter text-muted fa-4x"></i>
                                </div>
                                <h5 class="text-muted mb-2">No ${formattedFilter} Posts</h5>
                                <p class="text-muted mb-0">Try selecting a different filter</p>
                            </div>
                        `);
                    }
                }
            });
            
            // Add success notification toast when post is created
            if (window.location.search.includes('success=true')) {
                const toastHtml = `
                    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
                        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
                            <div class="toast-header bg-success-soft">
                                <i class="fas fa-check-circle me-2 text-success"></i>
                                <strong class="me-auto">Success</strong>
                                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                            </div>
                            <div class="toast-body">
                                Your post has been successfully published.
                            </div>
                        </div>
                    </div>
                `;
                $('body').append(toastHtml);
                
                // Auto hide after 5 seconds
                setTimeout(function() {
                    $('.toast').toast('hide');
                }, 5000);
            }
        });
    </script>
} 