@model IEnumerable<THYNK.Models.CommunityUpdate>
@{
    ViewData["Title"] = "Community Feed";
    Layout = "_CommunityLayout";
}

<div class="container-fluid px-4 py-4" style="background-color: white !important;">
    <div class="row g-4">
        <!-- Create Post Card - Trigger for Modal -->
        <div class="col-12">
            <div class="card shadow-sm border-0 create-post-card">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center">
                            <div class="avatar-circle me-3">
                                <i class="fas fa-user"></i>
                            </div>
                            <div class="flex-grow-1">
                            <div class="form-control-static bg-light rounded p-3" data-bs-toggle="modal" data-bs-target="#createPostModal">
                                <span class="text-muted">Share your thoughts, updates, or information with the community...</span>
                            </div>
                        </div>
                                </div>
                    <div class="post-shortcuts d-flex align-items-center justify-content-between mt-3">
                            <div class="d-flex gap-2">
                            <button type="button" class="btn btn-light rounded-pill px-3" data-bs-toggle="modal" data-bs-target="#createPostModal" data-post-type="GeneralUpdate">
                                <i class="fas fa-pen text-primary"></i>
                                <span class="ms-1 d-none d-md-inline">Post</span>
                            </button>
                            <button type="button" class="btn btn-light rounded-pill px-3" data-bs-toggle="modal" data-bs-target="#createPostModal" data-post-type="HelpRequest">
                                <i class="fas fa-hands-helping text-danger"></i>
                                <span class="ms-1 d-none d-md-inline">Help</span>
                            </button>
                            <button type="button" class="btn btn-light rounded-pill px-3" data-bs-toggle="modal" data-bs-target="#createPostModal" data-post-type="ResourceSharing">
                                <i class="fas fa-share-alt text-success"></i>
                                <span class="ms-1 d-none d-md-inline">Resource</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Feed Posts -->
        <div class="col-12">
            <div class="card border-0 mb-4">
                <div class="card-body p-3">
                    <div class="feed-header d-flex flex-column flex-md-row justify-content-between align-items-md-center">
                        <h5 class="m-0 mb-2 mb-md-0 feed-title">
                            <i class="fas fa-users me-2 text-primary"></i>
                            <span class="fw-bold">Community Updates</span>
                        </h5>
                        <div class="feed-controls d-flex align-items-center">
                            <div class="search-container me-2">
                                <div class="input-group">
                                    <span class="input-group-text bg-light border-0">
                                        <i class="fas fa-search text-muted"></i>
                                    </span>
                                    <input type="text" class="form-control bg-light border-0" id="post-search" placeholder="Search posts...">
                                </div>
                            </div>
                 <!-- #region           --> <div class="feed-filters">
                                <select class="form-select form-select-sm bg-light border-0" id="post-filter">
                        <option value="all">All Posts</option>
                                    <option value="HelpRequest">Help Requests</option>
                                    <option value="StatusUpdate">Status Updates</option>
                                    <option value="ResourceSharing">Resources</option>
                                    <option value="Information">Information</option>
                                    <option value="GeneralUpdate">General Updates</option>
                    </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="posts-container">
            @if (Model != null && Model.Any())
            {
                foreach (var post in Model)
                {
                        <div class="card shadow border-0 mb-4 post-card" data-post-type="@post.Type" data-post-id="@post.Id" style="box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08), 0 2px 4px rgba(0, 0, 0, 0.05) !important; transition: transform 0.2s ease, box-shadow 0.2s ease;">
                        <div class="card-body p-4">
                            <div class="d-flex align-items-center mb-3">
                                <div class="avatar-circle me-3">
                                    <i class="fas fa-user"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <h6 class="mb-0">@(post.User != null ? $"{post.User.FirstName} {post.User.LastName}" : "Unknown User")</h6>
                                    <small class="text-muted">@post.DatePosted.ToString("MMM dd, yyyy HH:mm")</small>
                                </div>
                                <div class="post-type">
                                    <span class="badge rounded-pill @(post.Type == UpdateType.HelpRequest ? "bg-danger" : 
                                                                    post.Type == UpdateType.StatusUpdate ? "bg-info" : 
                                                                    post.Type == UpdateType.ResourceSharing ? "bg-success" : 
                                                                    post.Type == UpdateType.Information ? "bg-primary" : "bg-secondary")">
                                        @post.Type
                                    </span>
                                </div>
                            </div>

                                <div class="post-content mb-3">
                                    <p class="card-text mb-0">@post.Content</p>
                                </div>

                                @{
                                    var hasValidImage = !string.IsNullOrWhiteSpace(post.ImageUrl) && 
                                                       post.ImageUrl != "null" && 
                                                       post.ImageUrl != "#" &&
                                                       !post.ImageUrl.Equals("undefined", StringComparison.OrdinalIgnoreCase) &&
                                                       !post.ImageUrl.Equals("empty", StringComparison.OrdinalIgnoreCase) &&
                                                       !string.IsNullOrEmpty(post.ImageUrl?.Trim()) &&
                                                       post.ImageUrl.Length > 5 && // Ensure the URL has some meaningful length
                                                       (post.ImageUrl.StartsWith("http") || post.ImageUrl.StartsWith("/"));
                                }
                                @if (hasValidImage)
                                {
                                    <div class="post-image mb-3" data-post-id="@post.Id">
                                        <img src="@post.ImageUrl" class="img-fluid rounded" alt="Post image" 
                                             onerror="this.onerror=null; this.parentNode.style.display='none';" 
                                             onload="this.dataset.loaded='true'"
                                             onclick="openImageViewer(this.src)" style="cursor: pointer;">
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(post.Location) && post.Location != "Not specified")
                                {
                                    <div class="post-location mb-3">
                                        <a href="https://www.google.com/maps?q=@post.Latitude,@post.Longitude" 
                                           target="_blank" class="text-decoration-none">
                                            <i class="fas fa-map-marker-alt text-danger me-1"></i>
                                            <span class="text-muted">@post.Location</span>
                                            <i class="fas fa-external-link-alt ms-1 text-muted small"></i>
                                        </a>
                                    </div>
                                }

                                <div class="post-actions d-flex align-items-center justify-content-end">
                                    <button class="btn btn-primary btn-sm rounded-pill px-3 share-btn" data-post-id="@post.Id">
                                        <i class="far fa-share-square me-1"></i>Share
                                    </button>
                                </div>
                                
                                <!-- Comments Section (Collapsed by default) -->
                                <div class="collapse mt-3" id="comments-@post.Id" style="display: none;">
                                    <!-- Removed comment section content -->
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-5 empty-state">
                        <div class="empty-state-icon mb-3">
                            <i class="fas fa-comments text-muted fa-4x"></i>
                        </div>
                        <h5 class="text-muted mb-2">No Posts Yet</h5>
                        <p class="text-muted mb-0">Be the first to share something with the community!</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Create Post Modal - Enhanced with minimal design -->
<div class="modal fade" id="createPostModal" tabindex="-1" aria-labelledby="createPostModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header bg-white border-0 pb-0">
                <h5 class="modal-title fw-bold" id="createPostModalLabel">
                    <i class="fas fa-pen-fancy me-2 text-primary"></i>Create Post
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="PostUpdate" method="post" enctype="multipart/form-data" class="create-post-form">
                <div class="modal-body p-4 pt-2">
                    @Html.AntiForgeryToken()
                    
                    <!-- Improved textarea with proper floating label -->
                    <div class="mb-3">
                        <div class="form-floating">
                            <textarea class="form-control" id="modalContent" name="Content" rows="3" required 
                                    placeholder="Share your thoughts..."></textarea>
                            <label for="modalContent">Share your thoughts, updates, or information with the community...</label>
                        </div>
                    </div>
                    
                    <div class="row mb-3 g-3">
                        <div class="col-md-6">
                            <label for="modalType" class="form-label small text-muted">POST TYPE</label>
                            <div class="post-type-selector">
                                <select class="form-select form-select-sm shadow-sm" id="modalType" name="Type" required>
                                <option value="GeneralUpdate">General Update</option>
                                <option value="HelpRequest">Help Request</option>
                                <option value="StatusUpdate">Status Update</option>
                                <option value="ResourceSharing">Resource Sharing</option>
                                <option value="Information">Information</option>
                            </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="modalLocation" class="form-label small text-muted">LOCATION (OPTIONAL)</label>
                            <div class="input-group shadow-sm rounded overflow-hidden">
                                <span class="input-group-text border-0 bg-light">
                                    <i class="fas fa-map-marker-alt text-danger"></i>
                                </span>
                                <input type="text" class="form-control form-control-sm border-0" id="modalLocation" name="Location" 
                                       placeholder="Add location">
                                <button type="button" class="btn btn-sm btn-primary location-btn" id="detect-modal-location">
                                    <i class="fas fa-crosshairs"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="modalImage" class="form-label small text-muted">IMAGE (OPTIONAL)</label>
                        <div class="image-upload-container">
                            <div class="input-group shadow-sm rounded overflow-hidden">
                                <span class="input-group-text border-0 bg-light">
                                <i class="fas fa-image text-primary"></i>
                            </span>
                                <input type="file" class="form-control form-control-sm border-0" id="modalImage" name="Image" accept="image/*">
                        </div>
                        </div>
                        <div id="imagePreview" class="mt-3 d-none">
                            <div class="position-relative d-inline-block">
                                <img src="#" alt="Preview" class="img-thumbnail mx-auto" style="max-height: 200px; max-width: 100%; border-radius: 8px; box-shadow: 0 5px 15px rgba(0,0,0,0.1);">
                                <button type="button" class="btn btn-sm btn-danger position-absolute top-0 end-0 rounded-circle" id="removeImage" style="margin-right: -10px; margin-top: -10px;">
                                    <i class="fas fa-times"></i>
                            </button>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Hidden fields -->
                    <input type="number" step="any" class="d-none" id="modalLatitude" name="Latitude">
                    <input type="number" step="any" class="d-none" id="modalLongitude" name="Longitude">
                </div>
                <!-- Enhanced footer with better styled buttons -->
                <div class="modal-footer border-top border-light pt-0 pb-3 px-4">
                    <div class="d-flex justify-content-between w-100">
                        <button type="button" class="btn btn-light px-4 rounded-pill" data-bs-dismiss="modal" 
                                style="background: linear-gradient(45deg, #f8f9fa, #e9ecef); border: none; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);">
                            <i class="fas fa-times me-2"></i>Cancel
                        </button>
                        <button type="submit" class="btn btn-primary px-4 rounded-pill" id="submit-post-btn" 
                                style="background: linear-gradient(45deg, #4361ee, #4895ef); border: none; box-shadow: 0 2px 5px rgba(79, 111, 255, 0.3);">
                            <i class="fas fa-paper-plane me-2"></i>Post
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Image Viewer Modal -->
<div class="modal fade" id="imageViewerModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content bg-dark">
            <div class="modal-header border-0">
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img src="" id="fullImage" class="img-fluid" alt="Full size image">
            </div>
        </div>
    </div>
</div>

<!-- Enhanced Share Post Modal -->
<div class="modal fade" id="sharePostModal" tabindex="-1" aria-labelledby="sharePostModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg rounded-lg">
            <div class="modal-header bg-gradient-light border-0 py-3">
                <h5 class="modal-title fw-bold" id="sharePostModalLabel">
                    <i class="fas fa-share-alt me-2 text-primary"></i>Share Post
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="share-preview mb-4 bg-light rounded-3 p-3">
                    <div class="d-flex align-items-center mb-2">
                        <i class="fas fa-quote-left text-muted me-2"></i>
                        <span class="small text-muted">Post Preview</span>
                    </div>
                    <p class="share-preview-content mb-1 small text-truncate"></p>
                    <p class="mb-0 small text-primary fw-medium">Read more on THYNK Community...</p>
                </div>
                
                <h6 class="fw-bold mb-3">Share via</h6>
                <div class="share-options">
                    <div class="d-flex flex-wrap gap-2 justify-content-between mb-4">
                        <a href="#" class="btn btn-outline-primary d-flex align-items-center justify-content-center share-btn-option" id="share-facebook">
                            <i class="fab fa-facebook-f me-2"></i>Facebook
                        </a>
                        <a href="#" class="btn btn-outline-info d-flex align-items-center justify-content-center share-btn-option" id="share-twitter">
                            <i class="fab fa-twitter me-2"></i>Twitter
                        </a>
                        <a href="#" class="btn btn-outline-success d-flex align-items-center justify-content-center share-btn-option" id="share-whatsapp">
                            <i class="fab fa-whatsapp me-2"></i>WhatsApp
                        </a>
                        <a href="#" class="btn btn-outline-secondary d-flex align-items-center justify-content-center share-btn-option" id="share-email">
                            <i class="fas fa-envelope me-2"></i>Email
                        </a>
                    </div>
                    
                    <h6 class="fw-bold mb-2">Copy Link</h6>
                    <div class="input-group shadow-sm mb-3">
                        <input type="text" id="share-link" class="form-control border-0" readonly>
                            <button class="btn btn-primary" type="button" id="copy-link-btn">
                            <i class="fas fa-copy me-1"></i>Copy
                            </button>
                        </div>
                    
                    <div class="qr-code-section text-center mt-4">
                        <h6 class="fw-bold mb-2">QR Code</h6>
                        <div class="qr-placeholder bg-light mx-auto rounded p-3" style="width:150px;height:150px">
                            <div id="share-qr-code" class="d-flex align-items-center justify-content-center h-100">
                                <i class="fas fa-qrcode fa-4x text-muted"></i>
                    </div>
                </div>
                        <p class="small text-muted mt-2">Scan to view post on mobile</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer bg-light border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Review Pending Modal -->
<div class="modal fade" id="reviewPendingModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0">
            <div class="modal-body p-0">
                <div class="text-center p-4">
                    <div class="review-pending-icon bg-primary bg-opacity-10 mx-auto mb-4 rounded-circle">
                        <i class="fas fa-check-circle fa-3x text-primary"></i>
                    </div>
                    <h4 class="mb-3">Submitted Successfully!</h4>
                    <p class="mb-4">Your post has been submitted and will be reviewed shortly by our team. Thank you for your contribution to the community!</p>
                    <div class="d-flex justify-content-center mb-2">
                        <div class="review-status">
                            <div class="d-flex align-items-center">
                                <div class="review-stage active">
                                    <i class="fas fa-paper-plane"></i>
                                </div>
                                <div class="review-line"></div>
                                <div class="review-stage active">
                                    <i class="fas fa-inbox"></i>
                                </div>
                                <div class="review-line"></div>
                                <div class="review-stage">
                                    <i class="fas fa-eye"></i>
                                </div>
                                <div class="review-line"></div>
                                <div class="review-stage">
                                    <i class="fas fa-check"></i>
                                </div>
                            </div>
                            <div class="d-flex justify-content-between mt-1">
                                <span class="small text-muted">Submitted</span>
                                <span class="small text-muted">Received</span>
                                <span class="small text-muted">In Review</span>
                                <span class="small text-muted">Published</span>
                            </div>
                        </div>
                    </div>
                    <div class="alert alert-light border text-start mt-3 mb-3">
                        <div class="d-flex">
                            <i class="fas fa-info-circle text-primary me-2 mt-1"></i>
                            <div>
                                <p class="mb-0 small">Posts are typically reviewed within 10-15 minutes. You'll receive a notification once your post is approved and published.</p>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-success px-4 py-2" data-bs-dismiss="modal">
                        Continue Browsing
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Post Confirmation Modal -->
<div class="modal fade" id="postConfirmModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content border-0">
            <div class="modal-header border-0 p-3" id="postConfirmHeader">
                <h5 class="modal-title">Confirm Post</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body py-3 px-4 text-center">
                <div class="confirmation-icon mb-3">
                    <i id="postConfirmIcon" class="fas fa-pen fa-2x"></i>
                </div>
                <h6 class="mb-3">Ready to post?</h6>
                <p class="small text-muted mb-0">Your post will be submitted for review. Once approved, it will be visible to the community.</p>
            </div>
            <div class="modal-footer p-2 border-0 d-flex justify-content-between">
                <button type="button" class="btn btn-sm btn-outline-secondary px-4 rounded-pill" id="editPostBtn"
                        style="background: linear-gradient(45deg, #f8f9fa, #e9ecef); border: none; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);">
                    <i class="fas fa-pencil-alt me-1"></i> Edit
                </button>
                <button type="button" class="btn btn-sm btn-primary px-4 rounded-pill" id="confirmPostBtn"
                        style="background: linear-gradient(45deg, #4361ee, #4895ef); border: none; box-shadow: 0 2px 5px rgba(79, 111, 255, 0.3);">
                    <i class="fas fa-check me-1"></i> Submit
                </button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Enhanced highlighted post styles */
        .highlighted-post {
            box-shadow: 0 4px 20px rgba(13, 110, 253, 0.5) !important;
            transform: translateY(-5px);
            position: relative;
            z-index: 5;
            transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
            border: 2px solid rgba(13, 110, 253, 0.3);
            animation: highlightPulse 2s infinite;
        }
        
        @@keyframes highlightPulse {
            0% { box-shadow: 0 4px 20px rgba(13, 110, 253, 0.5); }
            50% { box-shadow: 0 4px 30px rgba(13, 110, 253, 0.7); }
            100% { box-shadow: 0 4px 20px rgba(13, 110, 253, 0.5); }
        }
        
        .notification-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background: linear-gradient(135deg, #0d6efd, #0a58ca);
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
            box-shadow: 0 4px 12px rgba(13, 110, 253, 0.4);
            display: flex;
            align-items: center;
            gap: 8px;
            animation: badgeFloat 3s ease-in-out infinite;
            z-index: 10;
            cursor: pointer;
        }
        
        @@keyframes badgeFloat {
            0% { transform: translateY(0); }
            50% { transform: translateY(-5px); }
            100% { transform: translateY(0); }
        }
        
        .notification-badge i {
            animation: bellRing 2s ease-in-out infinite;
        }
        
        @@keyframes bellRing {
            0% { transform: rotate(0); }
            5% { transform: rotate(15deg); }
            10% { transform: rotate(-15deg); }
            15% { transform: rotate(15deg); }
            20% { transform: rotate(-15deg); }
            25% { transform: rotate(0); }
            100% { transform: rotate(0); }
        }
        
        .highlighted-post::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            border-radius: 8px;
            background: linear-gradient(45deg, rgba(13, 110, 253, 0.1), rgba(13, 110, 253, 0.05));
            pointer-events: none;
            animation: gradientShift 3s ease-in-out infinite;
        }
        
        @@keyframes gradientShift {
            0% { opacity: 0.5; }
            50% { opacity: 0.8; }
            100% { opacity: 0.5; }
        }
        
        .highlighted-post .post-content {
            position: relative;
            z-index: 2;
        }
        
        .highlighted-post .post-actions {
            position: relative;
            z-index: 2;
        }
        
        .highlighted-post .post-image {
            position: relative;
            z-index: 2;
        }
        
        .highlighted-post .post-location {
            position: relative;
            z-index: 2;
        }
        
        :root {
            --bg-primary: #f8f9fa;
            --bg-secondary: #f1f3f5;
            --bg-subtle: #f5f5f5;
            --text-primary: #333;
            --text-secondary: #6c757d;
        }
        
        body {
            background-color: var(--bg-primary);
            color: var(--text-primary);
        }
        
        /* Softer background colors */
        .bg-light, .bg-white {
            background-color: var(--bg-subtle) !important;
        }
        
        .bg-subtle {
            background-color: var(--bg-subtle);
        }
        
        .btn-subtle {
            background-color: var(--bg-subtle);
            border-color: #eaeaea;
            color: var(--text-secondary);
        }
        
        .btn-subtle:hover {
            background-color: #eaeaea;
            color: var(--text-primary);
        }
        
        /* Softer badge colors */
        .bg-danger-soft {
            background-color: #f8d7da;
            color: #842029;
        }
        
        .bg-info-soft {
            background-color: #d1e7f3;
            color: #055181;
        }
        
        .bg-success-soft {
            background-color: #d4edda;
            color: #146c43;
        }
        
        .bg-primary-soft {
            background-color: #d1e0fb;
            color: #0848a6;
        }
        
        .bg-secondary-soft {
            background-color: #e2e3e5;
            color: #41464b;
        }

        .avatar-circle {
            width: 40px;
            height: 40px;
            background-color: #e2e3e5;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--text-secondary);
        }

        .post-card {
            transition: transform 0.2s ease-in-out;
            border-radius: 8px;
            background-color: #ffffff;
            box-shadow: 0 2px 4px rgba(0,0,0,0.03) !important;
        }

        .post-card:hover {
            transform: translateY(-2px);
        }

        .post-image img {
            max-height: 400px;
            object-fit: cover;
            width: 100%;
            border-radius: 8px;
        }

        .create-post-form .form-control,
        .create-post-form .form-select {
            transition: all 0.2s ease-in-out;
            border-color: #eaeaea;
        }

        .create-post-form .form-control:focus,
        .create-post-form .form-select:focus {
            box-shadow: none;
            border-color: #ced4da;
        }

        .post-actions .btn {
            transition: all 0.2s ease-in-out;
            font-size: 0.85rem;
        }

        .post-actions .btn:hover {
            background-color: #eaeaea;
        }

        .empty-state {
            background-color: var(--bg-subtle);
            border-radius: 1rem;
        }

        .feed-header {
            padding: 1rem;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            margin-bottom: 1.5rem;
        }

        .feed-controls {
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .search-container {
            min-width: 120px;
            max-width: 250px;
        }
        
        @@media (min-width: 768px) {
            .search-container {
                width: 200px;
                flex-grow: 0;
            }
            
            .feed-controls {
                gap: 16px;
            }
        }
        
        .search-container .input-group {
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0,0,0,0.05);
        }
        
        .search-container .form-control,
        .search-container .input-group-text {
            height: 34px;
        }
        
        .search-container .form-control {
            border-left: none;
            padding-right: 15px;
        }
        
        .search-container .form-control:focus {
            box-shadow: none;
            border-color: #ced4da;
        }
        
        .search-container .input-group-text {
            border-right: none;
            background-color: var(--bg-subtle);
            padding-left: 15px;
        }
        
        .search-highlight {
            background-color: rgba(255, 230, 0, 0.3);
            border-radius: 2px;
            padding: 0 2px;
        }

        .post-type .badge {
            font-weight: 500;
            padding: 0.5rem 1rem;
        }
        
        .post-location a:hover {
            color: #dc3545 !important;
        }
        
        .create-post-card {
            border-radius: 8px;
            background-color: #ffffff;
        }
        
        .post-placeholder {
            padding: 0.75rem 1rem;
            color: #939393;
            cursor: pointer;
            border-radius: 8px;
        }
        
        .post-shortcuts {
            border-top: 1px solid rgba(0,0,0,0.05);
            padding-top: 12px;
        }
        
        .form-control-static {
            min-height: 40px;
            display: flex;
            align-items: center;
        }
        
        .modal-content {
            border: none;
            border-radius: 12px;
            background-color: #ffffff;
        }
        
        .modal-header {
            border-bottom: 1px solid rgba(0,0,0,0.05);
            background-color: #f9f9f9;
            border-radius: 12px 12px 0 0;
        }
        
        .modal-footer {
            border-top: 1px solid rgba(0,0,0,0.05);
            background-color: #f9f9f9;
            border-radius: 0 0 12px 12px;
        }
        
        /* Approval notification styling */
        .alert-success {
            background-color: #e1f5ea;
            color: #146c43;
            border-color: #c5e9d8;
            border-radius: 8px;
            padding: 0.75rem 1rem;
            margin-bottom: 1rem;
            border-left: 4px solid #146c43;
        }
        
        /* Add animation for notifications but make it subtle */
        .notification-indicator {
            position: relative;
            display: block;
        }
        
        .notification-indicator::after {
            content: '';
            position: absolute;
            top: -2px;
            right: -2px;
            width: 8px;
            height: 8px;
            background-color: #dc3545;
            border-radius: 50%;
            border: 2px solid #fff;
        }
        
        /* Responsive adjustments for smaller screens */
        @@media (max-width: 992px) {
            .container-fluid {
                padding-left: 12px !important;
                padding-right: 12px !important;
            }
            
            .row {
                margin-left: -8px !important;
                margin-right: -8px !important;
            }
            
            .col-12 {
                padding-left: 8px !important;
                padding-right: 8px !important;
            }
            
            .card-body {
                padding: 16px !important;
            }
            
            .post-card {
                margin-bottom: 12px !important;
            }
            
            .feed-header {
                padding: 12px;
                margin-bottom: 12px;
            }
            
            .post-content {
                margin-bottom: 12px !important;
            }
            
            .post-actions {
                gap: 8px !important;
            }
            
            .post-type .badge {
                padding: 0.25rem 0.5rem;
                font-size: 0.75rem;
            }
            
            .modal-body {
                padding: 16px;
            }
            
            .modal-header, .modal-footer {
                padding: 12px 16px;
            }
            
            .search-container {
                min-width: 100px;
                max-width: none;
                width: auto;
            }
            
            .feed-filters {
                width: auto;
            }
        }
        
        @@media (max-width: 768px) {
            .container-fluid {
                padding-left: 8px !important;
                padding-right: 8px !important;
                padding-top: 8px !important;
                padding-bottom: 8px !important;
            }
            
            .post-shortcuts {
                flex-wrap: wrap;
            }
            
            .card-body {
                padding: 12px !important;
            }
            
            .post-actions {
                flex-wrap: wrap;
            }
            
            .post-actions .btn {
                font-size: 0.75rem;
                padding: 0.25rem 0.5rem;
            }
            
            .avatar-circle {
                width: 32px;
                height: 32px;
            }
            
            h6.mb-0.fw-bold {
                font-size: 0.9rem;
            }
            
            .post-image img {
                max-height: 250px;
            }
            
            .form-label {
                font-size: 0.85rem;
                margin-bottom: 0.25rem;
            }
            
            .mb-3 {
                margin-bottom: 0.75rem !important;
            }
            
            .row.mb-3 {
                margin-bottom: 0.5rem !important;
            }
            
            .feed-controls {
                width: 100%;
                justify-content: space-between;
                gap: 8px;
            }
            
            .search-container {
                flex-grow: 1;
            }
            
            .feed-filters select {
                width: auto;
            }
        }
        
        @@media (max-width: 576px) {
            .post-shortcuts .btn {
                padding: 0.2rem 0.5rem;
                font-size: 0.7rem;
            }
            
            .feed-filters {
                flex-direction: column;
                align-items: flex-start !important;
            }
            
            .feed-filters label {
                margin-bottom: 4px;
            }
            
            .feed-header {
                padding: 10px;
            }
            
            .feed-header h5 {
                margin-bottom: 8px !important;
            }
            
            .post-type {
                margin-top: 4px;
            }
            
            .d-flex.align-items-center.mb-3 {
                flex-wrap: wrap;
            }
            
            .modal-dialog {
                margin: 0.5rem;
            }
            
            .toast {
                max-width: 90%;
                margin-right: 5%;
            }
            
            .feed-controls {
                flex-direction: row;
                align-items: center !important;
                width: 100%;
                margin-top: 8px;
            }
            
            .search-container {
                flex-grow: 1;
                margin-bottom: 0;
            }
            
            .feed-filters {
                width: auto;
            }
            
            .feed-filters select {
                max-width: 110px;
            }
        }
        
        /* Enhanced floating label styling for post modal */
        .create-post-form .form-floating {
            position: relative;
        }
        
        .create-post-form .form-floating > .form-control {
            height: auto;
            min-height: 100px;
            padding-top: 1.625rem;
            padding-bottom: 0.625rem;
            border-radius: 10px;
            transition: all 0.2s ease;
        }
        
        .create-post-form .form-floating > label {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            padding: 1rem 0.75rem;
            overflow: hidden;
            text-align: start;
            text-overflow: ellipsis;
            white-space: nowrap;
            pointer-events: none;
            border: 1px solid transparent;
            transform-origin: 0 0;
            transition: opacity 0.1s ease-in-out, transform 0.1s ease-in-out;
            color: #6c757d;
            font-size: 0.9rem;
        }
        
        .create-post-form .form-floating > .form-control:focus,
        .create-post-form .form-floating > .form-control:not(:placeholder-shown) {
            padding-top: 1.625rem;
            padding-bottom: 0.625rem;
        }
        
        .create-post-form .form-floating > .form-control:focus ~ label,
        .create-post-form .form-floating > .form-control:not(:placeholder-shown) ~ label {
            opacity: 0.75;
            transform: scale(0.8) translateY(-0.5rem) translateX(0.15rem);
            color: #4f6fff;
            font-weight: 500;
        }
        
        /* Button enhancements for post modal */
        #submit-post-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(79, 111, 255, 0.4) !important;
        }
        
        .modal-footer .btn.btn-light {
            background: linear-gradient(45deg, #f8f9fa, #e9ecef);
            border: none;
            color: #6c757d;
            transition: all 0.2s ease;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        
        .modal-footer .btn.btn-light:hover {
            background: linear-gradient(45deg, #e9ecef, #dee2e6);
            color: #495057;
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

        /* Enhanced confirmation modal buttons */
        #postConfirmModal .modal-footer {
            padding: 1rem 1.5rem;
            gap: 1rem;
        }

        #postConfirmModal .modal-footer .btn {
            min-width: 100px;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        #postConfirmModal .modal-footer .btn:hover {
            transform: translateY(-1px);
        }

        #postConfirmModal .modal-footer .btn-outline-secondary {
            background: linear-gradient(45deg, #f8f9fa, #e9ecef);
            border: none;
            color: #6c757d;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        #postConfirmModal .modal-footer .btn-outline-secondary:hover {
            background: linear-gradient(45deg, #e9ecef, #dee2e6);
            color: #495057;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

        #postConfirmModal .modal-footer .btn-primary {
            background: linear-gradient(45deg, #4361ee, #4895ef);
            border: none;
            box-shadow: 0 2px 5px rgba(79, 111, 255, 0.3);
        }

        #postConfirmModal .modal-footer .btn-primary:hover {
            background: linear-gradient(45deg, #3a56d4, #3f84d4);
            box-shadow: 0 4px 8px rgba(79, 111, 255, 0.4);
        }
    </style>
}

@section Scripts {
    <!-- QR Code library for share feature -->
    <script src="https://cdn.jsdelivr.net/npm/qrcodejs@1.0.0/qrcode.min.js"></script>
    
    <script>
        // Document ready function to initialize all components
        $(document).ready(function() {
            // Check for highlighted post from notification link
            const urlParams = new URLSearchParams(window.location.search);
            const highlightPostId = urlParams.get('highlight') || sessionStorage.getItem('highlightPostId');
            
            // Clear session storage after reading
            if (sessionStorage.getItem('highlightPostId')) {
                sessionStorage.removeItem('highlightPostId');
            }
            
            if (highlightPostId) {
                // Immediately hide the notification badge
                const notificationBadge = document.getElementById('notificationBadge');
                if (notificationBadge) {
                    // Force hide the badge using multiple techniques
                    notificationBadge.style.cssText = 'display: none !important; opacity: 0 !important; visibility: hidden !important;';
                    notificationBadge.classList.remove('badge-pulse');
                    notificationBadge.setAttribute('aria-hidden', 'true');
                    notificationBadge.setAttribute('hidden', 'hidden');
                    notificationBadge.textContent = '0';
                    
                    // Force browser to recognize the change
                    void notificationBadge.offsetWidth;
                    
                    // Mark the notification as read via API
                    fetch(`/Community/MarkNotificationAsRead/${highlightPostId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).catch(err => console.error('Error marking notification as read:', err));
                }

                // Flag to prevent duplicate highlighting if layout script also runs
                window.postAlreadyHighlighted = true;

                // Find the post element
                const findAndHighlightPost = function() {
                    const postElement = document.querySelector(`.post-card[data-post-id="${highlightPostId}"]`);
                    
                    if (postElement) {
                        console.log('Found post to highlight:', highlightPostId);
                        
                        // Scroll to the post with smooth animation
                        postElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
                        
                        // Store original styles
                        const originalBoxShadow = getComputedStyle(postElement).boxShadow;
                        const originalTransform = getComputedStyle(postElement).transform;
                        const originalBorder = getComputedStyle(postElement).border;
                        
                        // Add highlighted class
                        postElement.classList.add('highlighted-post');
                        
                        // Create a visual indicator element
                        const notificationTag = document.createElement('div');
                        notificationTag.className = 'notification-badge';
                        notificationTag.innerHTML = '<i class="fas fa-bell me-1"></i>From Notification';
                        postElement.appendChild(notificationTag);
                        
                        // Animate the badge with a pulse effect
                        let badgeScale = 1;
                        let scaleIncreasing = true;
                        
                        const badgePulseInterval = setInterval(() => {
                            if (scaleIncreasing) {
                                badgeScale += 0.005;
                                if (badgeScale >= 1.05) scaleIncreasing = false;
                            } else {
                                badgeScale -= 0.005;
                                if (badgeScale <= 1) scaleIncreasing = true;
                            }
                            notificationTag.style.transform = `scale(${badgeScale})`;
                        }, 50);
                        
                        // Create pulsing effect with JavaScript
                        let isIncreasing = true;
                        let opacity = 0.5;
                        
                        const pulseInterval = setInterval(() => {
                            if (isIncreasing) {
                                opacity += 0.03;
                                if (opacity >= 0.8) isIncreasing = false;
                            } else {
                                opacity -= 0.03;
                                if (opacity <= 0.4) isIncreasing = true;
                            }
                            postElement.style.boxShadow = `0 5px 25px rgba(13, 110, 253, ${opacity})`;
                        }, 100);
                        
                        // After 5 seconds, remove the highlight
                        setTimeout(() => {
                            clearInterval(pulseInterval);
                            clearInterval(badgePulseInterval);
                            
                            // Remove highlighted class
                            postElement.classList.remove('highlighted-post');
                            
                            // Restore original styles with smooth transition
                            postElement.style.transition = 'all 1s ease';
                            postElement.style.boxShadow = originalBoxShadow;
                            postElement.style.transform = originalTransform;
                            postElement.style.border = originalBorder;
                            
                            // Fade out notification badge
                            notificationTag.style.opacity = '0';
                            notificationTag.style.transition = 'opacity 1s ease';
                            
                            // Remove notification tag after fade out
                            setTimeout(() => {
                                notificationTag.remove();
                            }, 1000);
                        }, 5000);
                        
                        return true;
                    }
                    return false;
                };

                // Try to find the post immediately
                if (!findAndHighlightPost()) {
                    // If not found, try again after a delay (DOM might still be loading)
                    setTimeout(() => {
                        if (!findAndHighlightPost()) {
                            // If still not found, try one more time with longer delay
                            setTimeout(findAndHighlightPost, 1000);
                        }
                    }, 500);
                }
            }
            
            // Initialize all tooltips
            $('[data-bs-toggle="tooltip"]').tooltip();
            
            // Enhanced cleanup for empty image elements
            function cleanupEmptyImages() {
                $('.post-image img').each(function() {
                    const $img = $(this);
                    const src = $img.attr('src');
                    
                    // Comprehensive check for invalid image sources
                    if (!src || 
                        src === '' || 
                        src === 'null' || 
                        src === '#' || 
                        src.toLowerCase() === 'undefined' || 
                        src.toLowerCase() === 'empty' ||
                        src.trim() === '' ||
                        src.length < 5) {
                        
                        console.log('Removing invalid image container:', src);
                        $img.closest('.post-image').remove();
                        return;
                    }
                    
                    // Check for image elements that don't have proper dimensions
                    if ($img[0].complete && ($img[0].naturalWidth === 0 || $img[0].naturalHeight === 0)) {
                        console.log('Removing zero dimension image:', src);
                        $img.closest('.post-image').remove();
                    }
                    
                    // Additional check for broken images
                    $img.on('error', function() {
                        console.log('Removing broken image:', src);
                        $(this).closest('.post-image').remove();
                    });
                });
            }
            
            // Run cleanup immediately
            cleanupEmptyImages();
            
            // Also run after images have had time to load
            setTimeout(cleanupEmptyImages, 1000);

            // Enhanced image viewer with more validation
            window.openImageViewer = function(src) {
                // Comprehensive validation check
                if (!src || 
                    src === '' || 
                    src === 'null' || 
                    src === '#' || 
                    src.toLowerCase() === 'undefined' || 
                    src.toLowerCase() === 'empty' ||
                    src.trim() === '' ||
                    src.length < 5) {
                    console.log('Invalid image source, not opening viewer:', src);
                    return;
                }
                
                const img = new Image();
                img.onload = function() {
                    if (this.width === 0 || this.height === 0) {
                        console.log('Image has zero dimensions, not opening viewer');
                        return;
                    }
                    
                    $('#fullImage').attr('src', src);
                    new bootstrap.Modal(document.getElementById('imageViewerModal')).show();
                };
                
                img.onerror = function() {
                    console.log('Error loading image preview');
                };
                
                img.src = src;
                
                // Add error handler for broken images in modal
                $('#fullImage').off('error').on('error', function() {
                    console.log('Error loading image in modal');
                    bootstrap.Modal.getInstance(document.getElementById('imageViewerModal')).hide();
                });
            };
            
            // Update submit button color based on selected post type
            $('#modalType').on('change', function() {
                const postType = $(this).val();
                const $submitBtn = $('#submit-post-btn');
                const $postTypeIcon = $('.post-type-icon i');
                
                // Remove all color classes
                $submitBtn.removeClass('btn-primary btn-danger btn-success btn-info btn-warning');
                $postTypeIcon.removeClass('fa-pen fa-hands-helping fa-share-alt fa-info-circle fa-comment-alt text-primary text-danger text-success text-info text-warning');
                
                // Add appropriate color class based on post type
                switch(postType) {
                    case 'HelpRequest':
                        $submitBtn.addClass('btn-danger');
                        $postTypeIcon.addClass('fa-hands-helping text-danger');
                        break;
                    case 'StatusUpdate':
                        $submitBtn.addClass('btn-info');
                        $postTypeIcon.addClass('fa-comment-alt text-info');
                        break;
                    case 'ResourceSharing':
                        $submitBtn.addClass('btn-success');
                        $postTypeIcon.addClass('fa-share-alt text-success');
                        break;
                    case 'Information':
                        $submitBtn.addClass('btn-info');
                        $postTypeIcon.addClass('fa-info-circle text-info');
                        break;
                    default:
                        $submitBtn.addClass('btn-primary');
                        $postTypeIcon.addClass('fa-pen text-primary');
                }
            });
            
            // Image preview functionality
            $('#modalImage').on('change', function() {
                const file = this.files[0];
            if (file) {
                    // File size validation
                if (file.size > 5 * 1024 * 1024) { // 5MB
                    alert('File size must be less than 5MB');
                    this.value = '';
                        $('#imagePreview').addClass('d-none');
                    return;
                }
                    
                    // Preview image
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        // Make sure the image element exists
                        let $image = $('#imagePreview img');
                        if ($image.length === 0) {
                            // Create the image element if it doesn't exist
                            $('#imagePreview').html(`
                                <div class="position-relative d-inline-block">
                                    <img src="${e.target.result}" alt="Preview" class="img-thumbnail mx-auto" 
                                         style="max-height: 250px; max-width: 100%; border-radius: 12px; box-shadow: 0 5px 15px rgba(0,0,0,0.1);">
                                    <button type="button" class="btn btn-sm btn-danger position-absolute top-0 end-0 rounded-circle" 
                                            id="removeImage" style="margin-right: -10px; margin-top: -10px;">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                                <p class="text-muted small mt-2">Selected image preview</p>
                            `);
                        } else {
                            // Update existing image
                            $image.attr('src', e.target.result);
                        }
                        
                        // Show the preview container
                        $('#imagePreview').removeClass('d-none');
                    };
                    reader.readAsDataURL(file);
                }
            });
            
            // Remove image button click handler - moved outside the change event
            $(document).on('click', '#removeImage', function() {
                $('#modalImage').val('');
                $('#imagePreview').addClass('d-none');
            });
            
            // Floating label effects for textarea
            $('#modalContent').on('focus blur', function() {
                $(this).parent('.input-floating').toggleClass('focused');
            });
            
            // Visual feedback for focus on input elements
            $('#createPostModal input, #createPostModal textarea, #createPostModal select').on('focus', function() {
                $(this).closest('.input-group, .post-type-selector').addClass('focused');
            }).on('blur', function() {
                $(this).closest('.input-group, .post-type-selector').removeClass('focused');
            });
            
            // Geolocation support for post form
            $('#detect-modal-location').on('click', function() {
                $(this).html('<i class="fas fa-spinner fa-spin"></i>');
                
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                        $('#modalLatitude').val(position.coords.latitude);
                        $('#modalLongitude').val(position.coords.longitude);
                        
                        // Reverse geocoding to get address
                        fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${position.coords.longitude},${position.coords.latitude}.json?access_token=pk.eyJ1IjoiY2hhYW5nZ2cwMTkzIiwiYSI6ImNtOHo5ODF6cDAxcTUyaXB0ODBtYXlhN3oifQ.SJ-eGgWUplbUFNE_UwK7JA`)
                            .then(response => response.json())
                            .then(data => {
                                if (data.features && data.features.length > 0) {
                                    $('#modalLocation').val(data.features[0].place_name);
                                }
                                $('#detect-modal-location').html('<i class="fas fa-crosshairs"></i>');
                            })
                            .catch(err => {
                                console.error('Error fetching location:', err);
                                $('#detect-modal-location').html('<i class="fas fa-crosshairs"></i>');
                            });
                    }, function(error) {
                        console.error('Geolocation error:', error);
                        alert('Could not detect your location. Please enter manually.');
                        $('#detect-modal-location').html('<i class="fas fa-crosshairs"></i>');
                    });
                } else {
                    alert('Geolocation is not supported by your browser');
                    $('#detect-modal-location').html('<i class="fas fa-crosshairs"></i>');
                }
            });

            // Set post type when click on different shortcut buttons
            $('[data-post-type]').click(function() {
                const postType = $(this).data('post-type');
                $('#modalType').val(postType).trigger('change');
            });
            
            // Handle post form submission with validation
            $('.create-post-form').on('submit', function(e) {
                const content = $('#modalContent').val().trim();
                
                if (content === '') {
                    e.preventDefault();
                    $('#modalContent').addClass('is-invalid');
                    return false;
                }
                
                // Show loading state on button
                $('#submit-post-btn').html('<span class="spinner-border spinner-border-sm me-2"></span>Posting...').prop('disabled', true);
                
                // Let the form submit normally to the server
                // The form will be submitted to the PostUpdate action in CommunityController
                return true;
            });
            
            // Show confirmation dialog when the submit button is clicked
            $('#submit-post-btn').on('click', function(e) {
                e.preventDefault();
                
                // Validate the form first
                const content = $('#modalContent').val().trim();
                if (content === '') {
                    $('#modalContent').addClass('is-invalid');
                    return false;
                }
                
                // Get the post type to style the confirmation modal
                const postType = $('#modalType').val();
                
                // Set the confirmation modal styling based on post type
                const $header = $('#postConfirmHeader');
                const $icon = $('#postConfirmIcon');
                
                // Reset classes
                $header.removeClass('bg-primary bg-danger bg-success bg-info bg-secondary bg-primary-soft bg-danger-soft bg-success-soft bg-info-soft bg-secondary-soft');
                $icon.removeClass('fas fa-pen fa-hands-helping fa-share-alt fa-info-circle fa-comment-alt').addClass('fas');
                
                // Set appropriate classes based on post type
                switch(postType) {
                    case 'HelpRequest':
                        $header.addClass('bg-danger-soft');
                        $icon.addClass('fa-hands-helping text-danger');
                        break;
                    case 'ResourceSharing':
                        $header.addClass('bg-success-soft');
                        $icon.addClass('fa-share-alt text-success');
                        break;
                    case 'Information':
                        $header.addClass('bg-info-soft');
                        $icon.addClass('fa-info-circle text-info');
                        break;
                    case 'StatusUpdate':
                        $header.addClass('bg-primary-soft');
                        $icon.addClass('fa-comment-alt text-primary');
                        break;
                    default: // GeneralUpdate
                        $header.addClass('bg-primary-soft');
                        $icon.addClass('fa-pen text-primary');
                }
                
                // Show the confirmation modal
                new bootstrap.Modal(document.getElementById('postConfirmModal')).show();
            });
            
            // Confirm button handler
            $('#confirmPostBtn').on('click', function() {
                // Hide the confirmation modal
                bootstrap.Modal.getInstance(document.getElementById('postConfirmModal')).hide();
                
                // Actually submit the form
                $('.create-post-form').submit();
            });
            
            // Edit button handler - go back to edit the post
            $('#editPostBtn').on('click', function() {
                // Just close the confirmation modal
                bootstrap.Modal.getInstance(document.getElementById('postConfirmModal')).hide();
            });
            
            // Clear validation on input
            $('#modalContent').on('input', function() {
                $(this).removeClass('is-invalid');
            });
            
            // Search functionality
            $('#post-search').on('input', function() {
                const searchTerm = $(this).val().toLowerCase().trim();
                
                // Clear previous highlights
                $('.search-highlight').each(function() {
                    const $this = $(this);
                    $this.replaceWith($this.text());
                });
                
                if (searchTerm === '') {
                    // If search is empty, trigger filter change to restore state
                    $('#post-filter').trigger('change');
                    return;
                }
                
                // Hide the empty state message
                $('.empty-state, .empty-state-filtered, .empty-state-search').hide();
                
                // Get current filter
                const currentFilter = $('#post-filter').val();
                let hasVisiblePosts = false;
                
                // For each post card
                $('.post-card').each(function() {
                    const $card = $(this);
                    const postContent = $card.find('.post-content').text().toLowerCase();
                    const postType = $card.data('post-type').toString().toLowerCase();
                    
                    // Check if post matches search and filter
                    const matchesSearch = postContent.includes(searchTerm) || 
                                         postType.includes(searchTerm);
                    
                    const matchesFilter = currentFilter === 'all' || $card.data('post-type') === currentFilter;
                    
                    if (matchesSearch && matchesFilter) {
                        $card.show();
                        hasVisiblePosts = true;
                        
                        // Highlight matching text in content
                        if (postContent.includes(searchTerm)) {
                            const $content = $card.find('.post-content p');
                            const originalContent = $content.text();
                            const regex = new RegExp('(' + searchTerm.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&') + ')', 'gi');
                            const newContent = originalContent.replace(regex, '<span class="search-highlight">$1</span>');
                            $content.html(newContent);
                        }
                    } else {
                        $card.hide();
                    }
                });
                
                // Show empty state if no posts match
                if (!hasVisiblePosts) {
                    // Remove any existing search empty state
                    $('.empty-state-search').remove();
                    
                    $('#posts-container').append(`
                        <div class="text-center py-5 empty-state empty-state-search">
                            <div class="empty-state-icon mb-3">
                                <i class="fas fa-search text-muted fa-4x"></i>
                            </div>
                            <h5 class="text-muted mb-2">No Results Found</h5>
                            <p class="text-muted mb-0">Try a different search term or filter</p>
                        </div>
                    `);
                }
            });
            
            // Filter posts
            $('#post-filter').change(function() {
                const filterValue = $(this).val();
                
                // Check if search is active
                const searchTerm = $('#post-search').val().trim();
                if (searchTerm !== '') {
                    // If search is active, trigger search again with new filter
                    $('#post-search').trigger('input');
                    return;
                }
                
                // Remove any existing empty state message first
                $('.empty-state-filtered, .empty-state-search').remove();
                
                if (filterValue === 'all') {
                    $('.post-card').show();
                    
                    // If there are no posts at all, show the original empty state
                    if ($('.post-card').length === 0) {
                        $('.empty-state').show();
                    } else {
                        $('.empty-state').hide();
                    }
                } else {
                    $('.post-card').hide();
                    $('.empty-state').hide();
                    $(`.post-card[data-post-type="${filterValue}"]`).show();
                    
                    // Show empty state if no posts visible for this filter
                    if ($(`.post-card[data-post-type="${filterValue}"]:visible`).length === 0) {
                        // Format the filter value for display
                        const formattedFilter = filterValue
                            .replace(/([A-Z])/g, ' $1')
                            .replace(/^./, function(str) { return str.toUpperCase(); });
                            
                        $('#posts-container').append(`
                            <div class="text-center py-5 empty-state empty-state-filtered">
                                <div class="empty-state-icon mb-3">
                                    <i class="fas fa-filter text-muted fa-4x"></i>
                                </div>
                                <h5 class="text-muted mb-2">No ${formattedFilter} Posts</h5>
                                <p class="text-muted mb-0">Try selecting a different filter</p>
                            </div>
                        `);
                    }
                }
            });
            
            // Add success notification toast when post is created
            if (window.location.search.includes('success=true')) {
                const toastHtml = `
                    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
                        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
                            <div class="toast-header bg-success-soft">
                                <i class="fas fa-check-circle me-2 text-success"></i>
                                <strong class="me-auto">Success</strong>
                                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                            </div>
                            <div class="toast-body">
                                Your post has been successfully published.
                            </div>
                        </div>
                    </div>
                `;
                $('body').append(toastHtml);
                
                // Auto hide after 5 seconds
                setTimeout(function() {
                    $('.toast').toast('hide');
                }, 5000);
            }
        });
    </script>
} 