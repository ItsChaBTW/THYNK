@model THYNK.Models.DisasterReport
@{
    ViewData["Title"] = "Incident Details";
    Layout = "_CommunityLayout";
}

<div class="container-fluid px-lg-4 py-4">
<div class="row">
        <div class="col-12">
            <!-- Main Incident Card -->
            <div class="card shadow-sm mb-4 border-0 incident-card">
                <div class="card-header d-flex justify-content-between align-items-center bg-white border-bottom py-3">
                <div class="d-flex align-items-center">
                        @{
                            var headerColor = Model.Status == ReportStatus.Pending ? "warning" :
                                             Model.Status == ReportStatus.Verified ? "info" :
                                             Model.Status == ReportStatus.InProgress ? "primary" :
                                             Model.Status == ReportStatus.Resolved ? "success" : "danger";
                                             
                            var statusIcon = Model.Status == ReportStatus.Pending ? "clock" :
                                            Model.Status == ReportStatus.Verified ? "check-square" :
                                            Model.Status == ReportStatus.InProgress ? "tools" :
                                            Model.Status == ReportStatus.Resolved ? "check-circle" : "times-circle";
                        }
                        <div class="card-icon bg-gradient-@headerColor text-white me-3">
                            <i class="fas fa-@statusIcon"></i>
                        </div>
                        <div>
                            <h5 class="fw-bold m-0 title-text">@Model.Title</h5>
                            <div class="d-flex align-items-center mt-1">
                                <span class="badge bg-gradient-@headerColor">
                                    @(Model.Status == ReportStatus.InProgress ? "In Progress" : Model.Status.ToString())
                                </span>
                                <span class="text-muted ms-2 fs-7">
                                    <i class="fas fa-calendar-alt me-1"></i>@Model.DateReported.ToString("MMM dd, yyyy")
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="text-end d-flex flex-column align-items-end">
                            @switch (Model.Severity)
                            {
                                case SeverityLevel.Low:
                                <span class="severity-badge severity-low">
                                    <i class="fas fa-exclamation-circle me-1"></i>
                                    Low Severity
                                </span>
                                    break;
                                case SeverityLevel.Medium:
                                <span class="severity-badge severity-medium">
                                    <i class="fas fa-exclamation-circle me-1"></i>
                                    Medium Severity
                                </span>
                                    break;
                                case SeverityLevel.High:
                                <span class="severity-badge severity-high">
                                    <i class="fas fa-exclamation-circle me-1"></i>
                                    High Severity
                                </span>
                                    break;
                                case SeverityLevel.Critical:
                                <span class="severity-badge severity-critical">
                                    <i class="fas fa-exclamation-triangle me-1"></i>
                                    Critical Severity
                                </span>
                                    break;
                            }
                        </div>
                    </div>
                    
                <div class="card-body">
                    <!-- Key Information Section -->
                    <div class="d-flex justify-content-between mb-4 key-info-section">
                        <div class="incident-meta">
                            <p class="text-muted mb-0 fs-7">
                                <i class="fas fa-clock me-1"></i> @Model.DateReported.ToString("hh:mm tt")
                            </p>
                            @if (Model.IsAnonymous)
                            {
                                <p class="text-muted mb-0 fs-7">
                                    <i class="fas fa-user-secret me-1"></i> Anonymous
                                </p>
                            }
                            else
                            {
                                <p class="text-muted mb-0 fs-7">
                                    <i class="fas fa-user me-1"></i> @(Model.User?.FirstName + " " + Model.User?.LastName ?? "Unknown")
                                </p>
                            }
                        </div>
                        <div class="d-flex gap-2 align-items-center">
                            <div class="incident-type">
                            @switch (Model.Type)
                            {
                                case DisasterType.Earthquake:
                                        <div class="type-badge bg-gradient-danger text-white">
                                            <i class="fas fa-house-damage me-2"></i>Earthquake
                                        </div>
                                    break;
                                case DisasterType.Flood:
                                        <div class="type-badge bg-gradient-primary text-white">
                                            <i class="fas fa-water me-2"></i>Flood
                                        </div>
                                    break;
                                case DisasterType.Fire:
                                        <div class="type-badge bg-gradient-warning text-white">
                                            <i class="fas fa-fire me-2"></i>Fire
                                        </div>
                                    break;
                                case DisasterType.Landslide:
                                        <div class="type-badge bg-gradient-secondary text-white">
                                            <i class="fas fa-mountain me-2"></i>Landslide
                                        </div>
                                    break;
                                case DisasterType.Storm:
                                        <div class="type-badge bg-gradient-info text-white">
                                            <i class="fas fa-cloud-showers-heavy me-2"></i>Storm
                                        </div>
                                    break;
                                case DisasterType.Accident:
                                        <div class="type-badge bg-gradient-dark text-white">
                                            <i class="fas fa-car-crash me-2"></i>Accident
                                        </div>
                                    break;
                                default:
                                        <div class="type-badge bg-gradient-secondary text-white">
                                            <i class="fas fa-exclamation-circle me-2"></i>Other
                                        </div>
                                    break;
                            }
                        </div>
                            <button type="button" class="btn btn-action btn-timeline" data-bs-toggle="modal" data-bs-target="#timelineModal">
                                <i class="fas fa-history me-1"></i> Timeline
                            </button>
                            <button type="button" class="btn btn-action btn-emergency" data-bs-toggle="modal" data-bs-target="#emergencyModal">
                                <i class="fas fa-phone-alt me-1"></i> Emergency
                            </button>
                        </div>
                    </div>
                    
                    <!-- Description Section -->
                    <div class="content-section mb-4">
                        <h6 class="section-title">
                            <i class="fas fa-align-left me-2 text-primary"></i>Description
                        </h6>
                        <div class="section-content">
                            <p class="mb-0 text-description">@Model.Description</p>
                </div>
                </div>
                
                    <!-- Location Details Section -->
                    <div class="content-section mb-4">
                        <h6 class="section-title">
                            <i class="fas fa-map-marker-alt me-2 text-primary"></i>Location Details
                        </h6>
                        <div class="section-content">
                            <div class="row g-3">
                        <div class="col-md-6">
                                    <div class="location-item">
                                        <span class="fw-bold d-block fs-7 text-secondary">Full Address</span>
                                        <span class="location-text">@Model.Location</span>
                            </div>
                        </div>
                        <div class="col-md-6">
                                    <div class="location-item">
                                        <span class="fw-bold d-block fs-7 text-secondary">Coordinates</span>
                                        <span class="small location-text">@Model.Latitude.ToString("F6"), @Model.Longitude.ToString("F6")</span>
                            </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="location-item">
                                        <span class="fw-bold d-block fs-7 text-secondary">Purok/Street</span>
                                        <span class="location-text">@(String.IsNullOrEmpty(Model.Purok) || Model.Purok == "Unknown" ? "Not specified" : Model.Purok)</span>
                        </div>
                    </div>
                        <div class="col-md-3">
                                    <div class="location-item">
                                        <span class="fw-bold d-block fs-7 text-secondary">Barangay</span>
                                        <span class="location-text">@(String.IsNullOrEmpty(Model.Barangay) || Model.Barangay == "Unknown" ? "Not specified" : Model.Barangay)</span>
                            </div>
                        </div>
                        <div class="col-md-3">
                                    <div class="location-item">
                                        <span class="fw-bold d-block fs-7 text-secondary">City/Municipality</span>
                                        <span class="location-text">@(String.IsNullOrEmpty(Model.City) || Model.City == "Unknown" ? "Not specified" : Model.City)</span>
                            </div>
                        </div>
                        <div class="col-md-3">
                                    <div class="location-item">
                                        <span class="fw-bold d-block fs-7 text-secondary">Country</span>
                                        <span class="location-text">@Model.Country</span>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Incident Image (moved here) -->
                            @if (!String.IsNullOrEmpty(Model.ImageUrl) && Model.ImageUrl != "/images/default-report.jpg")
                            {
                                <div class="mt-4 incident-image-container">
                                    <div class="d-flex align-items-center mb-2">
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-image text-primary me-2"></i>
                                            <h6 class="section-subtitle mb-0">Incident Photo</h6>
                                        </div>
                                        <span class="ms-auto text-primary fs-7 view-image-text">
                                            <i class="fas fa-search-plus me-1"></i>Click to enlarge
                                        </span>
                                    </div>
                                    <div class="incident-image">
                                        <a href="@Model.ImageUrl" data-lightbox="incident-image" data-title="@Model.Title">
                                            <img src="@Model.ImageUrl" alt="Incident Photo" class="img-fluid rounded" />
                                            <div class="image-overlay">
                                                <i class="fas fa-search-plus"></i>
                                            </div>
                                        </a>
                            </div>
                        </div>
                            }

                            <!-- Map inside location section -->
                            <div class="mt-4">
                                <div class="d-flex align-items-center mb-2">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-map-marked-alt text-primary me-2"></i>
                                        <h6 class="section-subtitle mb-0">Map View</h6>
                            </div>
                        </div>
                                <div id="map" class="map-preview rounded"></div>
                        </div>
                    </div>
                </div>
                
                    <!-- Additional Information Section -->
                @if (!String.IsNullOrEmpty(Model.AdditionalInfo))
                {
                        <div class="content-section mb-4">
                            <h6 class="section-title">
                                <i class="fas fa-info-circle me-2 text-primary"></i>Additional Information
                            </h6>
                            <div class="section-content">
                                <p class="mb-0 text-description">@Model.AdditionalInfo</p>
                                                        </div>                        </div>                    }                    <!-- Status History Section -->                    <div class="content-section mb-4">                        <h6 class="section-title">                            <i class="fas fa-history me-2 text-primary"></i>Status History                        </h6>                        <div class="section-content">                            <div class="timeline">                                @if (Model.DateVerified.HasValue)                                {                                    <div class="timeline-item">                                        <div class="timeline-marker bg-info"></div>                                        <div class="timeline-content">                                            <h6 class="mb-0 fw-bold fs-7">Report Verified</h6>                                            <small class="text-muted">@Model.DateVerified.Value.ToString("yyyy-MM-dd HH:mm")</small>                                        </div>                                    </div>                                }                                @if (Model.AssignedAt.HasValue && Model.AssignedTo != null)                                {                                    <div class="timeline-item">                                        <div class="timeline-marker bg-primary"></div>                                        <div class="timeline-content">                                            <h6 class="mb-0 fw-bold fs-7">Assigned to @Model.AssignedTo.OrganizationName</h6>                                            <small class="text-muted">@Model.AssignedAt.Value.ToString("yyyy-MM-dd HH:mm")</small>                                        </div>                                    </div>                                }                                @if (Model.DateInProgress.HasValue)                                {                                    <div class="timeline-item">                                        <div class="timeline-marker bg-primary"></div>                                        <div class="timeline-content">                                            <h6 class="mb-0 fw-bold fs-7">Response Started</h6>                                            <small class="text-muted">@Model.DateInProgress.Value.ToString("yyyy-MM-dd HH:mm")</small>                                        </div>                                    </div>                                }                                @if (Model.ResolvedAt.HasValue)                                {                                    <div class="timeline-item">                                        <div class="timeline-marker bg-success"></div>                                        <div class="timeline-content">                                            <h6 class="mb-0 fw-bold fs-7">Report Resolved</h6>                                            <small class="text-muted">@Model.ResolvedAt.Value.ToString("yyyy-MM-dd HH:mm")</small>                                            @if (!String.IsNullOrEmpty(Model.Resolution))                                            {                                                <p class="mb-0 mt-1 text-description">@Model.Resolution</p>                                            }                                        </div>                                    </div>                                }                            </div>                        </div>                    </div>
                    <!-- Action Buttons -->
                    <div class="d-flex flex-wrap gap-3 justify-content-between mt-4 action-buttons-container">
                        <div class="d-flex gap-2">
                            <a asp-action="MyReports" class="btn btn-back">
                                <i class="fas fa-arrow-left me-2"></i>Back to My Reports
                            </a>
                            <a asp-action="IncidentMap" class="btn btn-map">
                                <i class="fas fa-map-marked-alt me-1"></i>View on Map
                            </a>
                        </div>
                        <div class="d-flex gap-2 share-buttons">
                            <button type="button" class="btn btn-share btn-facebook" onclick="shareToFacebook()">
                                <i class="fab fa-facebook-f me-1"></i>Share
                            </button>
                            <button type="button" class="btn btn-share btn-twitter" onclick="shareToTwitter()">
                                <i class="fab fa-twitter me-1"></i>Tweet
                            </button>
                            <button type="button" class="btn btn-share btn-general" onclick="shareGeneral()">
                                <i class="fas fa-share-alt me-1"></i>Share
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
            </div>
        </div>
        
<!-- Status Timeline Modal -->
<div class="modal fade" id="timelineModal" tabindex="-1" aria-labelledby="timelineModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0">
            <div class="modal-header bg-gradient-primary text-white">
                <h5 class="modal-title" id="timelineModalLabel">
                    <i class="fas fa-history me-2"></i>Status Timeline
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="timeline">
                    <div class="timeline-item">
                        <div class="timeline-marker bg-success"></div>
                        <div class="timeline-content">
                            <h6 class="mb-0 fw-bold fs-7">Report Submitted</h6>
                            <small class="text-muted">@Model.DateReported.ToString("MMM dd, yyyy hh:mm tt")</small>
                        </div>
                    </div>
                    <div class="timeline-item">
                        <div class="timeline-marker @(Model.Status != ReportStatus.Pending ? "bg-success" : "bg-secondary")"></div>
                        <div class="timeline-content">
                            <h6 class="mb-0 fw-bold fs-7">Verification</h6>
                            <small class="text-muted">@(Model.Status != ReportStatus.Pending ? "Verified" : "Pending verification")</small>
                        </div>
                    </div>
                    <div class="timeline-item">
                        <div class="timeline-marker @(Model.Status == ReportStatus.InProgress || Model.Status == ReportStatus.Resolved ? "bg-success" : "bg-secondary")"></div>
                        <div class="timeline-content">
                            <h6 class="mb-0 fw-bold fs-7">Response In Progress</h6>
                            <small class="text-muted">@(Model.Status == ReportStatus.InProgress ? "Currently responding" : (Model.Status == ReportStatus.Resolved ? "Completed" : "Not started"))</small>
                        </div>
                    </div>
                    <div class="timeline-item">
                        <div class="timeline-marker @(Model.Status == ReportStatus.Resolved ? "bg-success" : "bg-secondary")"></div>
                        <div class="timeline-content">
                            <h6 class="mb-0 fw-bold fs-7">Resolution</h6>
                            <small class="text-muted">@(Model.Status == ReportStatus.Resolved ? "Incident resolved" : "Pending resolution")</small>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Emergency Contacts Modal -->
<div class="modal fade" id="emergencyModal" tabindex="-1" aria-labelledby="emergencyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0">
            <div class="modal-header bg-gradient-danger text-white">
                <h5 class="modal-title" id="emergencyModalLabel">
                    <i class="fas fa-phone-alt me-2"></i>Emergency Contacts
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <div class="emergency-info py-3 px-4 bg-light">
                    <div class="d-flex align-items-center mb-2">
                        <i class="fas fa-info-circle text-danger me-2"></i>
                        <h6 class="mb-0 fw-bold">In case of emergency:</h6>
                    </div>
                    <ol class="ps-4 mb-0">
                        <li>Stay calm and assess the situation</li>
                        <li>Ensure your safety first</li>
                        <li>Call the appropriate emergency service</li>
                        <li>Provide clear location details</li>
                    </ol>
                </div>
                
                <div class="emergency-contacts p-4">
                    <div class="contact-grid">
                        <div class="contact-item">
                            <div class="contact-icon medical">
                                <i class="fas fa-ambulance"></i>
                            </div>
                            <div class="contact-details">
                                <h6 class="contact-title">Medical Emergency</h6>
                                <p class="contact-description mb-2">For injuries, health emergencies, and ambulance services</p>
                                <a href="tel:911" class="btn btn-contact btn-medical">
                                    <i class="fas fa-phone-alt me-1"></i> 911
                                </a>
                            </div>
                        </div>
                        
                        <div class="contact-item">
                            <div class="contact-icon fire">
                                <i class="fas fa-fire-extinguisher"></i>
                            </div>
                            <div class="contact-details">
                                <h6 class="contact-title">Fire Department</h6>
                                <p class="contact-description mb-2">For fires, rescues, and hazardous materials incidents</p>
                                <a href="tel:911" class="btn btn-contact btn-fire">
                                    <i class="fas fa-phone-alt me-1"></i> 911
                                </a>
                            </div>
                        </div>
                        
                        <div class="contact-item">
                            <div class="contact-icon disaster">
                                <i class="fas fa-shield-alt"></i>
                            </div>
                            <div class="contact-details">
                                <h6 class="contact-title">Local Disaster Office</h6>
                                <p class="contact-description mb-2">For disaster response coordination and evacuation</p>
                                <a href="tel:123456789" class="btn btn-contact btn-disaster">
                                    <i class="fas fa-phone-alt me-1"></i> Local Hotline
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Lightbox2 JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/js/lightbox.min.js"></script>
    
    <script>
        // Lightbox configuration
        lightbox.option({
            'resizeDuration': 200,
            'wrapAround': true,
            'fadeDuration': 200,
            'imageFadeDuration': 200,
            'positionFromTop': 50,
            'alwaysShowNavOnTouchDevices': true,
            'showImageNumberLabel': false
        });
        
        // Add custom close button to lightbox
        $(document).on('click', '.lb-container', function(e) {
            if ($(e.target).hasClass('lb-container')) {
                lightbox.end();
            }
        });
        
        // Create and append custom close button after lightbox is opened
        lightbox.option({
            'albumLabel': '',
            'onOpen': function() {
                setTimeout(function() {
                    if (!$('.lb-custom-close').length) {
                        const closeBtn = $('<div class="lb-custom-close"><i class="fas fa-times"></i></div>');
                        $('.lb-container').append(closeBtn);
                        
                        // Add click event to close lightbox
                        $('.lb-custom-close').on('click', function(e) {
                            e.preventDefault();
                            e.stopPropagation();
                            lightbox.end();
                        });
                    }
                }, 100);
            }
        });
    
        // Initialize the map
        mapboxgl.accessToken = 'pk.eyJ1IjoiY2hhYW5nZ2cwMTkzIiwiYSI6ImNtOHo5ODF6cDAxcTUyaXB0ODBtYXlhN3oifQ.SJ-eGgWUplbUFNE_UwK7JA';
        const map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [@Model.Longitude, @Model.Latitude],
            zoom: 15
        });

        // Add map controls
        map.addControl(new mapboxgl.NavigationControl(), 'top-right');
        
        // Add a marker based on incident type
        const markerColor = 
            @switch(Model.Type) {
                case DisasterType.Earthquake: @Html.Raw("'#dc3545'"); break;
                case DisasterType.Flood: @Html.Raw("'#0d6efd'"); break;
                case DisasterType.Fire: @Html.Raw("'#fd7e14'"); break;
                case DisasterType.Landslide: @Html.Raw("'#6c757d'"); break;
                case DisasterType.Storm: @Html.Raw("'#0dcaf0'"); break;
                case DisasterType.Accident: @Html.Raw("'#212529'"); break;
                default: @Html.Raw("'#6c757d'"); break;
            };
            
        const marker = new mapboxgl.Marker({
            color: markerColor
        }).setLngLat([@Model.Longitude, @Model.Latitude])
          .addTo(map);
          
        // Add a popup
        new mapboxgl.Popup({
            offset: 25,
            closeButton: false
        }).setLngLat([@Model.Longitude, @Model.Latitude])
          .setHTML(`
            <div class="map-popup">
                <strong>${'@Model.Title'}</strong>
                <br>
                <span class="text-muted">${'@Model.Type'}</span>
            </div>
          `)
          .addTo(map);

        // Social Media Sharing Functions
        function getShareUrl() {
            return window.location.href;
        }
        
        function getShareTitle() {
            return '@Model.Title';
        }
        
        function getShareDescription() {
            return '@Model.Description'.substring(0, 200) + '...';
        }
        
        function shareToFacebook() {
            const url = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(getShareUrl())}`;
            window.open(url, '_blank', 'width=600,height=400');
        }
        
        function shareToTwitter() {
            const text = `${getShareTitle()} - Check out this incident report on THYNK`;
            const url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(getShareUrl())}`;
            window.open(url, '_blank', 'width=600,height=400');
        }
        
        function shareToLinkedIn() {
            const url = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(getShareUrl())}`;
            window.open(url, '_blank', 'width=600,height=400');
        }
        
        function shareGeneral() {
            if (navigator.share) {
                navigator.share({
                    title: getShareTitle(),
                    text: getShareDescription(),
                    url: getShareUrl()
                }).catch(console.error);
            } else {
                // Fallback for browsers that don't support Web Share API
                const shareUrl = getShareUrl();
                navigator.clipboard.writeText(shareUrl).then(() => {
                    alert('Link copied to clipboard!');
                }).catch(err => {
                    console.error('Failed to copy: ', err);
                });
            }
        }
    </script>
}

@section Styles {
    <!-- Lightbox2 CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/css/lightbox.min.css">
    
    <style>
        :root {
            --primary-color: #0d6efd;
            --primary-light: rgba(13, 110, 253, 0.1);
            --secondary-color: #6c757d;
            --secondary-light: rgba(108, 117, 125, 0.1);
            --success-color: #198754;
            --success-light: rgba(25, 135, 84, 0.1);
            --info-color: #0dcaf0;
            --info-light: rgba(13, 202, 240, 0.1);
            --warning-color: #ffc107;
            --warning-light: rgba(255, 193, 7, 0.1);
            --danger-color: #dc3545;
            --danger-light: rgba(220, 53, 69, 0.1);
            --dark-color: #212529;
            --dark-light: rgba(33, 37, 41, 0.1);
            --light-color: #f8f9fa;
            --border-color: rgba(0, 0, 0, 0.05);
            --bg-color: #eef0f5;
            --text-color: #2d3748;
            --text-muted: #6c757d;
            --border-radius: 10px;
            --box-shadow: 0 1px 3px rgba(0,0,0,0.05);
        }

        /* Base styles */
        body {
            background-color: var(--bg-color);
            color: var(--text-color);
        }
        
        /* Container adjustments for full width */
        .container-fluid {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        /* Font size utility */
        .fs-7 {
            font-size: 0.85rem;
        }
        
        /* Card enhancements */
        .card {
            transition: all 0.2s ease;
            border-radius: var(--border-radius);
            border: none;
        }
        
        .card:hover {
            box-shadow: 0 4px 12px rgba(0,0,0,0.08) !important;
        }
        
        .card-header {
            border-top-left-radius: var(--border-radius) !important;
            border-top-right-radius: var(--border-radius) !important;
            border-bottom: 1px solid var(--border-color);
        }
        
        .incident-card .card-body {
            padding: 1.5rem;
        }
        
        /* Title text styling */
        .title-text {
            color: var(--text-color);
            letter-spacing: -0.01em;
            font-size: 1.25rem;
            font-weight: 600;
        }
        
        /* Card icon */
        .card-icon {
            display: flex;
            align-items: center;
            justify-content: center;
            min-width: 42px;
            height: 42px;
            border-radius: 10px;
            font-size: 1.2rem;
            box-shadow: 0 3px 6px rgba(0,0,0,0.1);
        }
        
        /* New action buttons */
        .btn-action {
            border-radius: 50px;
            font-size: 0.85rem;
            padding: 0.4rem 0.8rem;
            margin-right: 0.5rem;
            font-weight: 500;
            border: none;
            box-shadow: var(--box-shadow);
            transition: all 0.2s ease;
        }
        
        .btn-timeline {
            background: linear-gradient(135deg, rgba(13, 110, 253, 0.08) 0%, rgba(13, 110, 253, 0.12) 100%);
            color: var(--primary-color);
        }
        
        .btn-timeline:hover {
            background: linear-gradient(135deg, rgba(13, 110, 253, 0.12) 0%, rgba(13, 110, 253, 0.18) 100%);
            color: var(--primary-color);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(13, 110, 253, 0.1);
        }
        
        .btn-emergency {
            background: linear-gradient(135deg, rgba(220, 53, 69, 0.08) 0%, rgba(220, 53, 69, 0.12) 100%);
            color: var(--danger-color);
        }
        
        .btn-emergency:hover {
            background: linear-gradient(135deg, rgba(220, 53, 69, 0.12) 0%, rgba(220, 53, 69, 0.18) 100%);
            color: var(--danger-color);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(220, 53, 69, 0.1);
        }
        
        /* Key info section */
        .key-info-section {
            background-color: white;
            border-radius: var(--border-radius);
            padding: 1rem 1.25rem;
            box-shadow: var(--box-shadow);
            border: 1px solid var(--border-color);
        }
        
        /* Content sections styling */
        .content-section {
            background-color: white;
            border-radius: var(--border-radius);
            padding: 1.5rem;
            box-shadow: var(--box-shadow);
            border: 1px solid var(--border-color);
        }
        
        .section-title {
            text-transform: uppercase;
            font-weight: 600;
            font-size: 0.85rem;
            color: var(--text-color);
            margin-bottom: 1.25rem;
            letter-spacing: 0.5px;
            border-bottom: 1px solid var(--border-color);
            padding-bottom: 0.75rem;
        }
        
        .section-subtitle {
            font-weight: 600;
            font-size: 0.85rem;
            color: var(--text-color);
        }
        
        .section-content {
            color: var(--text-color);
        }
        
        .text-description {
            line-height: 1.6;
            color: #444;
        }
        
        /* Location item styling */
        .location-item {
            margin-bottom: 0;
            background-color: rgba(248, 249, 250, 0.5);
            border-radius: 8px;
            padding: 0.75rem 1rem;
            border: 1px solid var(--border-color);
            transition: all 0.2s ease;
        }
        
        .location-item:hover {
            background-color: rgba(248, 249, 250, 0.8);
            box-shadow: 0 2px 5px rgba(0,0,0,0.03);
        }
        
        .location-text {
            color: #444;
            display: block;
            margin-top: 0.25rem;
        }
        
        /* Type badge styling */
        .type-badge {
            display: inline-flex;
            align-items: center;
            padding: 0.5rem 1rem;
            border-radius: 50px;
            font-size: 0.85rem;
            font-weight: 600;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        /* Map styling */
        .map-preview {
            width: 100%;
            height: 220px;
            border: 1px solid var(--border-color);
            box-shadow: var(--box-shadow);
            border-radius: 8px;
            overflow: hidden;
        }
        
        .map-popup {
            padding: 4px 2px;
        }
        
        /* Incident image styling */
        .incident-image-container {
            border-top: 1px solid var(--border-color);
            padding-top: 1.25rem;
        }
        
        .view-image-text {
            opacity: 0.8;
            transition: all 0.2s ease;
        }
        
        .view-image-text:hover {
            opacity: 1;
        }
        
        .incident-image {
            max-width: 100%;
            max-height: 250px;
            overflow: hidden;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            position: relative;
            cursor: pointer;
            transition: all 0.2s ease;
            box-shadow: var(--box-shadow);
        }
        
        .incident-image:hover {
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
            transform: translateY(-2px);
        }
        
        .incident-image img {
            object-fit: cover;
            width: 100%;
            max-height: 250px;
        }
        
        .image-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.3);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
            opacity: 0;
            transition: opacity 0.2s ease;
        }
        
        .incident-image:hover .image-overlay {
            opacity: 1;
        }
        
        /* Action buttons container */
        .action-buttons-container {
            background-color: white;
            border-radius: 10px;
            padding: 1rem 1.25rem;
            box-shadow: var(--box-shadow);
            border: 1px solid var(--border-color);
        }
        
        /* Action buttons */
        .btn-back {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            color: var(--secondary-color);
            border: 1px solid rgba(108, 117, 125, 0.2);
            border-radius: 8px;
            transition: all 0.25s ease;
            padding: 0.5rem 1.25rem;
            font-weight: 500;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            position: relative;
            overflow: hidden;
            z-index: 1;
        }
        
        .btn-back:before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 0;
            height: 100%;
            background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);
            transition: all 0.25s ease;
            z-index: -1;
        }
        
        .btn-back:hover {
            color: var(--dark-color);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.08);
        }
        
        .btn-back:hover:before {
            width: 100%;
        }
        
        .btn-map {
            background: linear-gradient(135deg, #0dcaf0 0%, #0aa2c0 100%);
            color: white;
            border: none;
            border-radius: 8px;
            transition: all 0.25s ease;
            padding: 0.5rem 1.25rem;
            font-weight: 500;
            box-shadow: 0 2px 5px rgba(13, 202, 240, 0.15);
            position: relative;
            overflow: hidden;
            z-index: 1;
        }
        
        .btn-map:before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 0;
            height: 100%;
            background: linear-gradient(135deg, #0aa2c0 0%, #098da8 100%);
            transition: all 0.25s ease;
            z-index: -1;
        }
        
        .btn-map:hover {
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(13, 202, 240, 0.2);
        }
        
        .btn-map:hover:before {
            width: 100%;
        }
        
        /* Modal styling */
        .modal-content {
            border-radius: 12px;
            overflow: hidden;
            border: none;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }
        
        .modal-header {
            padding: 1rem 1.5rem;
            border-bottom: 1px solid var(--border-color);
        }
        
        .modal-body {
            padding: 1.5rem;
        }
        
        .modal-footer {
            padding: 0.75rem 1.5rem;
            background-color: var(--light-color);
            border-top: 1px solid var(--border-color);
        }
        
        /* Timeline styles */
        .timeline {
            position: relative;
            padding-left: 30px;
        }
        
        .timeline-item {
            position: relative;
            padding-bottom: 1.5rem;
        }
        
        .timeline-item:last-child {
            padding-bottom: 0;
        }
        
        .timeline-item:not(:last-child)::before {
            content: '';
            position: absolute;
            left: -24px;
            top: 24px;
            bottom: 0;
            width: 2px;
            background-color: #e9ecef;
        }
        
        .timeline-marker {
            position: absolute;
            left: -30px;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            border: 2px solid #fff;
            box-shadow: 0 0 0 2px currentColor;
        }
        
        .timeline-content {
            padding-left: 0;
        }
        
        /* Emergency info section */
        .emergency-info {
            border-bottom: 1px solid var(--border-color);
            background-color: rgba(220, 53, 69, 0.03);
        }
        
        .emergency-info ol {
            color: #444;
            font-size: 0.9rem;
            line-height: 1.6;
        }
        
        .emergency-info ol li {
            margin-bottom: 0.5rem;
        }
        
        .emergency-info ol li:last-child {
            margin-bottom: 0;
        }
        
        /* Contact grid */
        .contact-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }
        
        /* Contact item styling */
        .contact-item {
            display: flex;
            align-items: flex-start;
            background-color: rgba(248, 249, 250, 0.5);
            border-radius: 10px;
            border: 1px solid var(--border-color);
            transition: all 0.2s ease;
            padding: 0;
            overflow: hidden;
        }
        
        .contact-item:hover {
            background-color: rgba(248, 249, 250, 0.8);
            box-shadow: 0 4px 8px rgba(0,0,0,0.05);
            transform: translateY(-2px);
        }
        
        .contact-icon {
            width: 50px;
            height: 50px;
            border-radius: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.1rem;
            margin-right: 1rem;
            flex-shrink: 0;
        }
        
        .contact-details {
            padding: 1rem;
            flex-grow: 1;
        }
        
        .contact-title {
            font-weight: 600;
            font-size: 1rem;
            margin-bottom: 0.25rem;
            color: var(--text-color);
        }
        
        .contact-description {
            font-size: 0.85rem;
            color: var(--text-muted);
            margin-bottom: 0.75rem;
            line-height: 1.4;
        }
        
        /* Button styling */
        .btn-contact {
            padding: 0.45rem 1rem;
            font-size: 0.9rem;
            border-radius: 6px;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            transition: all 0.25s ease;
        }
        
        @@media (min-width: 768px) {
            .contact-grid {
                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                gap: 1rem;
            }
            
            .contact-item {
                flex-direction: column;
                align-items: stretch;
                height: 100%;
            }
            
            .contact-icon {
                width: 100%;
                height: 60px;
                margin-right: 0;
                border-radius: 0;
                margin-bottom: 0;
            }
            
            .contact-details {
                padding: 1.25rem;
                display: flex;
                flex-direction: column;
                flex-grow: 1;
            }
            
            .contact-description {
                margin-bottom: 1rem;
                flex-grow: 1;
            }
            
            .btn-contact {
                align-self: flex-start;
                justify-content: center;
                width: 100%;
            }
        }
        
        /* Responsive adjustments */
        @@media (max-width: 767.98px) {
            .content-section {
                padding: 1.25rem;
            }
            
            .incident-card .card-body {
                padding: 1.25rem;
            }
            
            .incident-image {
                max-height: 200px;
            }
            
            .incident-image img {
                max-height: 200px;
            }
            
            .key-info-section {
                flex-direction: column;
                gap: 1rem;
            }
            
            .key-info-section .d-flex.gap-2 {
                flex-wrap: wrap;
            }
            
            .action-buttons-container {
                flex-direction: column;
                gap: 1rem;
            }
            
            .share-buttons {
                flex-wrap: wrap;
                justify-content: flex-start;
            }
            
            .btn-share {
                flex: 1;
                min-width: 120px;
                justify-content: center;
            }
        }
        
        /* Gradient backgrounds */
        .bg-gradient-primary {
            background: linear-gradient(135deg, #0d6efd 0%, #0a58ca 100%);
        }
        
        .bg-gradient-secondary {
            background: linear-gradient(135deg, #6c757d 0%, #5a6268 100%);
        }
        
        .bg-gradient-success {
            background: linear-gradient(135deg, #198754 0%, #146c43 100%);
        }
        
        .bg-gradient-info {
            background: linear-gradient(135deg, #0dcaf0 0%, #0aa2c0 100%);
        }
        
        .bg-gradient-warning {
            background: linear-gradient(135deg, #ffc107 0%, #d39e00 100%);
        }
        
        .bg-gradient-danger {
            background: linear-gradient(135deg, #dc3545 0%, #b02a37 100%);
        }
        
        .bg-gradient-dark {
            background: linear-gradient(135deg, #212529 0%, #1a1e21 100%);
        }
        
        /* Severity badges */
        .severity-badge {
            display: inline-flex;
            align-items: center;
            padding: 0.4rem 0.75rem;
            border-radius: 50px;
            font-size: 0.8rem;
            font-weight: 500;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }
        
        .severity-low {
            background: linear-gradient(135deg, rgba(25, 135, 84, 0.1) 0%, rgba(25, 135, 84, 0.15) 100%);
            color: #198754;
        }
        
        .severity-medium {
            background: linear-gradient(135deg, rgba(255, 193, 7, 0.1) 0%, rgba(255, 193, 7, 0.15) 100%);
            color: #856404;
        }
        
        .severity-high {
            background: linear-gradient(135deg, rgba(220, 53, 69, 0.1) 0%, rgba(220, 53, 69, 0.15) 100%);
            color: #dc3545;
        }
        
        .severity-critical {
            background: linear-gradient(135deg, rgba(33, 37, 41, 0.1) 0%, rgba(33, 37, 41, 0.15) 100%);
            color: #212529;
        }
        
        /* Button hover transitions */
        .btn {
            transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        /* Lightbox customizations */
        .lb-dataContainer {
            padding-top: 10px;
        }
        
        .lb-data .lb-caption {
            font-weight: 600;
        }
        
        /* Custom close button for lightbox */
        .lb-custom-close {
            position: absolute;
            top: 15px;
            right: 15px;
            width: 36px;
            height: 36px;
            background-color: rgba(0, 0, 0, 0.6);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
            cursor: pointer;
            z-index: 9999;
            transition: all 0.2s ease;
        }
        
        .lb-custom-close:hover {
            background-color: rgba(220, 53, 69, 0.9);
            transform: scale(1.1);
        }
        
        /* Hide default close button */
        .lb-data .lb-close {
            display: none;
        }
        
        /* Make the lightbox container take full available space */
        .lb-outerContainer {
            max-width: 90vw !important;
            max-height: 80vh !important;
        }
        
        .lb-image {
            max-width: 90vw !important;
            max-height: 80vh !important;
        }
        
        /* Share buttons styling */
        .share-buttons {
            display: flex;
            gap: 0.5rem;
        }
        
        .btn-share {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-weight: 500;
            font-size: 0.9rem;
            display: inline-flex;
            align-items: center;
            transition: all 0.25s ease;
            border: none;
            color: white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .btn-share:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }
        
        .btn-facebook {
            background: linear-gradient(135deg, #1877f2 0%, #166fe5 100%);
        }
        
        .btn-facebook:hover {
            background: linear-gradient(135deg, #166fe5 0%, #1464d1 100%);
            color: white;
        }
        
        .btn-twitter {
            background: linear-gradient(135deg, #1da1f2 0%, #1a91da 100%);
        }
        
        .btn-twitter:hover {
            background: linear-gradient(135deg, #1a91da 0%, #1781c3 100%);
            color: white;
        }
        
        .btn-general {
            background: linear-gradient(135deg, #6c757d 0%, #5a6268 100%);
        }
        
        .btn-general:hover {
            background: linear-gradient(135deg, #5a6268 0%, #495057 100%);
            color: white;
        }
    </style>
} 