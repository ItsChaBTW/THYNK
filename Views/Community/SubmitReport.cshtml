@model THYNK.Models.DisasterReport
@{
    ViewData["Title"] = "Report Incident";
    Layout = "_CommunityLayout";
}

<div class="container-fluid px-4 py-4">
    <div class="row g-4">
        <!-- Main Form Section -->
        <div class="col-lg-8">
            <div class="card shadow-sm border-0">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center mb-4">
                        <div class="report-icon bg-danger bg-opacity-10 text-danger rounded-circle p-3 me-3">
                            <i class="fas fa-exclamation-triangle fa-lg"></i>
                    </div>
                    <div>
                            <h5 class="mb-1">Report Incident</h5>
                            <p class="text-muted mb-0">Submit details about a disaster or accident</p>
                        </div>
                    </div>

                <form asp-action="SubmitReport" method="post" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="mb-4">
                            <label asp-for="Title" class="form-label small text-muted">Title</label>
                            <input asp-for="Title" class="form-control form-control-lg bg-light border-0" 
                                   placeholder="Brief title of the incident" required />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>

                        <div class="row mb-4">
                            <div class="col-md-6">
                                <label asp-for="Type" class="form-label small text-muted">Incident Type</label>
                                <select asp-for="Type" class="form-select bg-light border-0" required>
                            @foreach (var type in Enum.GetValues(typeof(DisasterType)))
                            {
                                <option value="@type">@type</option>
                            }
                        </select>
                        <span asp-validation-for="Type" class="text-danger"></span>
                    </div>
                            <div class="col-md-6">
                                <label asp-for="Severity" class="form-label small text-muted">Severity Level</label>
                                <select asp-for="Severity" class="form-select bg-light border-0" required>
                            @foreach (var severity in Enum.GetValues(typeof(SeverityLevel)))
                            {
                                <option value="@severity">@severity</option>
                            }
                        </select>
                        <span asp-validation-for="Severity" class="text-danger"></span>
                    </div>
                    </div>

                        <div class="mb-4">
                            <label asp-for="Description" class="form-label small text-muted">Description</label>
                            <textarea asp-for="Description" class="form-control bg-light border-0" rows="4" 
                                      placeholder="Detailed description of what happened" required></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label class="form-label small text-muted">Location</label>
                            <div class="alert alert-light border mb-3">
                                <i class="fas fa-info-circle text-primary me-2"></i>
                                Use the map to pin the exact location or click "Detect" to use your current location. You can drag the pin to adjust.
                            </div>
                            <div class="input-group mb-3">
                                <input asp-for="Location" id="location" class="form-control bg-light border-0" 
                                       placeholder="Complete address" required />
                                <button type="button" class="btn btn-primary rounded-end" id="detect-location">
                                    <i class="fas fa-map-marker-alt me-1"></i> Detect
                            </button>
                        </div>
                        <span asp-validation-for="Location" class="text-danger"></span>
                    </div>

                        <div class="row mb-4">
                        <div class="col-md-6">
                                <label asp-for="Purok" class="form-label small text-muted">Purok/Street</label>
                                <input asp-for="Purok" id="purok" class="form-control bg-light border-0" 
                                       placeholder="Purok or Street number" />
                            <span asp-validation-for="Purok" class="text-danger"></span>
                        </div>
                        <div class="col-md-6">
                                <label asp-for="Barangay" class="form-label small text-muted">Barangay</label>
                                <input asp-for="Barangay" id="barangay" class="form-control bg-light border-0" 
                                       placeholder="Barangay name" />
                            <span asp-validation-for="Barangay" class="text-danger"></span>
                        </div>
                    </div>
                    
                        <div class="row mb-4">
                        <div class="col-md-6">
                                <label asp-for="City" class="form-label small text-muted">City/Municipality</label>
                                <input asp-for="City" id="city" class="form-control bg-light border-0" 
                                       placeholder="City or Municipality" />
                            <span asp-validation-for="City" class="text-danger"></span>
                        </div>
                        <div class="col-md-6">
                                <label asp-for="Country" class="form-label small text-muted">Country</label>
                                <input asp-for="Country" id="country" class="form-control bg-light border-0" 
                                       placeholder="Country" value="Philippines" />
                            <span asp-validation-for="Country" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Hidden fields for coordinates -->
                    <input type="hidden" asp-for="Latitude" id="latitude" />
                    <input type="hidden" asp-for="Longitude" id="longitude" />

                        <div class="mb-4">
                            <label class="form-label small text-muted">Photo (Optional)</label>
                            <div class="input-group">
                                <input type="file" class="form-control bg-light border-0" id="photo" name="photo" 
                                       accept="image/*" />
                                <button type="button" class="btn btn-light border-0" id="clear-photo">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        <small class="text-muted">Upload a photo of the incident if available.</small>
                    </div>

                        <div class="mb-4">
                            <label asp-for="AdditionalInfo" class="form-label small text-muted">Additional Information (Optional)</label>
                            <textarea asp-for="AdditionalInfo" class="form-control bg-light border-0" rows="3" 
                                      placeholder="Any other details you'd like to share"></textarea>
                    </div>

                        <div class="d-flex justify-content-end gap-2">
                            <a asp-action="Dashboard" class="btn btn-light rounded-pill px-4">
                                <i class="fas fa-times me-1"></i>Cancel
                            </a>
                            <button type="submit" class="btn btn-danger rounded-pill px-4">
                                <i class="fas fa-paper-plane me-1"></i>Submit Report
                            </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Map Preview -->
            <div class="card shadow-sm border-0 mb-4">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center mb-3">
                        <div class="map-icon bg-primary bg-opacity-10 text-primary rounded-circle p-3 me-3">
                            <i class="fas fa-map-marked-alt fa-lg"></i>
                        </div>
                        <div>
                            <h6 class="mb-1">Pin Location</h6>
                            <p class="text-muted small mb-0">Drag the marker to set the exact location</p>
                        </div>
            </div>
                    <div id="map" class="map-preview rounded-3"></div>
                </div>
            </div>
            
            <!-- Guidelines -->
            <div class="card shadow-sm border-0">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center mb-3">
                        <div class="guidelines-icon bg-info bg-opacity-10 text-info rounded-circle p-3 me-3">
                            <i class="fas fa-info-circle fa-lg"></i>
                        </div>
                        <div>
                            <h6 class="mb-1">Reporting Guidelines</h6>
                            <p class="text-muted small mb-0">Important information to remember</p>
                        </div>
                    </div>
                    <div class="guidelines-content">
                        <div class="d-flex mb-3">
                            <div class="guideline-icon bg-success bg-opacity-10 text-success rounded-circle p-2 me-3">
                                <i class="fas fa-check"></i>
                            </div>
                            <div>
                                <h6 class="mb-1">Be Accurate</h6>
                                <p class="text-muted small mb-0">Provide precise details about the incident</p>
            </div>
        </div>
                        <div class="d-flex mb-3">
                            <div class="guideline-icon bg-warning bg-opacity-10 text-warning rounded-circle p-2 me-3">
                                <i class="fas fa-exclamation"></i>
            </div>
                            <div>
                                <h6 class="mb-1">Stay Safe</h6>
                                <p class="text-muted small mb-0">Do not put yourself in danger to report</p>
                </div>
                </div>
                        <div class="d-flex">
                            <div class="guideline-icon bg-info bg-opacity-10 text-info rounded-circle p-2 me-3">
                                <i class="fas fa-camera"></i>
                </div>
                <div>
                                <h6 class="mb-1">Include Photos</h6>
                                <p class="text-muted small mb-0">Add clear images if safely possible</p>
                            </div>
                        </div>
                </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .map-preview {
            height: 300px;
            border-radius: 0.5rem;
        }

        .report-icon,
        .map-icon,
        .guidelines-icon {
            width: 48px;
            height: 48px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .guideline-icon {
            width: 32px;
            height: 32px;
        }

        .form-control:focus,
        .form-select:focus {
            box-shadow: none;
            border-color: #dee2e6;
        }

        .form-control,
        .form-select {
            transition: all 0.2s ease-in-out;
        }

        .form-control:hover,
        .form-select:hover {
            background-color: #f8f9fa !important;
        }

        .alert-light {
            background-color: #f8f9fa;
            border-color: #e9ecef;
        }

        .btn {
            transition: all 0.2s ease-in-out;
        }

        .btn:hover {
            transform: translateY(-1px);
        }

        .btn-light {
            background-color: #f8f9fa;
            border-color: #e9ecef;
        }

        .btn-light:hover {
            background-color: #e9ecef;
            border-color: #dee2e6;
        }
    </style>
}

@section Scripts {
    <script>
        // Initialize the map
        mapboxgl.accessToken = 'pk.eyJ1IjoiY2hhYW5nZ2cwMTkzIiwiYSI6ImNtOHo5ODF6cDAxcTUyaXB0ODBtYXlhN3oifQ.SJ-eGgWUplbUFNE_UwK7JA';
        const map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [120.9842, 14.5995],
            zoom: 9
        });

        // Add navigation controls
        map.addControl(new mapboxgl.NavigationControl(), 'top-right');

        // Initialize marker
        let marker = new mapboxgl.Marker({
            draggable: true
        })
        .setLngLat([120.9842, 14.5995])
          .addTo(map);

        // Update coordinates when marker is dragged
        marker.on('dragend', function() {
            const lngLat = marker.getLngLat();
            document.getElementById('latitude').value = lngLat.lat;
            document.getElementById('longitude').value = lngLat.lng;
            
            // Reverse geocode to get address
            fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${lngLat.lng},${lngLat.lat}.json?access_token=${mapboxgl.accessToken}`)
                .then(response => response.json())
                .then(data => {
                    if (data.features && data.features.length > 0) {
                        const place = data.features[0];
                        document.getElementById('location').value = place.place_name;
                        
                        // Extract address components
                        const context = place.context || [];
                        let barangayFound = false;
                        let purokFound = false;
                        
                        // Try to find detailed address components
                        if (place.text) {
                            document.getElementById('purok').value = place.text;
                            purokFound = true;
                        }
                        
                        context.forEach(item => {
                            if (item.id.startsWith('neighborhood') || item.id.startsWith('locality')) {
                                document.getElementById('barangay').value = item.text;
                                barangayFound = true;
                            } else if (item.id.startsWith('place')) {
                                document.getElementById('city').value = item.text;
                            }
                        });
                        
                        // If barangay not found, try to extract it from the address
                        if (!barangayFound) {
                            // Look for address parts with "Barangay" or typical Filipino naming patterns
                            const addressParts = place.place_name.split(',');
                            for (let i = 0; i < addressParts.length; i++) {
                                const part = addressParts[i].trim();
                                if (part.includes('Barangay') || part.includes('Brgy.')) {
                                    document.getElementById('barangay').value = part;
                                    barangayFound = true;
                                    break;
                                }
                            }
                            
                            // If still not found, use a placeholder based on location
                            if (!barangayFound) {
                                const roundedLat = Math.round(lngLat.lat * 1000) / 1000;
                                const roundedLng = Math.round(lngLat.lng * 1000) / 1000;
                                document.getElementById('barangay').value = `Area near ${roundedLat}, ${roundedLng}`;
                            }
                        }
                        
                        // If purok not found, create a default value
                        if (!purokFound) {
                            const city = document.getElementById('city').value;
                            document.getElementById('purok').value = `Street in ${city || 'local area'}`;
                        }
                    }
                })
                .catch(error => {
                    console.error('Error reverse geocoding:', error);
                    // Set default values if geocoding fails
                    const roundedLat = Math.round(lngLat.lat * 1000) / 1000;
                    const roundedLng = Math.round(lngLat.lng * 1000) / 1000;
                    document.getElementById('purok').value = `Location ${roundedLat}, ${roundedLng}`;
                    document.getElementById('barangay').value = `Area ${roundedLat}, ${roundedLng}`;
                });
        });

        // Detect current location
        document.getElementById('detect-location').addEventListener('click', function() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                    const lngLat = {
                        lng: position.coords.longitude,
                        lat: position.coords.latitude
                    };
                    
                    marker.setLngLat(lngLat);
                    map.flyTo({
                        center: lngLat,
                        zoom: 15
                    });
                    
                    // Trigger dragend event to update form
                    marker.fire('dragend');
                }, function(error) {
                    console.error("Error getting location:", error);
                    alert('Could not detect your location. Please enter details manually or pin on the map.');
                    
                    // Set default values if geolocation fails
                    document.getElementById('purok').value = "Please enter Purok/Street";
                    document.getElementById('barangay').value = "Please enter Barangay";
                    }, {
                        enableHighAccuracy: true,
                        timeout: 10000,
                        maximumAge: 0
                    });
            } else {
                alert('Geolocation is not supported by your browser');
                
                // Set default values if geolocation is not supported
                document.getElementById('purok').value = "Please enter Purok/Street";
                document.getElementById('barangay').value = "Please enter Barangay";
            }
        });

        // Clear photo input
        document.getElementById('clear-photo').addEventListener('click', function() {
            document.getElementById('photo').value = '';
        });

        // Auto-resize textarea
        const textareas = document.querySelectorAll('textarea');
        textareas.forEach(textarea => {
            textarea.addEventListener('input', function() {
                this.style.height = 'auto';
                this.style.height = (this.scrollHeight) + 'px';
            });
        });
    </script>
} 