<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - THYNK LGU Portal</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/community.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/lgu-styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/THYNK.styles.css" asp-append-version="true" />
    <!-- FontAwesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <!-- Mapbox CSS -->
    <link href='https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.css' rel='stylesheet' />
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#345995', /* Professional blue for LGU */
                        primaryDark: '#234276',
                        primaryLight: '#4978c3',
                        secondary: '#EAF2F8',
                        secondaryDark: '#d9e5ef',
                        secondaryLight: '#f7fafd',
                        accent: '#F5F5F5',
                        danger: '#b56357',
                        success: '#6a8d73',
                        warning: '#e0a458'
                    }
                }
            }
        }
    </script>
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <button id="menu-toggle" class="hamburger" aria-label="Toggle Menu">
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
    </button>
    
    <div class="overlay" id="overlay"></div>
    
        <!-- Sidebar -->
    <div class="sidebar sidebar-collapsed md:sidebar-expanded" id="sidebar">
        <div class="sidebar-content">
            <div class="sidebar-header flex flex-col items-center justify-center p-4 h-[140px]">
                <div class="logo-container mb-2">
                    <img src="~/images/logo.png" alt="THYNK Logo" class="w-16 h-16 object-contain" onerror="this.src='/images/logo-placeholder.png'; this.onerror=null;">
                </div>
                <h1 class="text-xl font-bold mb-0">THYNK</h1>
                <p class="text-xs opacity-75">LGU Management Portal</p>
            </div>
            
            <div class="sidebar-nav">
                <a href="@Url.Action("Dashboard", "LGU")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Dashboard" ? "active" : "")">
                    <span class="nav-icon"><i class="fas fa-tachometer-alt"></i></span>
                    <span class="nav-text">Dashboard</span>
                </a>
                <a href="@Url.Action("ManageReports", "LGU")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "ManageReports" ? "active" : "")">
                    <span class="nav-icon"><i class="fas fa-clipboard-list"></i></span>
                    <span class="nav-text">Manage Reports</span>
                </a>
                <a href="@Url.Action("ManageAlerts", "LGU")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "ManageAlerts" ? "active" : "")">
                    <span class="nav-icon"><i class="fas fa-bell"></i></span>
                    <span class="nav-text">Manage Alerts</span>
                </a>
                <a href="@Url.Action("IncidentMap", "LGU")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "IncidentMap" ? "active" : "")">
                    <span class="nav-icon"><i class="fas fa-map-marked-alt"></i></span>
                    <span class="nav-text">Incident Map</span>
                </a>
                <a href="@Url.Action("ManageResources", "LGU")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "ManageResources" || ViewContext.RouteData.Values["Action"].ToString() == "CreateResource" || ViewContext.RouteData.Values["Action"].ToString() == "EditResource" ? "active" : "")">
                    <span class="nav-icon"><i class="fas fa-file-alt"></i></span>
                    <span class="nav-text">Manage Resources</span>
                </a>
                <a href="@Url.Action("CommunityFeed", "LGU")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "CommunityFeed" ? "active" : "")">
                    <span class="nav-icon"><i class="fas fa-users"></i></span>
                    <span class="nav-text">Community Feed</span>
                </a>
                <a href="@Url.Action("Analytics", "LGU")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Analytics" ? "active" : "")">
                    <span class="nav-icon"><i class="fas fa-chart-line"></i></span>
                    <span class="nav-text">Analytics</span>
                </a>
                <a href="@Url.Action("ChatSupport", "LGU")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "ChatSupport" ? "active" : "")">
                    <span class="nav-icon"><i class="fas fa-comments"></i></span>
                    <span class="nav-text">Support Chats</span>
                </a>
                <a href="@Url.Action("Profile", "LGU")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Profile" ? "active" : "")">
                    <span class="nav-icon"><i class="fas fa-user-circle"></i></span>
                    <span class="nav-text">My Profile</span>
                </a>
            </div>
            
            <div class="sidebar-footer absolute bottom-0 left-0 right-0 p-4 border-t border-primary/20">
                <div class="user-info flex items-center">
                    <a href="@Url.Action("Profile", "LGU")" class="flex items-center">
                        <div class="avatar-circle w-10 h-10 rounded-full bg-primary flex items-center justify-center text-white">
                            @if (!string.IsNullOrEmpty(User.FindFirst("ProfilePhotoUrl")?.Value))
                            {
                                <img src="@User.FindFirst("ProfilePhotoUrl")?.Value" alt="Profile" class="w-full h-full object-cover rounded-full">
                            }
                            else
                            {
                                <i class="fas fa-user"></i>
                            }
                        </div>
                        <div class="ml-3 truncate">
                            <p class="text-sm font-medium mb-0 truncate">@User.Identity?.Name</p>
                            <span class="text-xs opacity-75">View Profile</span>
                        </div>
                    </a>
        </div>
                <div class="mt-2">
                    <form class="inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="w-full text-center text-xs opacity-75 hover:opacity-100 bg-transparent border border-primary/20 rounded p-1">
                            <i class="fas fa-sign-out-alt mr-1"></i>Logout
                    </button>
                                        </form>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Main Content -->
    <main class="ml-0 md:ml-64 transition-all duration-300 min-h-screen" id="main-content">
        <div class="p-4 sm:p-6">
            @RenderBody()
        </div>
    </main>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.js"></script>
    <script>
        // Toggle sidebar
        document.addEventListener('DOMContentLoaded', function() {
            const menuToggle = document.getElementById('menu-toggle');
            const sidebar = document.getElementById('sidebar');
            const overlay = document.getElementById('overlay');
            const mainContent = document.getElementById('main-content');
            
            function toggleSidebar() {
                menuToggle.classList.toggle('active');
                sidebar.classList.toggle('sidebar-collapsed');
                sidebar.classList.toggle('sidebar-expanded');
                overlay.classList.toggle('active');
                
                if (window.innerWidth < 768) {
                    if (sidebar.classList.contains('sidebar-expanded')) {
                        mainContent.style.marginLeft = '0';
                    } else {
                        mainContent.style.marginLeft = '0';
                    }
                } else {
                    if (sidebar.classList.contains('sidebar-expanded')) {
                        mainContent.style.marginLeft = '16rem';
                    } else {
                        mainContent.style.marginLeft = '0';
                    }
                }
            }
            
            menuToggle.addEventListener('click', toggleSidebar);
            overlay.addEventListener('click', toggleSidebar);
            
            // Initialize sidebar state based on screen size
            function initSidebar() {
                if (window.innerWidth >= 768) {
                    sidebar.classList.add('sidebar-expanded');
                    sidebar.classList.remove('sidebar-collapsed');
                    mainContent.style.marginLeft = '16rem';
                } else {
                    sidebar.classList.add('sidebar-collapsed');
                    sidebar.classList.remove('sidebar-expanded');
                    mainContent.style.marginLeft = '0';
                }
            }
            
            // Initialize on load
            initSidebar();
            
            // Update on resize
            window.addEventListener('resize', initSidebar);
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html> 