@using System.Security.Claims
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - THYNK Admin</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/THYNK.styles.css" asp-append-version="true" />
    <!-- FontAwesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css" />
    <!-- Mapbox CSS -->
    <link href='https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.css' rel='stylesheet' />
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <div class="d-flex" id="wrapper">
        <!-- Sidebar -->
        <div class="sidebar sidebar-collapsed md:sidebar-expanded" id="sidebar">
            <div class="sidebar-content">
                <!-- Fixed Header -->
                <div class="sidebar-header">
                    <div class="text-center">
                        <h3 class="brand-title">
                            <span class="brand-highlight">THYNK</span>
                            <span class="brand-dot">.</span>
                        </h3>
                        <p class="brand-subtitle">
                            <span class="subtitle-line">Admin</span>
                            <span class="subtitle-dot">â€¢</span>
                            <span class="subtitle-line">Portal</span>
                        </p>
                    </div>
                    <hr class="divider" />
                </div>
                
                <!-- Scrollable Navigation Area -->
                <div class="sidebar-nav">
                    <div class="space-y-1">
                        <!-- Dashboard -->
                        <a href="@Url.Action("Dashboard", "Admin")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Dashboard" ? "active" : "")">
                            <span class="nav-icon"><i class="fas fa-tachometer-alt"></i></span>
                            <span class="nav-text">Dashboard</span>
                        </a>

                        <!-- User Management -->
                        <a href="@Url.Action("PendingLGUApplications", "Admin")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "PendingLGUApplications" ? "active" : "")">
                            <span class="nav-icon"><i class="fas fa-user-shield"></i></span>
                            <span class="nav-text">LGU Applications</span>
                        </a>

                        <a href="@Url.Action("ManageUsers", "Admin")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "ManageUsers" ? "active" : "")">
                            <span class="nav-icon"><i class="fas fa-users"></i></span>
                            <span class="nav-text">Users</span>
                        </a>

                        <!-- Content Management -->
                        <a href="@Url.Action("IncidentReports", "Admin")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "IncidentReports" || ViewContext.RouteData.Values["Action"].ToString() == "ReportDetails" ? "active" : "")">
                            <span class="nav-icon"><i class="fas fa-exclamation-triangle"></i></span>
                            <span class="nav-text">Incidents</span>
                        </a>

                        <a href="@Url.Action("PendingPosts", "Admin")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "PendingPosts" || ViewContext.RouteData.Values["Action"].ToString() == "PostDetails" ? "active" : "")">
                            <span class="nav-icon"><i class="fas fa-clipboard-list"></i></span>
                            <span class="nav-text">Posts</span>
                        </a>

                        <!-- Alerts & Notifications -->
                        <a href="@Url.Action("ManageAlerts", "Admin")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "ManageAlerts" ? "active" : "")">
                            <span class="nav-icon"><i class="fas fa-bell"></i></span>
                            <span class="nav-text">Alerts</span>
                        </a>

                        <a href="@Url.Action("CreateAlert", "Admin")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "CreateAlert" ? "active" : "")">
                            <span class="nav-icon"><i class="fas fa-plus-circle"></i></span>
                            <span class="nav-text">New Alert</span>
                        </a>

                        <!-- System -->
                        <a href="@Url.Action("SystemLogs", "Admin")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "SystemLogs" ? "active" : "")">
                            <span class="nav-icon"><i class="fas fa-history"></i></span>
                            <span class="nav-text">Logs</span>
                        </a>

                        <!-- Educational Resources -->
                        <a href="@Url.Action("PendingResources", "Admin")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "PendingResources" || ViewContext.RouteData.Values["Action"].ToString() == "ReviewResource" ? "active" : "")">
                            <span class="nav-icon"><i class="fas fa-clipboard-check"></i></span>
                            <span class="nav-text">Resources</span>
                        </a>

                        <!-- Administration -->
                        <a href="@Url.Action("ManagePosts", "Admin")" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "ManagePosts" ? "active" : "")">
                            <span class="nav-icon"><i class="fas fa-comments"></i></span>
                            <span class="nav-text">Community</span>
                        </a>

                        <a href="@Url.Action("ActiveChats", "SupportAdmin")" class="nav-item @(ViewContext.RouteData.Values["Controller"].ToString() == "SupportAdmin" && ViewContext.RouteData.Values["Action"].ToString() == "ActiveChats" ? "active" : "")">
                            <span class="nav-icon"><i class="fas fa-headset"></i></span>
                            <span class="nav-text">Support</span>
                        </a>

                        <a href="@Url.Action("ManageFAQs", "SupportAdmin")" class="nav-item @(ViewContext.RouteData.Values["Controller"].ToString() == "SupportAdmin" && (ViewContext.RouteData.Values["Action"].ToString() == "ManageFAQs" || ViewContext.RouteData.Values["Action"].ToString() == "CreateFAQ" || ViewContext.RouteData.Values["Action"].ToString() == "EditFAQ") ? "active" : "")">
                            <span class="nav-icon"><i class="fas fa-question-circle"></i></span>
                            <span class="nav-text">FAQs</span>
                        </a>
                    </div>
                </div>
                
                <!-- Admin Identity Section -->
                <div class="sidebar-footer">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div class="admin-profile">
                            <a href="/Identity/Account/Manage" class="admin-link">
                                <div class="admin-avatar">
                                    @if (!string.IsNullOrEmpty(User.FindFirst("ProfilePhotoUrl")?.Value))
                                    {
                                        <img src="@User.FindFirst("ProfilePhotoUrl")?.Value" alt="Profile" class="admin-avatar-img">
                                    }
                                    else
                                    {
                                        @(User.Identity.Name != null && User.Identity.Name.Length > 0 ? User.Identity.Name.Substring(0, 1).ToUpper() : "A")
                                    }
                                </div>
                                <div class="admin-info">
                                    <p class="admin-name">@User.Identity.Name</p>
                                    <p class="admin-role">Administrator</p>
                                </div>
                            </a>
                        </div>
                        <div class="admin-actions">
                            <a href="/Identity/Account/Manage" class="admin-action">
                                <i class="fas fa-user-cog"></i>
                                <span>Account</span>
                            </a>
                            <button type="button" data-bs-toggle="modal" data-bs-target="#logoutModal" class="admin-action">
                                <i class="fas fa-sign-out-alt"></i>
                                <span>Logout</span>
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
        <!-- Page Content -->
        <div id="page-content-wrapper">
            <nav class="navbar">
                <div class="d-flex align-items-center">
                    <button class="menu-toggle d-md-none" id="menu-toggle">
                        <i class="fas fa-bars"></i>
                    </button>
                    <div class="page-title-wrapper">
                        <h2 class="page-title">
                            <span class="title-text">@ViewData["Title"]</span>
                            <span class="title-line"></span>
                        </h2>
                    </div>
                </div>
            </nav>

            <div class="container-fluid px-4">
                <!-- Add notification messages -->
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
                        <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                
                @if (TempData["WarningMessage"] != null)
                {
                    <div class="alert alert-warning alert-dismissible fade show mt-3" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i> @TempData["WarningMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
                        <i class="fas fa-times-circle me-2"></i> @TempData["ErrorMessage"]
                        @if (TempData["InnerErrorMessage"] != null)
                        {
                            <div class="mt-2 small">@TempData["InnerErrorMessage"]</div>
                        }
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                
                <div class="row my-4">
                    <div class="col">
                        @RenderBody()
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js"></script>
    <!-- Mapbox JS -->
    <script src='https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.js'></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script>
        // Update the sidebar toggle script
        document.addEventListener('DOMContentLoaded', function() {
            const menuToggle = document.getElementById('menu-toggle');
            const sidebar = document.getElementById('sidebar');
            const overlay = document.createElement('div');
            overlay.className = 'sidebar-overlay';
            document.body.appendChild(overlay);
            
            function toggleSidebar() {
                sidebar.classList.toggle('expanded');
                overlay.classList.toggle('active');
                document.body.style.overflow = sidebar.classList.contains('expanded') ? 'hidden' : '';
            }
            
            menuToggle.addEventListener('click', toggleSidebar);
            overlay.addEventListener('click', toggleSidebar);
            
            // Handle window resize
            function handleResize() {
                if (window.innerWidth > 768) {
                    sidebar.classList.remove('expanded');
                    overlay.classList.remove('active');
                    document.body.style.overflow = '';
                }
            }
            
            window.addEventListener('resize', handleResize);
            handleResize(); // Initial check
        });

        // Check for pending reports on page load
        $(document).ready(function() {
            checkPendingReports();
        });

        function checkPendingReports() {
            $.get('/Admin/GetPendingReportsCount', function(data) {
                if (data.count > 0) {
                    // Play alarm if there are pending reports
                    var alarm = document.getElementById('alarmSound');
                    if (alarm) {
                        alarm.currentTime = 0;
                        alarm.play().catch(function(error) {
                            console.log("Error playing alarm:", error);
                        });
                    }
                }
            });
        }

        // Sound handling functions
        function playNotificationSound() {
            if (sessionStorage.getItem('soundEnabled') === 'true') {
                const alarm = document.getElementById('alarmSound');
                if (alarm) {
                    alarm.currentTime = 0;
                    alarm.play().catch(error => console.log("Error playing alarm:", error));
                }
            }
        }

        function showToastNotification(title, message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = `toast-notification ${type}`;
            toast.innerHTML = `
                <div class="toast-header">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'warning' ? 'exclamation-circle' : 'info-circle'}"></i>
                    <strong class="ms-2">${title}</strong>
                </div>
                <div class="toast-body">
                    ${message}
                </div>
            `;
            document.body.appendChild(toast);

            setTimeout(() => {
                toast.classList.add('hide');
                setTimeout(() => toast.remove(), 300);
            }, 5000);
        }

        // Initialize SignalR connection
        @if (User.IsInRole("Admin"))
        {
            <text>
            const adminConnection = new signalR.HubConnectionBuilder()
                .withUrl("/adminHub")
                .withAutomaticReconnect([0, 2000, 5000, 10000, 20000])
                .configureLogging(signalR.LogLevel.Information)
                .build();

            // Set up event handlers before starting the connection
            adminConnection.on("NewIncidentReport", (report) => {
                console.log('New incident report received:', report);
                playNotificationSound();
                showToastNotification(
                    'New Incident Report',
                    `New incident reported: ${report.title}`,
                    'warning'
                );
            });

            adminConnection.on("ReceiveDashboardStats", (pendingLGUCount, pendingReportsCount, pendingPostsCount) => {
                console.log('Dashboard stats updated:', { pendingLGUCount, pendingReportsCount, pendingPostsCount });
                if (pendingReportsCount > 0) {
                    playNotificationSound();
                    showToastNotification(
                        'Pending Reports',
                        `You have ${pendingReportsCount} pending incident report(s) to review.`,
                        'warning'
                    );
                }
            });

            adminConnection.on("ReportUpdated", (reportId, newStatus) => {
                console.log('Report updated:', { reportId, newStatus });
                if (newStatus === 'Pending') {
                    playNotificationSound();
                    showToastNotification(
                        'New Incident Report',
                        'A new incident report requires your attention.',
                        'warning'
                    );
                }
            });

            // Start the connection
            adminConnection.start()
                .then(() => {
                    console.log("Admin SignalR Connected");
                    const userId = '@User.FindFirstValue(ClaimTypes.NameIdentifier)';
                    if (userId) {
                        return adminConnection.invoke("JoinUserGroup", userId);
                    }
                })
                .then(() => {
                    console.log('Successfully joined admin user group');
                })
                .catch(err => console.error("Admin SignalR Connection Error: ", err));

            // Handle reconnection
            adminConnection.onreconnecting((error) => {
                console.log("Reconnecting to SignalR...", error);
            });

            adminConnection.onreconnected((connectionId) => {
                console.log("Reconnected to SignalR with connection ID:", connectionId);
                const userId = '@User.FindFirstValue(ClaimTypes.NameIdentifier)';
                if (userId) {
                    adminConnection.invoke("JoinUserGroup", userId)
                        .catch(err => console.error('Error rejoining admin user group:', err));
                }
            });
            </text>
        }

        // Sound enable modal handling
        window.addEventListener('DOMContentLoaded', function() {
            if (sessionStorage.getItem('soundEnabled') !== 'true') {
                const soundModal = new bootstrap.Modal(document.getElementById('soundEnableModal'));
                soundModal.show();
                
                document.getElementById('modalEnableSound').addEventListener('click', function() {
                    const alarm = document.getElementById('alarmSound');
                    if (alarm) {
                        alarm.play().then(() => {
                            alarm.pause();
                            alarm.currentTime = 0;
                            sessionStorage.setItem('soundEnabled', 'true');
                            soundModal.hide();
                            document.getElementById('enableSound').style.display = 'none';
                            showToastNotification('Sound Enabled', 'You will now receive sound alerts for new reports.', 'success');
                        }).catch(error => {
                            console.error('Error playing test sound:', error);
                            showToastNotification('Sound Error', 'Could not enable sound. Please check your browser settings.', 'error');
                        });
                    }
                });
            } else {
                document.getElementById('enableSound').style.display = 'none';
            }

            // Clear sound preferences on logout
            document.querySelectorAll('form[action*="/Account/Logout"]').forEach(function(form) {
                form.addEventListener('submit', function() {
                    sessionStorage.removeItem('soundEnabled');
                });
            });
        });

        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            const tooltipElements = document.querySelectorAll('[data-tooltip]');
            
            tooltipElements.forEach(element => {
                element.addEventListener('mouseenter', function(e) {
                    const tooltip = this.getAttribute('data-tooltip');
                    const rect = this.getBoundingClientRect();
                    
                    const tooltipEl = document.createElement('div');
                    tooltipEl.className = 'tooltip';
                    tooltipEl.textContent = tooltip;
                    tooltipEl.style.position = 'fixed';
                    tooltipEl.style.left = rect.right + 10 + 'px';
                    tooltipEl.style.top = rect.top + (rect.height / 2) + 'px';
                    tooltipEl.style.transform = 'translateY(-50%)';
                    tooltipEl.style.background = 'rgba(0, 0, 0, 0.8)';
                    tooltipEl.style.color = 'white';
                    tooltipEl.style.padding = '0.5rem 0.75rem';
                    tooltipEl.style.borderRadius = '4px';
                    tooltipEl.style.fontSize = '0.75rem';
                    tooltipEl.style.zIndex = '1000';
                    tooltipEl.style.pointerEvents = 'none';
                    
                    document.body.appendChild(tooltipEl);
                    
                    this.addEventListener('mouseleave', function() {
                        tooltipEl.remove();
                    }, { once: true });
                });
            });
        });
    </script>
    <button id="enableSound" class="btn btn-sm btn-primary" style="position: fixed; top: 20px; right: 20px; z-index: 9999; display: block;">Enable Sound</button>
    <audio id="alarmSound" src="~/sounds/alarm.mp3" preload="auto"></audio>
    <!-- Sound Enable Modal -->
    <div class="modal fade" id="soundEnableModal" tabindex="-1" aria-labelledby="soundEnableModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="soundEnableModalLabel">Enable Notification Sound</h5>
                </div>
                <div class="modal-body">
                    <p>To receive real-time sound alerts for new incident reports, please enable sound notifications.</p>
                    <button id="modalEnableSound" class="btn btn-primary w-100">Enable Sound</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Notification Sound Element -->
    <audio id="notificationSound" preload="auto">
        <source src="~/sounds/alarm.mp3" type="audio/mpeg">
    </audio>

    <!-- Sound Toggle Button -->
    <button id="toggleSound" class="btn btn-sm btn-primary position-fixed" style="top: 20px; right: 20px; z-index: 9999; display: none;">
        <i class="fas fa-volume-up"></i>
    </button>

    @await RenderSectionAsync("Scripts", required: false)

    <style>
        /* CSS Variables */
        :root {
            --primary: #545454;
            --primary-dark: #3c3c3c;
            --primary-light: #6e6e6e;
            --primary-rgb: 84, 84, 84;
            
            --secondary: #E5DFD2;
            --secondary-dark: #d6cfbf;
            --secondary-light: #f4f0e5;
            --secondary-rgb: 229, 223, 210;
            
            --accent: #F5F5F5;
            --accent-rgb: 245, 245, 245;
            
            --sidebar-bg: #2C3E50;
            --sidebar-light: #34495E;
            --sidebar-accent: #3498DB;
            --sidebar-text: #ECF0F1;
            --sidebar-hover: #1ABC9C;
            --sidebar-hover-light: #2CD3AF;
            
            --success: #6a8d73;
            --warning: #e0a458;
            --danger: #b56357;
            --danger-rgb: 181, 99, 87;
            
            --dark: #545454;
            --dark-alt: #696969;
            --dark-light: #7e7e7e;
            --light: #F5F5F5;
            --muted: #a0a0a0;
            
            --body-bg: #E5DFD2;
            --body-color: #545454;
        }
        
        body {
            @@apply text-primary font-sans;
        }
        
        /* Base Layout */
        #wrapper {
            display: flex;
            width: 100%;
            min-height: 100vh;
            position: relative;
        }
        
        /* Sidebar Styles */
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: 240px;
            background: linear-gradient(180deg, var(--sidebar-bg) 0%, var(--sidebar-light) 100%);
            color: white;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
            z-index: 1000;
            transition: transform 0.3s ease;
            display: flex;
            flex-direction: column;
        }
        
        .sidebar.collapsed {
            transform: translateX(-240px);
        }
        
        .sidebar-content {
            display: flex;
            flex-direction: column;
            height: 100%;
            position: relative;
        }
        
        /* Header Section */
        .sidebar-header {
            padding: 1.25rem 0.75rem;
            text-align: center;
            background: linear-gradient(180deg, rgba(0,0,0,0.1) 0%, transparent 100%);
        }
        
        .brand-title {
            font-size: 1.4rem;
            font-weight: 700;
            color: white;
            margin: 0;
            letter-spacing: 1px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 2px;
        }
        
        .brand-highlight {
            background: linear-gradient(45deg, #fff, rgba(255,255,255,0.8));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .brand-dot {
            color: var(--sidebar-hover);
            font-size: 1.6rem;
            line-height: 1;
            margin-top: -4px;
        }
        
        .brand-subtitle {
            font-size: 0.75rem;
            color: rgba(255, 255, 255, 0.7);
            margin: 0.35rem 0 0;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 4px;
            letter-spacing: 0.5px;
        }
        
        .subtitle-line {
            text-transform: uppercase;
            font-weight: 500;
        }
        
        .subtitle-dot {
            color: var(--sidebar-hover);
            font-size: 0.6rem;
            margin-top: -2px;
        }
        
        .divider {
            margin: 1rem 0;
            border: none;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            position: relative;
        }
        
        .divider::after {
            content: '';
            position: absolute;
            top: -1px;
            left: 50%;
            transform: translateX(-50%);
            width: 30px;
            height: 1px;
            background: var(--sidebar-hover);
        }
        
        /* Navigation Area */
        .sidebar-nav {
            flex: 1;
            overflow-y: auto;
            padding: 1rem 0.5rem;
            position: relative;
            scrollbar-width: thin;
            scrollbar-color: rgba(255, 255, 255, 0.2) transparent;
        }
        
        .sidebar-nav::-webkit-scrollbar {
            width: 4px;
        }
        
        .sidebar-nav::-webkit-scrollbar-track {
            background: transparent;
        }
        
        .sidebar-nav::-webkit-scrollbar-thumb {
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 20px;
        }
        
        .sidebar-nav:hover::-webkit-scrollbar-thumb {
            background-color: rgba(255, 255, 255, 0.3);
        }
        
        /* Navigation Items */
        .nav-item {
            display: flex;
            align-items: center;
            padding: 0.5rem 0.75rem;
            color: var(--sidebar-text);
            border-radius: 8px;
            margin-bottom: 1px;
            transition: all 0.3s ease;
            text-decoration: none;
            white-space: nowrap;
        }
        
        .nav-item:hover {
            background-color: var(--sidebar-hover-light);
            transform: translateX(3px);
            color: white !important;
        }
        
        .nav-item.active {
            background-color: var(--sidebar-hover);
            position: relative;
        }
        
        .nav-item.active::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 3px;
            background: white;
            border-radius: 0 2px 2px 0;
        }
        
        .nav-icon {
            width: 18px;
            text-align: center;
            margin-right: 10px;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            flex-shrink: 0;
        }
        
        .nav-text {
            font-size: 0.8rem;
            font-weight: 500;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        /* Footer Section */
        .sidebar-footer {
            padding: 1rem;
            background: rgba(0, 0, 0, 0.15);
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .admin-profile {
            margin-bottom: 0.75rem;
        }
        
        .admin-link {
            display: flex;
            align-items: center;
            text-decoration: none;
            padding: 0.5rem;
            border-radius: 8px;
            transition: all 0.2s ease;
        }
        
        .admin-link:hover {
            background: rgba(255, 255, 255, 0.1);
        }
        
        .admin-avatar {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background-color: var(--sidebar-hover);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 500;
            font-size: 0.9rem;
            flex-shrink: 0;
            overflow: hidden;
        }
        
        .admin-avatar-img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .admin-info {
            margin-left: 0.75rem;
            min-width: 0;
        }
        
        .admin-name {
            font-weight: 500;
            font-size: 0.85rem;
            color: white;
            margin: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        .admin-role {
            font-size: 0.7rem;
            color: rgba(255, 255, 255, 0.7);
            margin: 0;
        }
        
        .admin-actions {
            display: flex;
            gap: 0.5rem;
            margin-top: 0.5rem;
        }
        
        .admin-action {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            padding: 0.5rem;
            color: rgba(255, 255, 255, 0.8);
            background: rgba(255, 255, 255, 0.1);
            border: none;
            border-radius: 6px;
            font-size: 0.8rem;
            cursor: pointer;
            transition: all 0.2s ease;
            text-decoration: none;
        }
        
        .admin-action:hover {
            background: rgba(255, 255, 255, 0.15);
            color: white;
        }
        
        .admin-action i {
            font-size: 0.9rem;
        }
        
        /* Page Content */
        #page-content-wrapper {
            flex: 1;
            margin-left: 240px;
            transition: margin-left 0.3s ease;
            min-height: 100vh;
            width: calc(100% - 240px);
        }
        
        #page-content-wrapper.expanded {
            margin-left: 0;
            width: 100%;
        }
        
        /* Navbar */
        .navbar {
            background: white;
            box-shadow: 0 1px 2px rgba(0,0,0,0.03);
            padding: 0.5rem 0.75rem;
            height: 50px;
            display: flex;
            align-items: center;
        }
        
        /* Menu Toggle Button */
        .menu-toggle {
            display: none;
            background: var(--sidebar-bg);
            border: none;
            color: white;
            font-size: 1.1rem;
            width: 38px;
            height: 38px;
            padding: 0;
            margin-right: 0.75rem;
            cursor: pointer;
            transition: all 0.2s ease;
            z-index: 1001;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .menu-toggle:hover {
            background: var(--sidebar-light);
            transform: translateY(-1px);
            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
        }
        
        .menu-toggle:active {
            transform: translateY(0);
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
        }
        
        .page-title-wrapper {
            position: relative;
            padding-left: 0.5rem;
        }

        .page-title {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--primary);
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .title-text {
            position: relative;
            padding-right: 0.5rem;
        }

        .title-text::after {
            content: '';
            position: absolute;
            right: 0;
            top: 50%;
            transform: translateY(-50%);
            width: 3px;
            height: 3px;
            background: var(--sidebar-hover);
            border-radius: 50%;
        }

        .title-line {
            flex: 1;
            height: 1px;
            background: linear-gradient(90deg, var(--sidebar-hover) 0%, rgba(26, 188, 156, 0.1) 100%);
            max-width: 100px;
        }
        
        /* Responsive Styles */
        @@media (max-width: 768px) {
            .menu-toggle {
                display: flex;
            }

            .navbar {
                padding: 0.5rem 0.75rem;
            }

            .sidebar {
                transform: translateX(-240px);
            }
            
            .sidebar.expanded {
                transform: translateX(0);
            }
            
            #page-content-wrapper {
                margin-left: 0;
                width: 100%;
            }

            .page-title {
                font-size: 1rem;
            }

            .title-line {
                max-width: 60px;
            }
        }
        
        @@media (min-width: 769px) {
            .sidebar {
                transform: translateX(0);
            }
            
            #page-content-wrapper {
                margin-left: 240px;
                width: calc(100% - 240px);
            }
        }
        
        /* Overlay for mobile */
        .sidebar-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            z-index: 999;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .sidebar-overlay.active {
            display: block;
            opacity: 1;
        }

        /* Update container padding */
        .container-fluid {
            padding-top: 0.75rem;
        }
    </style>

    <!-- Logout Modal -->
    <div class="modal fade logout-modal" id="logoutModal" tabindex="-1" aria-labelledby="logoutModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="logoutModalLabel">
                        <i class="fas fa-sign-out-alt me-2 text-danger"></i>
                        Confirm Logout
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="mb-0">Are you sure you want to logout from your admin account?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>
                        Cancel
                    </button>
                    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post">
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-sign-out-alt me-2"></i>
                            Logout
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</body>
</html> 