@model IEnumerable<THYNK.Models.ChatSession>
@{
    ViewData["Title"] = "Active Support Chats";
    Layout = "_AdminLayout";
}

<div class="container-fluid px-4 py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center mb-4">
                        <div class="chat-icon bg-success bg-opacity-10 text-success rounded-circle p-3 me-3">
                            <i class="fas fa-headset fa-lg"></i>
                        </div>
                        <div>
                            <h5 class="mb-1">Active Support Chats</h5>
                            <p class="text-muted mb-0">Manage and respond to ongoing support conversations</p>
                        </div>
                    </div>
                    
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    
                    @if (Model == null || !Model.Any())
                    {
                        <div class="alert alert-info border rounded-3">
                            <div class="d-flex align-items-center">
                                <div class="me-3">
                                    <i class="fas fa-info-circle fa-2x text-info"></i>
                                </div>
                                <div>
                                    <h6 class="mb-1">No Active Chats</h6>
                                    <p class="mb-0">There are currently no active support chat sessions. When users request support, their chats will appear here.</p>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover align-middle">
                                <thead class="table-light">
                                    <tr>
                                        <th style="width: 5%">#</th>
                                        <th style="width: 20%">User</th>
                                        <th style="width: 15%">Category</th>
                                        <th style="width: 15%">Started</th>
                                        <th style="width: 15%">Assigned To</th>
                                        <th style="width: 10%">Status</th>
                                        <th style="width: 20%" class="text-end">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var chat in Model)
                                    {
                                        <tr>
                                            <td>@chat.Id</td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="avatar-circle me-2">
                                                        <i class="fas fa-user"></i>
                                                    </div>
                                                    <div>
                                                        <h6 class="mb-0">@($"{chat.User?.FirstName} {chat.User?.LastName}")</h6>
                                                        <small class="text-muted">@chat.User?.Email</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge rounded-pill bg-info">
                                                    @(string.IsNullOrEmpty(chat.Category) ? "General" : chat.Category)
                                                </span>
                                            </td>
                                            <td>@chat.StartTime.ToString("MMM dd, HH:mm")</td>
                                            <td>
                                                @if (chat.AssignedTo != null)
                                                {
                                                    <span class="text-success">
                                                        <i class="fas fa-user-check me-1"></i>
                                                        @($"{chat.AssignedTo.FirstName} {chat.AssignedTo.LastName}")
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge rounded-pill bg-warning text-dark">Unassigned</span>
                                                }
                                            </td>
                                            <td>
                                                @if (chat.Status == ChatStatus.Active)
                                                {
                                                    <span class="badge rounded-pill bg-success">Active</span>
                                                }
                                                else if (chat.Status == ChatStatus.Pending)
                                                {
                                                    <span class="badge rounded-pill bg-warning text-dark">Pending</span>
                                                }
                                            </td>
                                            <td class="text-end">
                                                <a asp-controller="Support" asp-action="ViewSession" asp-route-id="@chat.Id" 
                                                   class="btn btn-sm btn-primary rounded-pill">
                                                    <i class="fas fa-comments me-1"></i>Respond
                                                </a>
                                                <button type="button" class="btn btn-sm btn-outline-success assign-chat" 
                                                        data-bs-toggle="modal" data-bs-target="#assignModal"
                                                        data-id="@chat.Id" data-title="@chat.Title">
                                                    <i class="fas fa-user-plus"></i>
                                                </button>
                                                <button type="button" class="btn btn-sm btn-outline-danger close-chat" 
                                                        data-bs-toggle="modal" data-bs-target="#closeModal"
                                                        data-id="@chat.Id" data-title="@chat.Title">
                                                    <i class="fas fa-times-circle"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center mb-3">
                        <div class="stats-icon bg-info bg-opacity-10 text-info rounded-circle p-2 me-3">
                            <i class="fas fa-chart-bar"></i>
                        </div>
                        <div>
                            <h6 class="mb-0">Support Statistics</h6>
                        </div>
                    </div>
                    
                    <div class="row g-4">
                        <div class="col-md-3">
                            <div class="stat-card bg-primary bg-opacity-10 rounded-3 p-3">
                                <h2 class="mb-1 text-primary">@Model.Count()</h2>
                                <p class="mb-0 text-muted">Active Chats</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="stat-card bg-success bg-opacity-10 rounded-3 p-3">
                                <h2 class="mb-1 text-success">@Model.Count(c => c.AssignedTo != null)</h2>
                                <p class="mb-0 text-muted">Assigned Chats</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="stat-card bg-warning bg-opacity-10 rounded-3 p-3">
                                <h2 class="mb-1 text-warning">@Model.Count(c => c.AssignedTo == null)</h2>
                                <p class="mb-0 text-muted">Unassigned Chats</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="stat-card bg-info bg-opacity-10 rounded-3 p-3">
                                <h2 class="mb-1 text-info">@Model.Average(c => (DateTime.Now - c.StartTime).TotalMinutes).ToString("0")</h2>
                                <p class="mb-0 text-muted">Avg. Wait Time (min)</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Assign Chat Modal -->
<div class="modal fade" id="assignModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header border-0">
                <h5 class="modal-title">Assign Chat Session</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Select a staff member to assign this chat to:</p>
                <form asp-action="AssignChat" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="assignChatId" name="sessionId" value="" />
                    
                    <div class="mb-3">
                        <select name="assignedToId" class="form-select" required>
                            <option value="">Select Staff Member</option>
                            @foreach (var user in ViewBag.StaffUsers ?? new List<ApplicationUser>())
                            {
                                <option value="@user.Id">@user.FirstName @user.LastName (@user.Email)</option>
                            }
                        </select>
                    </div>
                    
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-light me-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-user-check me-1"></i>Assign
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Close Chat Modal -->
<div class="modal fade" id="closeModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header border-0">
                <h5 class="modal-title">Close Chat Session</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to close this chat session? This action cannot be undone.</p>
                <p class="mb-0 fw-bold" id="closeChatTitle"></p>
                
                <form asp-action="CloseChat" method="post" class="mt-3">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="closeChatId" name="sessionId" value="" />
                    
                    <div class="mb-3">
                        <label class="form-label">Closure Message (Optional)</label>
                        <textarea name="closureMessage" class="form-control" rows="3" 
                                  placeholder="Add a message to inform the user why this chat is being closed..."></textarea>
                    </div>
                    
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-light me-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-times-circle me-1"></i>Close Chat
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .chat-icon, .stats-icon {
            width: 48px;
            height: 48px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .avatar-circle {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background-color: #e9ecef;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6c757d;
        }
        
        .stat-card {
            transition: all 0.3s ease;
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Assign chat modal
            const assignButtons = document.querySelectorAll('.assign-chat');
            const assignChatIdInput = document.getElementById('assignChatId');
            
            assignButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const chatId = this.getAttribute('data-id');
                    assignChatIdInput.value = chatId;
                });
            });
            
            // Close chat modal
            const closeButtons = document.querySelectorAll('.close-chat');
            const closeChatIdInput = document.getElementById('closeChatId');
            const closeChatTitle = document.getElementById('closeChatTitle');
            
            closeButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const chatId = this.getAttribute('data-id');
                    const chatTitle = this.getAttribute('data-title');
                    
                    closeChatIdInput.value = chatId;
                    closeChatTitle.textContent = chatTitle || 'Chat Session #' + chatId;
                });
            });
        });
    </script>
} 