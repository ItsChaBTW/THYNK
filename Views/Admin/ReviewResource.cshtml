@model THYNK.Models.EducationalResource
@{
    ViewData["Title"] = "Review Resource";
    Layout = "_AdminLayout";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Review Resource</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/Admin/Dashboard">Dashboard</a></li>
        <li class="breadcrumb-item"><a href="/Admin/PendingResources">Pending Resources</a></li>
        <li class="breadcrumb-item active">Review Resource</li>
    </ol>
    
    <div class="row">
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <i class="fas fa-book me-1"></i>
                            Resource Content
                        </div>
                        <div>
                            <span class="badge bg-warning text-dark">Pending Approval</span>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <h2 class="card-title mb-3">@Model.Title</h2>
                    
                    <div class="mb-4">
                        <div class="d-flex align-items-center mb-3">
                            <span class="badge @(Model.Type switch { 
                                ResourceType.Guide => "bg-primary",
                                ResourceType.Tutorial => "bg-success",
                                ResourceType.Infographic => "bg-info",
                                ResourceType.Video => "bg-danger",
                                ResourceType.Document => "bg-warning",
                                ResourceType.FAQ => "bg-secondary",
                                ResourceType.EmergencyContact => "bg-dark",
                                _ => "bg-secondary"
                            }) me-2">@Model.Type</span>
                            <span class="text-muted">Submitted on @Model.DateAdded.ToString("MMMM dd, yyyy")</span>
                        </div>
                        
                        <h5>Description</h5>
                        <p>@Model.Description</p>
                    </div>
                    
                    <div class="mb-4">
                        <h5>Content</h5>
                        <div class="border p-3 rounded content-preview">
                            @Html.Raw(Model.Content)
                        </div>
                    </div>
                    
                    @if (!string.IsNullOrEmpty(Model.FileUrl) && Model.FileUrl != string.Empty)
                    {
                        <div class="mb-4">
                            <h5>Attachment</h5>
                            <div class="d-flex align-items-center">
                                @{
                                    string fileExt = System.IO.Path.GetExtension(Model.FileUrl).ToLower();
                                    string iconClass = "fas fa-file";
                                    
                                    switch (fileExt)
                                    {
                                        case ".pdf":
                                            iconClass = "fas fa-file-pdf text-danger";
                                            break;
                                        case ".doc":
                                        case ".docx":
                                            iconClass = "fas fa-file-word text-primary";
                                            break;
                                        case ".ppt":
                                        case ".pptx":
                                            iconClass = "fas fa-file-powerpoint text-warning";
                                            break;
                                        case ".xls":
                                        case ".xlsx":
                                            iconClass = "fas fa-file-excel text-success";
                                            break;
                                        case ".txt":
                                            iconClass = "fas fa-file-alt";
                                            break;
                                        case ".jpg":
                                        case ".jpeg":
                                        case ".png":
                                            iconClass = "fas fa-file-image text-info";
                                            break;
                                    }
                                }
                                
                                <i class="@iconClass fa-2x me-3"></i>
                                <div>
                                    <p class="mb-1">
                                        <a href="@Model.FileUrl" target="_blank" class="text-decoration-none">
                                            @System.IO.Path.GetFileName(Model.FileUrl)
                                        </a>
                                    </p>
                                    <p class="text-muted mb-0">@(Model.FileSizeKB > 0 ? $"{Model.FileSizeKB} KB" : "Unknown size")</p>
                                </div>
                            </div>
                        </div>
                    }
                    
                    @if (!string.IsNullOrEmpty(Model.ExternalUrl) && Model.ExternalUrl != string.Empty)
                    {
                        <div class="mb-4">
                            <h5>External URL</h5>
                            <a href="@Model.ExternalUrl" target="_blank" class="text-decoration-none">
                                @Model.ExternalUrl
                            </a>
                        </div>
                    }
                    
                    <div class="mb-4">
                        <h5>Tags</h5>
                        @if (!string.IsNullOrEmpty(Model.Tags))
                        {
                            <div>
                                @foreach (var tag in Model.Tags.Split(','))
                                {
                                    <span class="badge bg-secondary me-1 mb-1">@tag.Trim()</span>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted">No tags provided</p>
                        }
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-user me-1"></i>
                    Submitted By
                </div>
                <div class="card-body">
                    @if (Model.CreatedBy != null)
                    {
                        <div class="d-flex align-items-center mb-3">
                            @if (!string.IsNullOrEmpty(Model.CreatedBy.ProfilePhotoUrl))
                            {
                                <img src="@Model.CreatedBy.ProfilePhotoUrl" alt="Profile Photo" class="rounded-circle me-3" style="width: 50px; height: 50px; object-fit: cover;">
                            }
                            else
                            {
                                <div class="rounded-circle bg-secondary text-white d-flex align-items-center justify-content-center me-3" style="width: 50px; height: 50px;">
                                    <i class="fas fa-user"></i>
                                </div>
                            }
                            <div>
                                <h5 class="mb-0">@Model.CreatedBy.FirstName @Model.CreatedBy.LastName</h5>
                                <p class="text-muted mb-0">@Model.CreatedBy.OrganizationName</p>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <p><strong>Email:</strong> @Model.CreatedBy.Email</p>
                            <p><strong>Position:</strong> @Model.CreatedBy.Position</p>
                            <p><strong>Department:</strong> @Model.CreatedBy.Department</p>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">Creator information not available</p>
                    }
                </div>
            </div>
            
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-clipboard-check me-1"></i>
                    Review Actions
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2 mb-3">
                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#approveModal">
                            <i class="fas fa-check me-2"></i> Approve Resource
                        </button>
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#rejectModal">
                            <i class="fas fa-times me-2"></i> Reject Resource
                        </button>
                    </div>
                    <a href="@Url.Action("PendingResources", "Admin")" class="btn btn-outline-secondary w-100">
                        <i class="fas fa-arrow-left me-2"></i> Back to Pending Resources
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Approve Modal -->
<div class="modal fade" id="approveModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Approve Resource</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to approve <strong>@Model.Title</strong>?</p>
                <p class="mb-0">This resource will be published and visible to all users.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form asp-action="ApproveResource" asp-route-id="@Model.Id" method="post">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-check me-1"></i> Approve
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Reject Modal -->
<div class="modal fade" id="rejectModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Reject Resource</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="RejectResource" asp-route-id="@Model.Id" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <p>Are you sure you want to reject <strong>@Model.Title</strong>?</p>
                    <div class="mb-3">
                        <label for="rejectionReason" class="form-label">Reason for Rejection:</label>
                        <textarea id="rejectionReason" name="rejectionReason" class="form-control" 
                                  rows="3" required placeholder="Please provide a reason for rejection..."></textarea>
                        <div class="form-text">This will be sent to the creator to help them improve the resource.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-times me-1"></i> Reject
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .content-preview {
            max-height: 500px;
            overflow-y: auto;
        }
        
        /* Style for resource content */
        .content-preview h1, 
        .content-preview h2, 
        .content-preview h3, 
        .content-preview h4, 
        .content-preview h5, 
        .content-preview h6 {
            margin-top: 1rem;
            margin-bottom: 0.5rem;
        }
        
        .content-preview ul, 
        .content-preview ol {
            padding-left: 1.5rem;
        }
    </style>
} 