@model THYNK.Models.DisasterReport
@{
    ViewData["Title"] = "Report Details";
    Layout = "_AdminLayout";
}

<div class="card admin-card mb-4">
    <div class="card-header bg-primary text-white">
        <div class="d-flex align-items-center">
            <div class="card-icon bg-white text-primary">
                <i class="fas fa-file-alt"></i>
            </div>
            <div>
                <h5 class="m-0">Incident Report Details</h5>
                <small>View and manage incident report information</small>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="row">
            <div class="col-md-8">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="m-0">Report Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <h6 class="text-muted mb-2">Title</h6>
                                <p class="mb-0">@Model.Title</p>
                            </div>
                            <div class="col-md-6">
                                <h6 class="text-muted mb-2">Status</h6>
                                <span class="badge @(Model.Status == THYNK.Models.ReportStatus.Pending ? "bg-warning" : 
                                                  Model.Status == THYNK.Models.ReportStatus.Verified ? "bg-info" : 
                                                  Model.Status == THYNK.Models.ReportStatus.InProgress ? "bg-primary" : 
                                                  Model.Status == THYNK.Models.ReportStatus.Resolved ? "bg-success" : "bg-secondary")">
                                    @Model.Status
                                </span>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <h6 class="text-muted mb-2">Type</h6>
                                <span class="badge bg-secondary">@Model.Type</span>
                            </div>
                            <div class="col-md-6">
                                <h6 class="text-muted mb-2">Severity</h6>
                                <span class="badge @(Model.Severity == THYNK.Models.SeverityLevel.Low ? "bg-info" : 
                                                  Model.Severity == THYNK.Models.SeverityLevel.Medium ? "bg-warning" : 
                                                  Model.Severity == THYNK.Models.SeverityLevel.High ? "bg-danger" : "bg-dark")">
                                    @Model.Severity
                                </span>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-12">
                                <h6 class="text-muted mb-2">Description</h6>
                                <p class="mb-0">@Model.Description</p>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <h6 class="text-muted mb-2">Location</h6>
                                <p class="mb-0">
                                    @if (!string.IsNullOrEmpty(Model.Location))
                                    {
                                        @Model.Location
                                    }
                                    else
                                    {
                                        <span class="text-muted">Not specified</span>
                                    }
                                </p>
                            </div>
                            <div class="col-md-6">
                                <h6 class="text-muted mb-2">Date Reported</h6>
                                <p class="mb-0">@Model.DateReported.ToString("MMM dd, yyyy HH:mm")</p>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <h6 class="text-muted mb-2">Purok/Street</h6>
                                <p class="mb-0">@(String.IsNullOrEmpty(Model.Purok) || Model.Purok == "Unknown" ? "Not specified" : Model.Purok)</p>
                            </div>
                            <div class="col-md-3">
                                <h6 class="text-muted mb-2">Barangay</h6>
                                <p class="mb-0">@(String.IsNullOrEmpty(Model.Barangay) || Model.Barangay == "Unknown" ? "Not specified" : Model.Barangay)</p>
                            </div>
                            <div class="col-md-3">
                                <h6 class="text-muted mb-2">City/Municipality</h6>
                                <p class="mb-0">@(String.IsNullOrEmpty(Model.City) || Model.City == "Unknown" ? "Not specified" : Model.City)</p>
                            </div>
                            <div class="col-md-3">
                                <h6 class="text-muted mb-2">Country</h6>
                                <p class="mb-0">@Model.Country</p>
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.AdditionalInfo))
                        {
                            <div class="row mb-3">
                                <div class="col-12">
                                    <h6 class="text-muted mb-2">Additional Information</h6>
                                    <p class="mb-0">@Model.AdditionalInfo</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="m-0">Report Image</h5>
                        </div>
                        <div class="card-body">
                            <img src="@Model.ImageUrl" alt="Report Image" class="img-fluid rounded" />
                        </div>
                    </div>
                }
            </div>

            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-header bg-primary text-white">
                        <h5 class="m-0"><i class="fas fa-map-marked-alt me-2"></i>Location Map</h5>
                    </div>
                    <div class="card-body p-0">
                        <div id="map" class="map-preview" style="height: 300px;"></div>
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="m-0">Reporter Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <h6 class="text-muted mb-2">Name</h6>
                            <p class="mb-0">@(Model.User?.FirstName + " " + Model.User?.LastName ?? "Unknown")</p>
                        </div>
                        <div class="mb-3">
                            <h6 class="text-muted mb-2">Email</h6>
                            <p class="mb-0">@(Model.User?.Email ?? "Not available")</p>
                        </div>
                    </div>
                </div>

                @if (Model.AssignedTo != null)
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="m-0">Assigned To</h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <h6 class="text-muted mb-2">Organization</h6>
                                <p class="mb-0">@Model.AssignedTo.OrganizationName</p>
                            </div>
                            <div class="mb-3">
                                <h6 class="text-muted mb-2">Name</h6>
                                <p class="mb-0">@(Model.AssignedTo.FirstName + " " + Model.AssignedTo.LastName)</p>
                            </div>
                            <div class="mb-3">
                                <h6 class="text-muted mb-2">Assigned Date</h6>
                                <p class="mb-0">@Model.AssignedAt?.ToString("MMM dd, yyyy HH:mm")</p>
                            </div>
                        </div>
                    </div>
                }

                <div class="card">
                    <div class="card-header">
                        <h5 class="m-0">Actions</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            @if (Model.Status == THYNK.Models.ReportStatus.Pending)
                            {
                                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#verifyModal">
                                    <i class="fas fa-check me-2"></i>Verify Report
                                </button>
                                <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#declineModal">
                                    <i class="fas fa-times me-2"></i>Decline Report
                                </button>
                            }
                            @if (Model.Status == THYNK.Models.ReportStatus.Verified)
                            {
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#assignModal">
                                    <i class="fas fa-user-check me-2"></i>Assign to LGU/SLU
                                </button>
                            }
                            <a href="@Url.Action("IncidentReports", "Admin")" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-2"></i>Back to Reports
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Verify Modal -->
@if (Model.Status == THYNK.Models.ReportStatus.Pending)
{
    <div class="modal fade" id="verifyModal" tabindex="-1" aria-labelledby="verifyModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="verifyModalLabel">Verify Report</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to verify this report?</p>
                    <div class="alert alert-info">
                        <h6 class="mb-2">Report Details:</h6>
                        <p class="mb-1"><strong>Title:</strong> @Model.Title</p>
                        <p class="mb-1"><strong>Type:</strong> @Model.Type</p>
                        <p class="mb-1"><strong>Severity:</strong> @Model.Severity</p>
                        <p class="mb-1"><strong>Location:</strong> @Model.Location</p>
                        <p class="mb-1">
                            <strong>Reported by:</strong> 
                            @if (Model.IsAnonymous)
                            {
                                <span><i class="fas fa-user-secret me-1"></i> Anonymous</span>
                            }
                            else
                            {
                                @(Model.User?.FirstName + " " + Model.User?.LastName ?? "Unknown")
                            }
                        </p>
                        <p class="mb-0"><strong>Date:</strong> @Model.DateReported.ToString("MMM dd, yyyy HH:mm")</p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form asp-action="VerifyReport" asp-route-id="@Model.Id" method="post">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-check me-2"></i>Verify Report
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Decline Modal -->
    <div class="modal fade" id="declineModal" tabindex="-1" aria-labelledby="declineModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="declineModalLabel">Decline Report</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="DeclineReport" asp-route-id="@Model.Id" method="post">
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <p>Are you sure you want to decline this report?</p>
                        <div class="alert alert-warning">
                            <h6 class="mb-2">Report Details:</h6>
                            <p class="mb-1"><strong>Title:</strong> @Model.Title</p>
                            <p class="mb-1"><strong>Type:</strong> @Model.Type</p>
                            <p class="mb-1"><strong>Severity:</strong> @Model.Severity</p>
                            <p class="mb-1"><strong>Location:</strong> @Model.Location</p>
                            <p class="mb-1">
                                <strong>Reported by:</strong> 
                                @if (Model.IsAnonymous)
                                {
                                    <span><i class="fas fa-user-secret me-1"></i> Anonymous</span>
                                }
                                else
                                {
                                    @(Model.User?.FirstName + " " + Model.User?.LastName ?? "Unknown")
                                }
                            </p>
                            <p class="mb-0"><strong>Date:</strong> @Model.DateReported.ToString("MMM dd, yyyy HH:mm")</p>
                        </div>
                        <div class="mb-3">
                            <label for="reason" class="form-label">Reason for declining:</label>
                            <textarea class="form-control" id="reason" name="reason" rows="3" required></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-times me-2"></i>Decline Report
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

<!-- Assign Modal -->
@if (Model.Status == THYNK.Models.ReportStatus.Verified)
{
    <div class="modal fade" id="assignModal" tabindex="-1" aria-labelledby="assignModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="assignModalLabel">Assign Report to LGU/SLU</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="AssignReport" asp-route-id="@Model.Id" method="post">
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <div class="alert alert-info">
                            <h6 class="mb-2">Report Details:</h6>
                            <p class="mb-1"><strong>Title:</strong> @Model.Title</p>
                            <p class="mb-1"><strong>Type:</strong> @Model.Type</p>
                            <p class="mb-1"><strong>Severity:</strong> @Model.Severity</p>
                            <p class="mb-1"><strong>Location:</strong> @Model.Location</p>
                            <p class="mb-1">
                                <strong>Reported by:</strong> 
                                @if (Model.IsAnonymous)
                                {
                                    <span><i class="fas fa-user-secret me-1"></i> Anonymous</span>
                                }
                                else
                                {
                                    @(Model.User?.FirstName + " " + Model.User?.LastName ?? "Unknown")
                                }
                            </p>
                            <p class="mb-0"><strong>Date:</strong> @Model.DateReported.ToString("MMM dd, yyyy HH:mm")</p>
                        </div>
                        <div class="mb-3">
                            <label for="lguId" class="form-label">Select LGU/SLU User:</label>
                            <select id="lguId" name="lguId" class="form-select" required>
                                <option value="">-- Select LGU/SLU --</option>
                                @if (ViewBag.LGUUsers != null)
                                {
                                    @foreach (var lgu in ViewBag.LGUUsers)
                                    {
                                        <option value="@lgu.Id">@lgu.OrganizationName - @lgu.FirstName @lgu.LastName</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-user-check me-2"></i>Assign Report
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.js"></script>
    <link href="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.css" rel="stylesheet">
    <script>
        // Initialize the map
        mapboxgl.accessToken = 'pk.eyJ1IjoiY2hhYW5nZ2cwMTkzIiwiYSI6ImNtOHo5ODF6cDAxcTUyaXB0ODBtYXlhN3oifQ.SJ-eGgWUplbUFNE_UwK7JA';
        const map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [@Model.Longitude, @Model.Latitude],
            zoom: 15
        });

        // Add map controls
        map.addControl(new mapboxgl.NavigationControl());
        
        // Get marker color based on severity
        function getSeverityColor(severity) {
            switch(severity) {
                case 'Low':
                    return '#0D6EFD'; // Bootstrap primary blue
                case 'Medium':
                    return '#FFC107'; // Bootstrap warning yellow
                case 'High':
                    return '#DC3545'; // Bootstrap danger red
                case 'Critical':
                    return '#212529'; // Bootstrap dark
                default:
                    return '#6C757D'; // Bootstrap secondary gray
            }
        }

        // Create popup content
        const popup = new mapboxgl.Popup({ offset: 25 })
            .setHTML(`
                <div class="p-2">
                    <h6 class="mb-1">@Model.Title</h6>
                    <p class="mb-1 small text-muted">@Model.Type</p>
                    <p class="mb-0 small">
                        <span class="badge @(Model.Severity == THYNK.Models.SeverityLevel.Low ? "bg-info" : 
                                          Model.Severity == THYNK.Models.SeverityLevel.Medium ? "bg-warning" : 
                                          Model.Severity == THYNK.Models.SeverityLevel.High ? "bg-danger" : "bg-dark")">
                            @Model.Severity
                        </span>
                    </p>
                </div>
            `);
        
        // Add a marker with popup
        const marker = new mapboxgl.Marker({
            color: getSeverityColor('@Model.Severity')
        })
        .setLngLat([@Model.Longitude, @Model.Latitude])
        .setPopup(popup)
        .addTo(map);

        // Show popup by default
        popup.addTo(map);
    </script>
} 