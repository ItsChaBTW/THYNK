@model IEnumerable<THYNK.Models.CommunityUpdate>
@{
    ViewData["Title"] = "Pending Community Posts";
    Layout = "_AdminLayout";
}

<div class="container-fluid px-4">
    <div class="card">
        <div class="card-header bg-primary text-white">
            <div class="d-flex align-items-center">
                <div class="card-icon bg-white text-primary">
                    <i class="fas fa-clock"></i>
                </div>
                <div>
                    <h5 class="m-0">Pending Community Posts</h5>
                    <small>Review and moderate community posts</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div id="postsList">
            @if (!Model.Any())
            {
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i> There are no pending community posts at this time.
                </div>
            }
            else
            {
                    foreach (var post in Model)
                    {
                        <div class="card shadow-sm border-0 mb-4 post-card" id="post-@post.Id">
                            <div class="card-body p-4">
                                <div class="d-flex align-items-center mb-3">
                                    <div class="avatar-circle me-3">
                                        <i class="fas fa-user"></i>
                                    </div>
                                    <div class="flex-grow-1">
                                        <h6 class="mb-0">@(post.User != null ? $"{post.User.FirstName} {post.User.LastName}" : "Unknown User")</h6>
                                        <small class="text-muted">@post.DatePosted.ToString("MMM dd, yyyy HH:mm")</small>
                                        @if (post.User is LGUUser lguUser)
                                                {
                                            <div><small class="text-info">@lguUser.OrganizationName</small></div>
                                                }
                                            </div>
                                        <div class="btn-group">
                                        <button type="button" class="btn btn-sm btn-success" onclick="openModal('approveModal@(post.Id)')">
                                            <i class="fas fa-check"></i> Approve
                                            </button>
                                        <button type="button" class="btn btn-sm btn-danger" onclick="openModal('rejectModal@(post.Id)')">
                                            <i class="fas fa-times"></i> Reject
                                            </button>
                                        </div>
                                            </div>
                                <div class="post-content mb-3">
                                    <p class="mb-2">@post.Content</p>
                                                                @if (!string.IsNullOrEmpty(post.Location))
                                                                {
                                        <p class="text-muted mb-0">
                                            <i class="fas fa-map-marker-alt me-1"></i> @post.Location
                                                                    </p>
                                                                }
                                                            </div>
                                @if (!string.IsNullOrEmpty(post.ImageUrl))
                                {
                                    <div class="post-image mb-3">
                                        <img src="@post.ImageUrl" alt="Post image" class="img-fluid rounded">
                                                        </div>
                                }
                                    </div>
                                </div>

                                <!-- Approve Modal -->
                        <div class="custom-modal" id="approveModal@(post.Id)" style="display: none;">
                            <div class="custom-modal-dialog">
                                <div class="custom-modal-content">
                                    <div class="custom-modal-header">
                                        <h5 class="custom-modal-title">Approve Post</h5>
                                        <button type="button" class="custom-modal-close" onclick="closeModal('approveModal@(post.Id)')">&times;</button>
                                            </div>
                                    <div class="custom-modal-body">
                                                <p>Are you sure you want to approve this post?</p>
                                        <p>Once approved, it will be visible to all users in the community feed.</p>
                                                </div>
                                    <div class="custom-modal-footer">
                                        <button type="button" class="btn btn-secondary" onclick="closeModal('approveModal@(post.Id)')">Cancel</button>
                                        <form asp-action="ModeratePost" asp-route-postId="@post.Id" asp-route-action="approve" method="post" class="d-inline">
                                                    @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-success">Approve Post</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Reject Modal -->
                        <div class="custom-modal" id="rejectModal@(post.Id)" style="display: none;">
                            <div class="custom-modal-dialog">
                                <div class="custom-modal-content">
                                    <div class="custom-modal-header">
                                        <h5 class="custom-modal-title">Reject Post</h5>
                                        <button type="button" class="custom-modal-close" onclick="closeModal('rejectModal@(post.Id)')">&times;</button>
                                            </div>
                                    <form asp-action="ModeratePost" asp-route-postId="@post.Id" asp-route-action="reject" method="post">
                                                @Html.AntiForgeryToken()
                                        <div class="custom-modal-body">
                                                    <p>Are you sure you want to reject this post?</p>
                                            <p>This action will remove the post and notify the user.</p>
                                                    <div class="mb-3">
                                                <label for="rejectionReason@(post.Id)" class="form-label">Reason for Rejection:</label>
                                                <textarea id="rejectionReason@(post.Id)" name="rejectionReason" class="form-control" rows="3" required></textarea>
                                                <div class="form-text">Please provide a reason for rejection that will be included in the notification email.</div>
                                                    </div>
                                                </div>
                                        <div class="custom-modal-footer">
                                            <button type="button" class="btn btn-secondary" onclick="closeModal('rejectModal@(post.Id)')">Cancel</button>
                                            <button type="submit" class="btn btn-danger">Reject Post</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            }
                }
                </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script>
        // Create connection
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/adminHub")
            .withAutomaticReconnect([0, 2000, 5000, 10000, 20000]) // Retry connection with increasing delays
            .build();

        // Start the connection
        async function startConnection() {
            try {
                await connection.start();
                console.log("SignalR Connected");
            } catch (err) {
                console.error("SignalR Connection Error: ", err);
                setTimeout(startConnection, 5000); // Retry connection after 5 seconds
            }
        }

        startConnection();

        // Handle receiving dashboard stats
        connection.on("ReceiveDashboardStats", (pendingLGUCount, pendingReportsCount, pendingPostsCount) => {
            console.log("Received dashboard stats:", { pendingLGUCount, pendingReportsCount, pendingPostsCount });
            // If there are no pending posts, show the "no posts" message
            if (pendingPostsCount === 0) {
                const postsList = document.getElementById('postsList');
                postsList.innerHTML = `
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i> There are no pending community posts at this time.
                    </div>
                `;
            }
        });

        // Handle post updates
        connection.on("PostUpdated", (postId, isApproved) => {
            console.log("Post updated:", { postId, isApproved });
            const postElement = document.getElementById(`post-${postId}`);
            if (postElement) {
                // Add fade out effect
                postElement.style.transition = "opacity 0.3s ease";
                postElement.style.opacity = "0";
                
                setTimeout(() => {
                    postElement.remove();
                    
                    // Check if there are any remaining posts
                    const remainingPosts = document.querySelectorAll('.post-card');
                    if (remainingPosts.length === 0) {
                        const postsList = document.getElementById('postsList');
                        postsList.innerHTML = `
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle me-2"></i> There are no pending community posts at this time.
                            </div>
                        `;
                    }
                }, 300);
            }
        });

        // Connection error handling
        connection.onclose(async () => {
            console.log("SignalR Connection Closed");
            await startConnection();
        });

        function openModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.style.display = 'block';
                document.body.style.overflow = 'hidden';
            }
        }

        function closeModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.style.display = 'none';
                document.body.style.overflow = '';
            }
        }
    </script>
} 